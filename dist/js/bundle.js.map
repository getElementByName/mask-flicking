{"version":3,"sources":["webpack:///js/bundle.js","webpack:///webpack/bootstrap d5b34ea2da3373461da3","webpack:///./node_modules/@egjs/component/dist/component.js","webpack:///./src/index.ts","webpack:///./src/MaskFlicking.ts","webpack:///./node_modules/@egjs/flicking/dist/flicking.js","webpack:///./node_modules/@egjs/movablecoord/dist/movablecoord.js","webpack:///./node_modules/hammerjs/hammer.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","root","factory","this","value","_classCallCheck","instance","Constructor","TypeError","_typeof","Symbol","iterator","obj","constructor","_createClass","defineProperties","target","props","length","descriptor","writable","key","protoProps","staticProps","Component","_eventHandler","options","arguments","_key","undefined","eventName","customEvent","handlerList","concat","eventType","isCanceled","arg","stop","_len","restParam","Array","_key2","apply","handlerToAttach","eventHash","once","self","on","listener","_len2","_key3","off","push","handlerToDetach","k","handlerFunction","splice","_component","MaskFlicking_1","MaskFlicking","default","Flicking","rootElement","_this","flicking","activePanel","flickEnd","e","nowPanel","getElement","getIndex","prePanel","$","removeClass","addClass","__WEBPACK_EXTERNAL_MODULE_7__","__WEBPACK_EXTERNAL_MODULE_8__","win","window","Math","Function","document","DATA_HEIGHT","IS_ANDROID2","SUPPORT_WILLCHANGE","SUPPORT_TRANSFORM","EVENTS","_browser","beforeFlickStart","beforeRestore","flick","restore","style","documentElement","CSS","supports","test","navigator","userAgent","_interopRequireDefault","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","_component2","_movablecoord","_movablecoord2","_utils","_consts","consts","newObj","_config","_eventHandler2","_Mixin$with","element","_prefix","$wrapper","utils","$children","children","Error","_setOptions","_setConfig","hasClickBug","_setPointerEvents","_build","_bindEvents","_applyPanelsCss","_arrangePanels","hwAccelerable","_setHint","adaptiveHeight","_setAdaptiveHeight","_adjustContainerCss","arrVal","previewPadding","bounce","extend","OPTIONS","val","isArray","padding","$nodes","classList","contains","prefix","$container","slice","conf","_conf","CONFIG","panel","$list","minCount","origPanelStyle","wrapper","className","getAttribute","container","list","map","v","useLayerHack","eventPrefix","horizontal","forEach","dirData","panelCount","count","origCount","_setPadding","sizeValue","_getDataByDirection","size","cssValue","position","zIndex","width","height","top","css","$parent","parentNode","createElement","appendChild","add","getUnitValue","boxSizing","left","_addClonePanels","_mcInst","min","max","margin","circular","easing","panelEffect","deceleration","_setDefaultPanel","defaultIndex","build","paddingSum","reverse","join","overflow","keys","wrapperStyle","getComputedStyle","paddingType","getNumValue","_this2","cloneCount","cloneNodes","cloneNode","_movePanelPosition","append","listToMove","index","lastIndex","coords","baseIndex","_getBasePositionIndex","_setPanelNo","no","currNo","currIndex","_setTranslate","_setMovableCoord","abs","sort","indexToMove","touch","direction","_arrangePanelPosition","_applyPanelsPos","bind","_setMoveStyle","$el","coordsValue","$element","transform","translate","$dummyAnchor","phase","coordValue","paddingTop","parseInt","_getCoordsValue","x","y","focus","method","isDirVal","duration","coord","willChange","data","next","floor","mcInst","scale","interruptable","inputType","thresholdAngle","hold","_holdHandler","change","_changeHandler","release","_releaseHandler","animationStart","_animationStartHandler","animationEnd","_animationEndHandler","unbind","$panel","DIRECTION_LEFT","DIRECTION_RIGHT","$first","querySelector","outerHeight","setAttribute","_triggerBeforeRestore","replace","_triggerEvent","depaPos","destPos","animating","_triggerRestore","restoreCall","_setPhaseValue","pos","changed","_isMovable","distance","_getNumByDirection","_revertPanelNo","num","isObject","pointer","holding","hammerEvent","preventSystemEvent","pointerEvents","isMovable","threshold","currPos","param","trigger","_getElement","physical","result","total","currentIndex","_setValueToMove","getNextElement","getNextIndex","getAllElements","getPrevElement","getPrevIndex","getTotalCount","isPlaying","_movePanel","_movePanelByPhase","durationValue","prev","moveTo","noValue","isPositive","_checkPadding","split","Number","resize","_utils$css","panelSize","maxCoords","querySelectorAll","removeAttribute","enableInput","disableInput","destroy","removeChild","Mixin","with","holdPos","lastPos","pow","superclass","_superclass","_class","posIndex","eventRes","movedPx","indexOf","round","_flicking","_flicking2","el","match","attr","trim","nodeName","nodeType","arr","objectN","source","shift","getAsNumber","applyStyle","defVal","isNaN","rx","String","getOuter","type","toLocaleLowerCase","outerWidth","isHWAccelerable","ua","version","useragent","isHA","MixinBuilder","mixins","reduce","__WEBPACK_EXTERNAL_MODULE_9__","__WEBPACK_EXTERNAL_MODULE_10__","SUPPORT_TOUCH","UNIQUEKEY","DIRECTION","DIRECTION_NONE","DIRECTION_UP","DIRECTION_DOWN","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","DIRECTION_ALL","Coordinate","getDirectionByAngle","angle","toAngle","isHorizontal","userDirection","isVertical","getPointOfIntersection","boxLT","boxRB","toDestPos","xd","yd","isOutside","isOutToOut","getNextOffsetPos","speeds","normalSpeed","sqrt","getDurationFromPos","normalPos","isCircular","getCircularPos","toPos","toFixed","multi","dummy","innerHTML","childNodes","jQuery","toArray","_extends","assign","_HammerManager","_HammerManager2","_animationHandler","_animationHandler2","MovableCoord","maximumDuration","Infinity","_reviseOptions","_hammerManager","_pos","remove","getHammer","inputControl","_hammerjs","_hammerjs2","HammerManager","_hammers","createHammer","bindOptions","inputClass","handler","attachHammerEvents","Manager","recognizers","Pan","cssProps","userSelect","touchSelect","touchCallout","userDrag","hammer","enable","isFirst","_setCurrentTarget","_start","isFinal","_end","_move","detachHammerEvents","convertInputType","hasTouch","hasMouse","TouchInput","MouseInput","keyValue","random","Date","getTime","isEnable","option","set","_Coordinate","_Coordinate2","_raf","_animateParam","_animationEnd","_restore","_grab","orgPos","_setPosAndTriggerChange","cancelAnimationFrame","_prepareParam","absPos","newDuration","isBounce","done","complete","_animate","nextPos","setTo","_setInterrupt","startTime","info","loop","_frame","requestAnimationFrame","_animateTo","retTrigger","queue","dequeue","task","curTime","easingPer","_easing","toX","toY","setBy","_status","grabOutside","currentHammer","currentOptions","moveDistance","prevented","currentHanmmer","_isInterrupting","out","prevent","prevInput","session","offsetX","deltaX","offsetY","deltaY","srcEvent","preventDefault","stopPropagation","tv","tn","tx","initSlope","vX","velocityX","vY","velocityY","offset","_MovableCoord","_MovableCoord2","VERSION","__WEBPACK_AMD_DEFINE_RESULT__","exportName","setTimeoutContext","fn","timeout","context","setTimeout","bindFn","invokeArrayArg","each","deprecate","message","deprecationMessage","stack","log","console","warn","inherit","child","base","properties","childP","baseP","_super","boolOrFn","args","TYPE_FUNCTION","ifUndefined","val1","val2","addEventListeners","types","splitStr","addEventListener","removeEventListeners","removeEventListener","hasParent","node","parent","inStr","str","find","inArray","src","findByKey","uniqueArray","results","values","a","b","prefixed","prop","camelProp","toUpperCase","VENDOR_PREFIXES","uniqueId","_uniqueId","getWindowForElement","doc","ownerDocument","defaultView","parentWindow","Input","manager","callback","inputTarget","domHandler","ev","init","createInputInstance","SUPPORT_POINTER_EVENTS","PointerEventInput","SUPPORT_ONLY_TOUCH","TouchMouseInput","inputHandler","input","pointersLen","pointers","changedPointersLen","changedPointers","INPUT_START","INPUT_END","INPUT_CANCEL","computeInputData","emit","recognize","pointersLength","firstInput","simpleCloneInputData","firstMultiple","offsetCenter","center","getCenter","timeStamp","now","deltaTime","getAngle","getDistance","computeDeltaXY","offsetDirection","getDirection","overallVelocity","getVelocity","overallVelocityX","overallVelocityY","getScale","rotation","getRotation","maxPointers","computeIntervalInputData","offsetDelta","prevDelta","velocity","last","lastInterval","COMPUTE_INTERVAL","clientX","clientY","p1","p2","PROPS_XY","atan2","PI","start","end","PROPS_CLIENT_XY","evEl","MOUSE_ELEMENT_EVENTS","evWin","MOUSE_WINDOW_EVENTS","pressed","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","store","SingleTouchInput","evTarget","SINGLE_TOUCH_TARGET_EVENTS","SINGLE_TOUCH_WINDOW_EVENTS","started","normalizeSingleTouches","all","touches","changedTouches","TOUCH_TARGET_EVENTS","targetIds","getTouches","allTouches","INPUT_MOVE","identifier","targetTouches","changedTargetTouches","filter","mouse","primaryTouch","lastTouches","recordTouches","eventData","setLastTouch","lastTouch","lts","removeLastTouch","DEDUP_TIMEOUT","isSyntheticEvent","t","dx","dy","DEDUP_DISTANCE","TouchAction","cleanTouchActions","actions","TOUCH_ACTION_NONE","hasPanX","TOUCH_ACTION_PAN_X","hasPanY","TOUCH_ACTION_PAN_Y","TOUCH_ACTION_MANIPULATION","TOUCH_ACTION_AUTO","Recognizer","defaults","id","state","STATE_POSSIBLE","simultaneous","requireFail","stateStr","STATE_CANCELLED","STATE_ENDED","STATE_CHANGED","STATE_BEGAN","directionStr","getRecognizerByNameIfManager","otherRecognizer","recognizer","AttrRecognizer","PanRecognizer","pX","pY","PinchRecognizer","PressRecognizer","_timer","_input","RotateRecognizer","SwipeRecognizer","TapRecognizer","pTime","pCenter","Hammer","preset","handlers","oldCssProps","touchAction","toggleCssProps","item","recognizeWith","requireFailure","triggerDomEvent","event","gestureEvent","createEvent","initEvent","gesture","dispatchEvent","TEST_ELEMENT","output","nextKey","dest","merge","MOBILE_REGEX","MOUSE_INPUT_MAP","mousedown","mousemove","mouseup","button","which","pointerType","POINTER_INPUT_MAP","pointerdown","pointermove","pointerup","pointercancel","pointerout","IE10_POINTER_TYPE_ENUM","2","3","4","5","MSPointerEvent","PointerEvent","removePointer","eventTypeNormalized","toLowerCase","isTouch","storeIndex","pointerId","SINGLE_TOUCH_INPUT_MAP","touchstart","touchmove","touchend","touchcancel","TOUCH_INPUT_MAP","inputEvent","inputData","isMouse","sourceCapabilities","firesTouchEvents","PREFIXED_TOUCH_ACTION","NATIVE_TOUCH_ACTION","TOUCH_ACTION_MAP","touchMap","cssSupports","compute","update","getTouchAction","preventDefaults","hasNone","isTapPointer","isTapMovement","isTapTouchTime","preventSrc","STATE_RECOGNIZED","dropRecognizeWith","dropRequireFailure","hasRequireFailures","canRecognizeWith","additionalEvent","tryEmit","canEmit","inputDataClone","reset","process","attrTest","optionPointers","isRecognized","isValid","directionTest","hasMoved","inOut","time","validPointers","validMovement","validTime","clearTimeout","taps","interval","posThreshold","validTouchTime","failTimeout","validInterval","validMultiTap","tapCount","domEvents","contentZooming","tapHighlightColor","force","stopped","curRecognizer","existing","events","STATE_FAILED","Tap","Swipe","Pinch","Rotate","Press"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAI,EAAAJ,EACAK,GAAA,EACAH,WAUA,OANAJ,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,GAAA,EAGAF,EAAAD,QAvBA,GAAAD,KA4BAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,SAAAP,EAAAQ,EAAAC,GACAZ,EAAAa,EAAAV,EAAAQ,IACAG,OAAAC,eAAAZ,EAAAQ,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAZ,EAAAmB,EAAA,SAAAf,GACA,GAAAQ,GAAAR,KAAAgB,WACA,WAA2B,MAAAhB,GAAA,SAC3B,WAAiC,MAAAA,GAEjC,OADAJ,GAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAQ,EAAAC,GAAsD,MAAAR,QAAAS,UAAAC,eAAAjB,KAAAc,EAAAC,IAGtDtB,EAAAyB,EAAA,GAGAzB,IAAA0B,EAAA,KDMM,SAAUtB,EAAQD,EAASH,IEnEjC,SAAA2B,EAAAC,GAEAxB,EAAAD,QAAAyB,KAOCC,EAAA,WACD,gBAAA9B,GAKA,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAI,EAAAJ,EACAK,GAAA,EACAH,WAUA,OANAJ,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,GAAA,EAGAF,EAAAD,QAvBA,GAAAD,KA+DA,OAnCAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAK,EAAA,SAAAyB,GAAmD,MAAAA,IAGnD9B,EAAAU,EAAA,SAAAP,EAAAQ,EAAAC,GACAZ,EAAAa,EAAAV,EAAAQ,IACAG,OAAAC,eAAAZ,EAAAQ,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAZ,EAAAmB,EAAA,SAAAf,GACA,GAAAQ,GAAAR,KAAAgB,WACA,WAAmC,MAAAhB,GAAA,SACnC,WAAyC,MAAAA,GAEzC,OADAJ,GAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAQ,EAAAC,GAA8D,MAAAR,QAAAS,UAAAC,eAAAjB,KAAAc,EAAAC,IAG9DtB,EAAAyB,EAAA,GAGAzB,IAAA0B,EAAA,KAKA,SAAAtB,EAAAD,EAAAH,GAEA,YAWA,SAAA+B,GAAAC,EAAAC,GAAiD,KAAAD,YAAAC,IAA0C,SAAAC,WAAA,qCAR3FpB,OAAAC,eAAAZ,EAAA,cACA2B,OAAA,GAGA,IAAAK,GAAA,kBAAAC,SAAA,gBAAAA,QAAAC,SAAA,SAAAC,GAAoG,aAAAA,IAAqB,SAAAA,GAAmB,MAAAA,IAAA,kBAAAF,SAAAE,EAAAC,cAAAH,QAAAE,IAAAF,OAAAb,UAAA,eAAAe,IAE5IE,EAAA,WAAgC,QAAAC,GAAAC,EAAAC,GAA2C,OAAAtC,GAAA,EAAgBA,EAAAsC,EAAAC,OAAkBvC,IAAA,CAAO,GAAAwC,GAAAF,EAAAtC,EAA2BwC,GAAA5B,WAAA4B,EAAA5B,aAAA,EAAwD4B,EAAA7B,cAAA,EAAgC,SAAA6B,OAAAC,UAAA,GAAuDhC,OAAAC,eAAA2B,EAAAG,EAAAE,IAAAF,IAA+D,gBAAAZ,EAAAe,EAAAC,GAA2L,MAAlID,IAAAP,EAAAR,EAAAV,UAAAyB,GAAqEC,GAAAR,EAAAR,EAAAgB,GAA6DhB,KAkBxhB9B,GAAA+C,UAAA,WACA,QAAAA,KACAnB,EAAAF,KAAAqB,GAEArB,KAAAsB,iBACAtB,KAAAuB,WAkRA,MAtPAZ,GAAAU,IACAH,IAAA,SACAjB,MAAA,WACA,GAAAuB,UAAAT,QAAA,GACA,GAAAU,GAAAD,UAAAT,QAAA,MAAAW,GAAAF,UAAA,GACAvB,EAAAuB,UAAAT,QAAA,MAAAW,GAAAF,UAAA,EAEA,OADAxB,MAAAuB,QAAAE,GAAAxB,EACAD,KAGA,GAAAkB,GAAAM,UAAAT,QAAA,MAAAW,GAAAF,UAAA,EACA,oBAAAN,GACA,MAAAlB,MAAAuB,QAAAL,EAGA,QAAAM,UAAAT,OACA,MAAAf,MAAAuB,OAGA,IAAAA,GAAAL,CAGA,OAFAlB,MAAAuB,UAEAvB,QAkBAkB,IAAA,UACAjB,MAAA,SAAA0B,GACA,GAAAC,GAAAJ,UAAAT,OAAA,OAAAW,KAAAF,UAAA,GAAAA,UAAA,MAEAK,EAAA7B,KAAAsB,cAAAK,MAGA,MAFAE,EAAAd,OAAA,GAGA,QAIAc,KAAAC,SAEAF,EAAAG,UAAAJ,CAEA,IAAAK,IAAA,EACAC,GAAAL,GACApD,MAAA,EAEAoD,GAAAM,KAAA,WACA,MAAAF,IAAA,EAGA,QAAAG,GAAAX,UAAAT,OAAAqB,EAAAC,MAAAF,EAAA,EAAAA,EAAA,KAAAG,EAAA,EAA2FA,EAAAH,EAAcG,IACzGF,EAAAE,EAAA,GAAAd,UAAAc,EAGAF,GAAArB,QAAA,IACAkB,IAAAH,OAAAM,GAGA,KAAA5D,IAAAqD,GACAA,EAAArD,GAAA+D,MAAAvC,KAAAiC,EAGA,QAAAD,KA2BAd,IAAA,OACAjB,MAAA,SAAA0B,EAAAa,GACA,wBAAAb,EAAA,YAAArB,EAAAqB,SAAA,KAAAa,EAAA,CACA,GAAAC,GAAAd,EACAnD,MAAA,EACA,KAAAA,IAAAiE,GACAzC,KAAA0C,KAAAlE,EAAAiE,EAAAjE,GAEA,OAAAwB,MACI,mBAAA2B,IAAA,kBAAAa,GAAA,CACJ,GAAAG,GAAA3C,IACAA,MAAA4C,GAAAjB,EAAA,QAAAkB,KACA,OAAAC,GAAAtB,UAAAT,OAAAkB,EAAAI,MAAAS,GAAAC,EAAA,EAAsEA,EAAAD,EAAeC,IACrFd,EAAAc,GAAAvB,UAAAuB,EAGAP,GAAAD,MAAAI,EAAAV,GACAU,EAAAK,IAAArB,EAAAkB,KAIA,MAAA7C,SAkBAkB,IAAA,QACAjB,MAAA,SAAA0B,GACA,QAAA3B,KAAAsB,cAAAK,MAsBAT,IAAA,KACAjB,MAAA,SAAA0B,EAAAa,GACA,wBAAAb,EAAA,YAAArB,EAAAqB,SAAA,KAAAa,EAAA,CACA,GAAAC,GAAAd,EACA7C,MAAA,EACA,KAAAA,IAAA2D,GACAzC,KAAA4C,GAAA9D,EAAA2D,EAAA3D,GAEA,OAAAkB,MACI,mBAAA2B,IAAA,kBAAAa,GAAA,CACJ,GAAAX,GAAA7B,KAAAsB,cAAAK,OAEA,KAAAE,IACAA,EAAA7B,KAAAsB,cAAAK,OAGAE,EAAAoB,KAAAT,GAGA,MAAAxC,SAqBAkB,IAAA,MACAjB,MAAA,SAAA0B,EAAAuB,GAEA,YAAAvB,EAEA,MADA3B,MAAAsB,iBACAtB,IAIA,aAAAkD,EAAA,CACA,mBAAAvB,GAEA,MADA3B,MAAAsB,cAAAK,OAAAD,GACA1B,IAEA,IAAAyC,GAAAd,EACA7C,MAAA,EACA,KAAAA,IAAA2D,GACAzC,KAAAgD,IAAAlE,EAAA2D,EAAA3D,GAEA,OAAAkB,MAKA,GAAA6B,GAAA7B,KAAAsB,cAAAK,EACA,IAAAE,EAAA,CACA,GAAAsB,OAAA,GACAC,MAAA,EACA,KAAAD,EAAA,EAAAC,EAAgCA,EAAAvB,EAAAsB,GAAkCA,IAClE,GAAAC,IAAAF,EAAA,CACArB,IAAAwB,OAAAF,EAAA,EACA,QAKA,MAAAnD,UAIAqB,MAKA,SAAA9C,EAAAD,EAAAH,GAEA,YAGA,IAAAmF,GAAAnF,EAAA,EAEAI,GAAAD,QAAAgF,EAAAjC,gBF8EM,SAAU9C,EAAQD,EAASH,GAEjC,YAEAc,QAAOC,eAAeZ,EAAS,cAAgB2B,OAAO,GGletD,IAAAsD,GAAApF,EAAA,EACQG,GAAAkF,aADAD,EAAAC,aAERlF,EAAAmF,SAAgBD,aAAYD,EAAAC,eHwetB,SAAUjF,EAAQD,EAASH,GAEjC,YAEAc,QAAOC,eAAeZ,EAAS,cAAgB2B,OAAO,GI9etD,IAAAyD,GAAAvF,EAAA,GAEAqF,EAAA,WAIE,QAAAA,GAAYG,EAA0BpC,GAAtC,GAAAqC,GAAA5D,KACQ6D,EAAW,GAAIH,GAASC,EAAapC,EAC3CvB,MAAK6D,SAAWA,EAEhB7D,KAAK8D,cAELD,EAASjB,IACPmB,SAAY,SAACC,GACXJ,EAAKE,iBAiBb,MAZUN,GAAA9D,UAAAoE,YAAR,WACE,GAAMD,GAAW7D,KAAK6D,SAChBI,EAAWJ,EAASK,WAAWL,EAASM,YACxCC,EAAWpE,KAAKiE,QACnBG,KAAaH,IACXG,GACDC,EAAED,GAAUE,YAAY,MAE1BD,EAAEJ,GAAUM,SAAS,MACrBvE,KAAKiE,SAAWA,IAGtBT,IAESlF,GAAAkF,eACTlF,EAAAmF,QAAeD,GJ8eT,SAAUjF,EAAQD,EAASH;;;;;;;;;CKvgBjC,SAAA2B,EAAAC,GAEAxB,EAAAD,QAAAyB,EAAA5B,EAAA,GAAAA,EAAA,KAOC6B,EAAA,SAAAwE,EAAAC,GACD,gBAAAvG,GAKA,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAI,EAAAJ,EACAK,GAAA,EACAH,WAUA,OANAJ,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,GAAA,EAGAF,EAAAD,QAvBA,GAAAD,KA+DA,OAnCAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAK,EAAA,SAAAyB,GAAmD,MAAAA,IAGnD9B,EAAAU,EAAA,SAAAP,EAAAQ,EAAAC,GACAZ,EAAAa,EAAAV,EAAAQ,IACAG,OAAAC,eAAAZ,EAAAQ,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAZ,EAAAmB,EAAA,SAAAf,GACA,GAAAQ,GAAAR,KAAAgB,WACA,WAAmC,MAAAhB,GAAA,SACnC,WAAyC,MAAAA,GAEzC,OADAJ,GAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAQ,EAAAC,GAA8D,MAAAR,QAAAS,UAAAC,eAAAjB,KAAAc,EAAAC,IAG9DtB,EAAAyB,EAAA,GAGAzB,IAAA0B,EAAA,KAKA,SAAAtB,EAAAD,EAAAH,GAEA,YAGAc,QAAAC,eAAAZ,EAAA,cACA2B,OAAA,GAOA,IAAAyE,GAAA,mBAAAC,gBAAAC,YAAAD,OAAA,mBAAAhC,YAAAiC,YAAAjC,KAAAkC,SAAA,iBAGAC,EAAAJ,EAAAI,QAEAxG,GAAAqG,OAAAD,EACApG,EAAAwG,YAIA,SAAAvG,EAAAD,EAAAH,GAEA,YAGAc,QAAAC,eAAAZ,EAAA,cACA2B,OAAA,IAEA3B,EAAAyG,YAAAzG,EAAA0G,YAAA1G,EAAA2G,mBAAA3G,EAAA4G,kBAAA5G,EAAA6G,WAAAzD,EAEA,IAAA0D,GAAAjH,EAAA,GAGAgH,GACAE,iBAAA,mBACAC,cAAA,gBACAC,MAAA,QACAxB,SAAA,WACAyB,QAAA,WAQAN,EAAA,WACA,GAAAO,GAAAL,EAAAN,SAAAY,gBAAAD,KAEA,oBAAAA,IAAA,mBAAAA,MAIAR,EAAAG,EAAAT,OAAAgB,KAAAP,EAAAT,OAAAgB,IAAAC,UAAAR,EAAAT,OAAAgB,IAAAC,SAAA,2BAGAZ,EAAA,cAAAa,KAAAC,UAAAC,UAKAzH,GAAA6G,SACA7G,EAAA4G,oBACA5G,EAAA2G,qBACA3G,EAAA0G,cACA1G,EAAAyG,YANA,eAUA,SAAAxG,EAAAD,EAAAH,GAEA,YA+BA,SAAA6H,GAAAvF,GAAsC,MAAAA,MAAAlB,WAAAkB,GAAuCgD,QAAAhD,GAE7E,QAAAP,GAAAC,EAAAC,GAAiD,KAAAD,YAAAC,IAA0C,SAAAC,WAAA,qCAE3F,QAAA4F,GAAAtD,EAAAjE,GAAiD,IAAAiE,EAAa,SAAAuD,gBAAA,4DAAyF,QAAAxH,GAAA,gBAAAA,IAAA,kBAAAA,GAAAiE,EAAAjE,EAEvJ,QAAAyH,GAAAC,EAAAC,GAA0C,qBAAAA,IAAA,OAAAA,EAA+D,SAAAhG,WAAA,iEAAAgG,GAAuGD,GAAA1G,UAAAT,OAAAqH,OAAAD,KAAA3G,WAAyEgB,aAAeT,MAAAmG,EAAAhH,YAAA,EAAA6B,UAAA,EAAA9B,cAAA,KAA6EkH,IAAApH,OAAAsH,eAAAtH,OAAAsH,eAAAH,EAAAC,GAAAD,EAAAI,UAAAH,GAlCrXpH,OAAAC,eAAAZ,EAAA,cACA2B,OAAA,GAGA,IAAAqD,GAAAnF,EAAA,GAEAsI,EAAAT,EAAA1C,GAEAoD,EAAAvI,EAAA,GAEAwI,EAAAX,EAAAU,GAEAE,EAAAzI,EAAA,GAEA0I,EAAA1I,EAAA,GAEA2I,EAUA,SAAArG,GAAuC,GAAAA,KAAAlB,WAA6B,MAAAkB,EAAqB,IAAAsG,KAAiB,UAAAtG,EAAmB,OAAAS,KAAAT,GAAuBxB,OAAAS,UAAAC,eAAAjB,KAAA+B,EAAAS,KAAA6F,EAAA7F,GAAAT,EAAAS,GAAsG,OAAtB6F,GAAAtD,QAAAhD,EAAsBsG,GAV1PF,GAEAG,EAAA7I,EAAA,GAEAiH,EAAAjH,EAAA,GAEAmD,EAAAnD,EAAA,GAEA8I,EAAAjB,EAAA1E,GAmEAoC,EAAA,SAAAwD,GAQA,QAAAxD,GAAAyD,EAAA5F,EAAA6F,GACAlH,EAAAF,KAAA0D,EAEA,IAAAE,GAAAqC,EAAAjG,KAAAkH,EAAAxI,KAAAsB,MAEA4D,GAAAyD,SAAAT,EAAAU,MAAAjD,EAAA8C,EACA,IAAAI,GAAA3D,EAAAyD,UAAAzD,EAAAyD,SAAAG,QAEA,KAAA5D,EAAAyD,WAAAE,MAAAxG,OAEA,SAAA0G,OAAA,wFAoBA,OAfA7D,GAAA8D,YAAAnG,GACAqC,EAAA+D,WAAAJ,EAAAH,IAEAR,EAAAU,MAAAM,gBAAAhE,EAAAiE,kBAAA,cAEAjE,EAAAkE,SACAlE,EAAAmE,aAAA,GAEAnE,EAAAoE,kBACApE,EAAAqE,iBAEArE,EAAArC,QAAA2G,eAAApB,EAAA7B,oBAAArB,EAAAuE,WACAvE,EAAArC,QAAA6G,gBAAAxE,EAAAyE,qBAEAzE,EAAA0E,oBAAA,OACA1E,EAy1CA,MA93CAuC,GAAAzC,EAAAwD,GA8CAxD,EAAAhE,UAAAgI,YAAA,SAAAnG,GAEA,GAAAgH,IACAC,gBAAA,KACAC,QAAA,OAGAzI,MAAAuB,QAAAqF,EAAAU,MAAAoB,OAAA9B,EAAAU,MAAAoB,UAA2D1B,EAAA2B,SAAAJ,EAAAhH,EAE3D,QAAAL,KAAAqH,GAAA,CACA,GAAAK,GAAA5I,KAAAuB,QAAAL,EAEA,iBAAA0H,GACAA,QACIhC,EAAAU,MAAAuB,QAAAD,KACJA,EAAAL,EAAArH,IAGAlB,KAAAuB,QAAAL,GAAA0H,IAYAlF,EAAAhE,UAAAiI,WAAA,SAAAJ,EAAAH,GACA,GAAA7F,GAAAvB,KAAAuB,QACAuH,EAAAvH,EAAAiH,eACAO,EAAAxB,CAEAwB,GAAA,GAAAC,UAAAC,SAAA1H,EAAA2H,OAAA,gBACAH,IAAA,GACA/I,KAAAmJ,WAAAJ,EACAA,IAAAvB,UAIAuB,KAAAK,MAAA1K,KAAAqK,EAGA,IAAAM,GAAArJ,KAAAsJ,MAAA1C,EAAAU,MAAAoB,OAAA9B,EAAAU,MAAAoB,UAAoE1B,EAAAuC,SACpEC,OACAC,MAAAV,EACAW,SAAAZ,EAAA,GAAAA,EAAA,UAGAa,gBACAC,SACAC,UAAA7J,KAAAqH,SAAAyC,aAAA,eACArE,MAAAzF,KAAAqH,SAAAyC,aAAA,gBAEAC,WACAF,UAAA7J,KAAAmJ,YAAAnJ,KAAAmJ,WAAAW,aAAA,eACArE,MAAAzF,KAAAmJ,YAAAnJ,KAAAmJ,WAAAW,aAAA,gBAEAE,KAAAjB,EAAAkB,IAAA,SAAAC,GACA,OACAL,UAAAK,EAAAJ,aAAA,eACArE,MAAAyE,EAAAJ,aAAA,mBAIAK,aAAA5I,EAAA2G,gBAAApB,EAAA7B,mBACAmF,YAAAhD,GAAA,OAGA,iCAAA7F,EAAA8I,YAAAC,QAAA,SAAAJ,GACA,MAAAb,GAAAkB,QAAAtH,KAAA0D,EAAAlD,QAAA,aAAAyG,OASAxG,EAAAhE,UAAAoI,OAAA,WACA,GAAA0B,GAAAxJ,KAAAsJ,MAAAE,MACAjI,EAAAvB,KAAAuB,QACAgG,EAAAiC,EAAAC,MACAX,EAAAvH,EAAAiH,eAAA1G,SACAoH,EAAA3H,EAAA2H,OACAmB,EAAA9I,EAAA8I,WACAG,EAAAhB,EAAAiB,MAAAjB,EAAAkB,UAAAnD,EAAAxG,OACA0H,EAAAlH,EAAAkH,MAEAzI,MAAA2K,YAAA7B,GAAA,EACA,IAAA8B,GAAA5K,KAAA6K,qBAAArB,EAAAsB,KAAA,SAGAC,GACAC,SAAA,WACAC,OAAA,IACAC,MAAA,OACAC,OAAA,OAKA,IAFAd,IAAAU,EAAAK,IAAA,OAEApL,KAAAmJ,WACAvC,EAAAU,MAAA+D,IAAArL,KAAAmJ,WAAA4B,OACG,CACH,GAAAO,GAAA/D,EAAA,GAAAgE,WACApC,EAAA/D,EAAAN,SAAA0G,cAAA,MAEArC,GAAAU,UAAAX,EAAA,aACAtC,EAAAU,MAAA+D,IAAAlC,EAAA4B,GAEAxD,EAAA+C,QAAA,SAAAJ,GACA,MAAAf,GAAAsC,YAAAvB,KAGAoB,EAAAG,YAAAtC,GACAnJ,KAAAmJ,aAIA5B,EAAA+C,QAAA,SAAAJ,GACAA,EAAAlB,UAAA0C,IAAAxC,EAAA,UAEAtC,EAAAU,MAAA+D,IAAAnB,GACAc,SAAA,WACAE,MAAAtE,EAAAU,MAAAqE,aAAAf,EAAA,IACAO,OAAAvE,EAAAU,MAAAqE,aAAAf,EAAA,IACAgB,UAAA,aACAR,IAAA,EACAS,KAAA,MAIA7L,KAAA8L,oBACAtB,EAAAhB,EAAAiB,OAAAjB,EAAAC,SAAAL,MAAA1K,KAAAsB,KAAAmJ,WAAA3B,WAAAzG,QAIAf,KAAA+L,QAAA,GAAApF,GAAAlD,SACAuI,KAAA,KACAC,IAAAjM,KAAA6K,qBAAArB,EAAAsB,MAAAN,EAAA,OACA0B,OAAA,EACAC,UAAA,EACAC,OAAA7K,EAAA8K,YACAC,aAAA/K,EAAA+K,aACA7D,OAAAzI,KAAA6K,qBAAA,EAAApC,EAAA,KAAAA,EAAA,OAGAzI,KAAAuM,iBAAAhL,EAAAiL,eAUA9I,EAAAhE,UAAAiL,YAAA,SAAA7B,EAAA2D,GACA,GAAApC,GAAArK,KAAAuB,QAAA8I,WACAb,EAAAxJ,KAAAsJ,MAAAE,MACAkD,EAAA5D,EAAA,GAAAA,EAAA,GACAiC,MAEA2B,GAAAD,IACA1B,EAAAjC,QAAAuB,EAAA,KAAAvB,EAAA6D,UAAAC,KAAA,cAAA9D,EAAA8D,KAAA,eAGAH,IACA1B,EAAA8B,SAAA,SACA9B,EAAAa,UAAA,cAGA3M,OAAA6N,KAAA/B,GAAAhK,QAAA6F,EAAAU,MAAA+D,IAAArL,KAAAqH,SAAA0D,EAEA,IAAAgC,GAAAC,iBAAAhN,KAAAqH,UACA4F,EAAA5C,GAAA,gCAEAb,GAAAsB,KAAAlE,EAAAU,MAAA4F,YAAAH,EAAA1C,EAAA,oBAAAzD,EAAAU,MAAA4F,YAAAH,EAAA,UAAAE,EAAA,KAAArG,EAAAU,MAAA4F,YAAAH,EAAA,UAAAE,EAAA,OASAvJ,EAAAhE,UAAAoM,gBAAA,WACA,GAAAqB,GAAAnN,KAEAwJ,EAAAxJ,KAAAsJ,MAAAE,MACAgB,EAAAhB,EAAAkB,UACA0C,EAAA5D,EAAAE,SAAAc,EACAR,EAAAR,EAAAC,MACA4D,MAAA,EAGA,IAAArN,KAAAuB,QAAA4K,UAAA3B,EAAAhB,EAAAE,SAAA,CAKA,IAJA2D,EAAArD,EAAAC,IAAA,SAAAC,GACA,MAAAA,GAAAoD,WAAA,KAGAD,EAAAtM,OAAAqM,GACAC,IAAAvL,OAAAkI,EAAAC,IAAA,SAAAC,GACA,MAAAA,GAAAoD,WAAA,KAQA,OAJAD,GAAA/C,QAAA,SAAAJ,GACA,MAAAiD,GAAAhE,WAAAsC,YAAAvB,OAGAmD,EAAAtM,OAGA,UAUA2C,EAAAhE,UAAA6N,mBAAA,SAAA9C,EAAA+C,GACA,GAAAhE,GAAAxJ,KAAAsJ,MAAAE,MACAQ,EAAAR,EAAAC,MACAgE,EAAAzD,EAAA3G,OAAAmK,EAAA,EAAAhE,EAAAiB,UAEAjB,GAAAC,MAAA+D,EAAAxD,EAAAlI,OAAA2L,KAAA3L,OAAAkI,IASAtG,EAAAhE,UAAA6M,iBAAA,SAAAmB,GACA,GAAAlE,GAAAxJ,KAAAsJ,MAAAE,MACAmE,EAAAnE,EAAAiB,MAAA,EACAmD,MAAA,GACAC,MAAA,EAEA7N,MAAAuB,QAAA4K,UAEAuB,EAAA,GAAAA,GAAAC,GACA3N,KAAAuN,mBAAAG,GAAA,GAIAG,EAAA7N,KAAA8N,wBACA9N,KAAAuN,mBAAAM,GAAA,GAEA7N,KAAA+N,aACAC,GAAAN,EACAO,OAAAP,KAGGA,EAAA,GAAAA,GAAAC,IACH3N,KAAA+N,aACAL,QACAM,GAAAN,EACAQ,UAAAR,EACAO,OAAAP,IAGAE,IAAApE,EAAAsB,KAAA4C,EAAA,GAEA1N,KAAAmO,cAAAP,GACA5N,KAAAoO,iBAAA,SAAAxJ,KAAAyJ,IAAAT,EAAA,IAAAhJ,KAAAyJ,IAAAT,EAAA,aAWAlK,EAAAhE,UAAAuI,eAAA,SAAAqG,EAAAC,GACA,GAAAlF,GAAArJ,KAAAsJ,MACAE,EAAAH,EAAAG,MACAgF,EAAAnF,EAAAmF,MACAjE,EAAAlB,EAAAkB,QACAsD,MAAA,EAEA7N,MAAAuB,QAAA4K,WAEA9C,EAAAzH,YAAA2D,OAAA,EAGA+I,IACAC,IAAAC,EAAAC,UAAAlE,KAAAgE,EAAA,KACAvO,KAAA0O,sBAAAF,EAAAC,UAAAF,IAIAV,EAAA7N,KAAA8N,wBAEA9N,KAAA+N,aACAL,MAAAG,EACAK,UAAAL,IAIAxE,EAAAzH,YAAA2D,QAAAvF,KAAAoO,iBAAA,SAAA5E,EAAAsB,KAAAtB,EAAAkE,MAAA,UAGA1N,KAAA2O,mBAQAjL,EAAAhE,UAAAiP,gBAAA,WACA3O,KAAAsJ,MAAAE,MAAAC,MAAAa,QAAAtK,KAAAgI,gBAAA4G,KAAA5O,QAaA0D,EAAAhE,UAAAmP,cAAA,SAAAC,EAAAC,GACA/O,KAAA6O,cAAA/H,EAAA5B,kBAAA,SAAA8J,EAAApB,GACAhH,EAAAU,MAAA+D,IAAA2D,GACAC,UAAArI,EAAAU,MAAA4H,UAAAtB,EAAA,GAAAA,EAAA,GAAA5N,KAAAsJ,MAAAa,iBAEG,SAAA6E,EAAApB,GACHhH,EAAAU,MAAA+D,IAAA2D,GAA+BnD,KAAA+B,EAAA,GAAAxC,IAAAwC,EAAA,MAG/B5N,KAAA6O,cAAAC,EAAAC,IAUArL,EAAAhE,UAAAsI,gBAAA,WACA,GAAAqB,GAAArJ,KAAAsJ,KAGAxC,GAAA9B,aACAqE,EAAA8F,aAAAvI,EAAAU,MAAAjD,EAAA,oBAEAgF,EAAA8F,cAAAnP,KAAAqH,SAAAoE,YAAApC,EAAA8F,aAAAvI,EAAAU,MAAAjD,EAAA,wGAEArE,KAAAgI,gBAAA,SAAAkC,EAAA1L,GACA,GAAAoP,GAAA5N,KAAA6K,qBAAA7K,KAAAsJ,MAAAE,MAAAsB,KAAAtM,EAAA,QAEAoI,GAAAU,MAAA+D,IAAAnB,GACA2B,KAAA+B,EAAA,GACAxC,IAAAwC,EAAA,OAIA5N,KAAAgI,gBAAA,SAAAkC,EAAA1L,GACA,GAAAoP,GAAA5N,KAAA6K,qBAAA/D,EAAA5B,kBAAA,IAAA1G,EAAA,IAAAwB,KAAAsJ,MAAAE,MAAAsB,KAAAtM,EAAA,QAEAwB,MAAA6O,cAAA3E,EAAA0D,KAeAlK,EAAAhE,UAAA4I,oBAAA,SAAA8G,EAAAC,GACA,GAAAhG,GAAArJ,KAAAsJ,MACAE,EAAAH,EAAAG,MACAjI,EAAAvB,KAAAuB,QACA8I,EAAA9I,EAAA8I,WACAiF,EAAA/N,EAAAiH,eAAA,GACAuB,EAAA/J,KAAAmJ,WACAyE,EAAAyB,EACApP,MAAA,EAEA6G,GAAA9B,cACA4I,IACAA,IAAApE,EAAAsB,KAAAtB,EAAAkE,MAAA,IAGA,UAAA0B,GACArF,IAAAtE,MACAxF,EAAAsP,SAAAxF,EAAAM,EAAA,kBAEAA,EACApK,IAAA8J,EAAA8B,KAAA,OAEA5L,IAAAqP,IAAAvF,EAAAqB,IAAA,OAGApL,KAAAmO,gBAAAP,IAAArM,EAAA8I,YAAA,KACI,QAAA+E,IACJxB,EAAA5N,KAAAwP,gBAAA5B,GAEAhH,EAAAU,MAAA+D,IAAAtB,GACA8B,KAAA+B,EAAA6B,EACArE,IAAAwC,EAAA8B,EACAT,UAAArI,EAAAU,MAAA4H,UAAA,IAAA7F,EAAAc,gBAGAd,EAAA8F,aAAAQ,WAeAjM,EAAAhE,UAAA0O,iBAAA,SAAAwB,EAAAP,EAAAQ,EAAAC,GACA,GAAAC,GAAAV,CAMA,OAJAQ,KACAE,EAAA/P,KAAA6K,oBAAAkF,IAGA/P,KAAA+L,QAAA6D,GAAAG,EAAA,GAAAA,EAAA,GAAAD,IASApM,EAAAhE,UAAAyI,SAAA,WACA,GAAA1C,IAAeuK,WAAA,YAEfpJ,GAAAU,MAAA+D,IAAArL,KAAAmJ,WAAA1D,GACAmB,EAAAU,MAAA+D,IAAArL,KAAAsJ,MAAAE,MAAAC,MAAAhE,IAWA/B,EAAAhE,UAAAmL,oBAAA,SAAA5K,GACA,GAAAgQ,GAAAhQ,EAAA6B,QAGA,QADA9B,KAAAuB,QAAA8I,YAAA4F,EAAAtD,UACAsD,GAUAvM,EAAAhE,UAAAgP,sBAAA,SAAAD,EAAAF,GACA,GAAA2B,GAAAzB,IAAAzO,KAAAsJ,MAAAiB,QAAA,EAEAvK,MAAAuN,mBAAA3I,KAAAyJ,IAAAE,GAAA,GAAA2B,IAQAxM,EAAAhE,UAAAoO,sBAAA,WACA,MAAAlJ,MAAAuL,MAAAnQ,KAAAsJ,MAAAE,MAAAiB,MAAA,OASA/G,EAAAhE,UAAAqI,YAAA,SAAA6G,GACA,GAAArN,GAAAvB,KAAAuB,QACA8F,EAAArH,KAAAqH,SACA+I,EAAApQ,KAAA+L,OAEA6C,GACAwB,EAAAxB,KAAAvH,GACAgJ,MAAArQ,KAAA6K,sBAAA,MACA4D,UAAA9H,EAAAlD,QAAA,cAAAlC,EAAA8I,WAAA,0BACAiG,eAAA,EACAC,UAAAhP,EAAAgP,UACAC,eAAAjP,EAAAiP,iBACI5N,IACJ6N,KAAAzQ,KAAA0Q,aAAA9B,KAAA5O,MACA2Q,OAAA3Q,KAAA4Q,eAAAhC,KAAA5O,MACA6Q,QAAA7Q,KAAA8Q,gBAAAlC,KAAA5O,MACA+Q,eAAA/Q,KAAAgR,uBAAApC,KAAA5O,MACAiR,aAAAjR,KAAAkR,qBAAAtC,KAAA5O,QAGAoQ,EAAAe,OAAA9J,GAAArE,OAUAU,EAAAhE,UAAA2I,mBAAA,SAAAoG,GACA,GAAApF,GAAArJ,KAAAsJ,MACAiF,EAAAlF,EAAAkF,YACAhH,MAAA,GACA4D,MAAA,GAEAiG,EAAA,IAAA7C,EAGAvO,KAAA,OAAAyO,IAAA9H,EAAAlD,QAAA4N,gBAAA,QAAA5C,IAAA9H,EAAAlD,QAAA6N,iBAAA,yBAGAjI,EAAAG,MAAAC,MAAAJ,EAAAG,MAAA0E,UAAAK,GAEAgD,EAAAH,EAAAI,cAAA,eAEArG,GAAAoG,EAAAzH,aAAAhD,EAAA/B,aAEAoG,IACA5D,EAAA6J,EAAA5J,SACA2D,EAAAvE,EAAAU,MAAAmK,YAAAlK,EAAAxG,OAAA,GAAAqQ,EAAA3L,MAAA0F,OAAA,OAAAiG,GAAAG,GAEAA,EAAAG,aAAA5K,EAAA/B,YAAAoG,IAGAnL,KAAAqH,SAAA5B,MAAA0F,SAAA,MASAzH,EAAAhE,UAAAiS,sBAAA,SAAA3N,GACA,GAAAqF,GAAArJ,KAAAsJ,MACAkF,EAAAnF,EAAAmF,KAGAA,GAAAC,YAAApF,EAAAkB,QAAAqC,KAAA,IAAAgF,QAAApD,EAAAC,UAAA,IAmBApF,EAAAzH,YAAA4D,QAAAxF,KAAA6R,cAAA/K,EAAA3B,OAAAG,eACAwM,QAAA9N,EAAA8N,QACAC,QAAA/N,EAAA+N,UAGA1I,EAAAzH,YAAA4D,UACA,QAAAxB,MAAA9B,OACAmH,EAAAG,MAAAwI,WAAA,IASAtO,EAAAhE,UAAAuS,gBAAA,WACA,GAAArQ,GAAA5B,KAAAsJ,MAAA1H,WAaAA,GAAA4D,SAAAxF,KAAA6R,cAAA/K,EAAA3B,OAAAK,SACA5D,EAAAsQ,aAAA,GAUAxO,EAAAhE,UAAAyS,eAAA,SAAA/C,EAAAgD,GACA,GAAA/I,GAAArJ,KAAAsJ,MACA/H,EAAAvB,KAAAuB,QACAiI,EAAAH,EAAAG,KAEA,cAAA4F,IAAA5F,EAAA6I,QAAArS,KAAAsS,cAAA,CAkBA,IAAAtS,KAAA6R,cAAA/K,EAAA3B,OAAAE,iBAAA+M,GAEA,MADA5I,GAAA6I,QAAA7I,EAAAwI,WAAA,GACA,CAEAzQ,GAAA6G,gBAAApI,KAAAqI,mBAAAgB,EAAAmF,MAAAC,WAGA,IAAApF,EAAAkF,aAAAvO,KAAA+N,kBACG,QAAAqB,IACH7N,EAAA4K,UAAA3C,EAAA6I,SACArS,KAAAiI,gBAAA,EAAAoB,EAAAkF,cAGAzH,EAAA9B,aAAAhF,KAAAmO,gBAAA3E,EAAAsB,KAAAtB,EAAAkE,MAAA,IACArE,EAAAmF,MAAA+D,SAAAlJ,EAAAkF,YAAA,EAaA/E,EAAA6I,SAAArS,KAAA6R,cAAA/K,EAAA3B,OAAApB,UAIA,OADA/D,MAAAsI,oBAAA8G,IACA,GAQA1L,EAAAhE,UAAA8S,mBAAA,WACA,GAAAnJ,GAAArJ,KAAAsJ,KAEA,OAAAD,GAAAmF,MAAAC,YAAApF,EAAAkB,QAAA,SAQA7G,EAAAhE,UAAA+S,eAAA,WACA,GAAAjJ,GAAAxJ,KAAAsJ,MAAAE,MACAkJ,EAAA1S,KAAAwS,qBAEA9E,EAAAlE,EAAA0E,WAAA,EAAA1E,EAAA0E,UAAA1E,EAAAkE,MAAAgF,EACA1E,EAAAxE,EAAAyE,QAAA,EAAAzE,EAAAyE,OAAAzE,EAAAwE,GAAA0E,CAEA1S,MAAA+N,aACAL,QACAM,QAUAtK,EAAAhE,UAAAqO,YAAA,SAAAtN,GACA,GAAA+I,GAAAxJ,KAAAsJ,MAAAE,MACAiB,EAAAjB,EAAAkB,UAAA,EACAgI,EAAA1S,KAAAwS,oBAEA,IAAA5L,EAAAU,MAAAqL,SAAAlS,GACA,OAAAS,KAAAT,GACA+I,EAAAtI,GAAAT,EAAAS,OAIAsI,GAAA0E,UAAA1E,EAAAkE,MACAlE,EAAAyE,OAAAzE,EAAAwE,GAEAxE,EAAAkE,OAAAgF,EACAlJ,EAAAwE,IAAA0E,CAGAlJ,GAAAwE,GAAAvD,EACAjB,EAAAwE,GAAA,EACGxE,EAAAwE,GAAA,IACHxE,EAAAwE,GAAAvD,IAUA/G,EAAAhE,UAAAmI,kBAAA,SAAA7D,GACA,GAAA4O,GAAAhM,EAAAU,MAAA+D,IAAArL,KAAAmJ,WAAA,iBACAP,MAAA,EAEA5E,MAAA6O,SAAA7O,EAAA8O,aAAA9O,EAAA8O,YAAAC,oBAAA,SAAAH,EACAhK,EAAA,OACG5E,GAAA,SAAA4O,IACHhK,EAAA,QAGAA,GAAAhC,EAAAU,MAAA+D,IAAArL,KAAAmJ,YAA4C6J,cAAApK,KAU5ClF,EAAAhE,UAAA8P,gBAAA,SAAAT,GAEA,GAAAnB,GAAA5N,KAAA6K,oBAAAkE,EAEA,QACAU,EAAA7I,EAAAU,MAAAqE,aAAAiC,EAAA,IACA8B,EAAA9I,EAAAU,MAAAqE,aAAAiC,EAAA,MAUAlK,EAAAhE,UAAAyO,cAAA,SAAAY,GACA,GAAAnB,GAAA5N,KAAAwP,gBAAAT,EAEA/O,MAAA6O,cAAA7O,KAAAmJ,YAAAyE,EAAA6B,EAAA7B,EAAA8B,KAQAhM,EAAAhE,UAAA4S,WAAA,WACA,GAAA/Q,GAAAvB,KAAAuB,QACA6O,EAAApQ,KAAA+L,QACAkH,EAAArO,KAAAyJ,IAAArO,KAAAsJ,MAAAkF,MAAA+D,WAAAhR,EAAA2R,UACAjH,MAAA,GACAkH,MAAA,EAEA,UAAA5R,EAAA4K,UAAA8G,IACAhH,EAAAjM,KAAA6K,oBAAAuF,EAAA7O,QAAA0K,KAAA,IACAkH,EAAAnT,KAAA6K,oBAAAuF,EAAA/Q,OAAA,IAGA,GAAA8T,EAAAlH,KAKAgH,GAWAvP,EAAAhE,UAAAmS,cAAA,SAAA/S,EAAAsU,GACA,GAAA/J,GAAArJ,KAAAsJ,MACAE,EAAAH,EAAAG,KAQA,OALA1K,KAAAgI,EAAA3B,OAAApB,WACAyF,EAAAyE,OAAAzE,EAAAwE,GACAxE,EAAA0E,UAAA1E,EAAAkE,OAGA1N,KAAAqT,QAAAhK,EAAAe,YAAAtL,EAAA8H,EAAAU,MAAAoB,QACA3G,UAAAjD,EACA4O,MAAAlE,EAAA0E,UACAF,GAAAxE,EAAAyE,OACAQ,UAAApF,EAAAmF,MAAAC,WACG2E,KAYH1P,EAAAhE,UAAA4T,YAAA,SAAA7E,EAAAtH,EAAAoM,GACA,GAAA/J,GAAAxJ,KAAAsJ,MAAAE,MACA2C,EAAAnM,KAAAuB,QAAA4K,SACAiG,EAAA5I,EAAA0E,UACAgC,EAAAzB,IAAAzO,KAAAsJ,MAAAiB,QAAA,GACAiJ,EAAA,KACAC,MAAA,GACA/F,MAAA,EAEA6F,IACAE,EAAAjK,EAAAiB,MACAiD,EAAA0E,IAEAqB,EAAAjK,EAAAkB,UACAgD,EAAAlE,EAAAyE,OAGA,IAAAyF,GAAAhG,CAoBA,OAlBAwC,GACAxC,EAAA+F,EAAA,EACA/F,IACIvB,IACJuB,EAAA,GAGAA,EAAA,EACAA,IACIvB,IACJuB,EAAA+F,EAAA,GAIAC,IAAAhG,IACA8F,EAAArM,EAAAqC,EAAAC,MAAAyG,EAAAkC,EAAA,EAAAA,EAAA,GAAA1E,GAGA8F,GASA9P,EAAAhE,UAAAiU,gBAAA,SAAAzD,GACA,GAAA7G,GAAArJ,KAAAsJ,KAEAD,GAAAmF,MAAA+D,SAAAvS,KAAAuB,QAAA2R,UAAA,EACA7J,EAAAmF,MAAAC,UAAApF,EAAAkB,UAAA2F,IAYAxM,EAAAhE,UAAAyE,SAAA,SAAAoP,GACA,MAAAvT,MAAAsJ,MAAAE,MAAA+J,EAAA,uBAWA7P,EAAAhE,UAAAwE,WAAA,WACA,GAAAsF,GAAAxJ,KAAAsJ,MAAAE,KAEA,OAAAA,GAAAC,MAAAD,EAAA0E,YAWAxK,EAAAhE,UAAAkU,eAAA,WACA,MAAA5T,MAAAsT,YAAAtT,KAAAsJ,MAAAiB,QAAA,QAYA7G,EAAAhE,UAAAmU,aAAA,SAAAN,GACA,MAAAvT,MAAAsT,YAAAtT,KAAAsJ,MAAAiB,QAAA,MAAAgJ,IAWA7P,EAAAhE,UAAAoU,eAAA,WACA,MAAA9T,MAAAsJ,MAAAE,MAAAC,OAWA/F,EAAAhE,UAAAqU,eAAA,WACA,MAAA/T,MAAAsT,YAAAtT,KAAAsJ,MAAAiB,QAAA,QAYA7G,EAAAhE,UAAAsU,aAAA,SAAAT,GACA,MAAAvT,MAAAsT,YAAAtT,KAAAsJ,MAAAiB,QAAA,MAAAgJ,IAaA7P,EAAAhE,UAAAuU,cAAA,SAAAV,GACA,MAAAvT,MAAAsJ,MAAAE,MAAA+J,EAAA,sBAWA7P,EAAAhE,UAAAwU,UAAA,WACA,MAAAlU,MAAAsJ,MAAAE,MAAAwI,WAUAtO,EAAAhE,UAAAyU,WAAA,SAAAjE,EAAAJ,GACA,GAAAzG,GAAArJ,KAAAsJ,MACAE,EAAAH,EAAAG,MACAjI,EAAAvB,KAAAuB,OAEA,KAAAiI,EAAAwI,YAAA3I,EAAAmF,MAAAqE,QAUA,MANA7S,MAAA2T,gBAAAzD,IAEA3O,EAAA4K,UAAA,MAAAnM,KAAAkQ,EAAA,mCACAlQ,KAAAoU,kBAAA,SAAA5K,EAAAsB,MAAAoF,EAAA,SAAAJ,GAGA9P,MAWA0D,EAAAhE,UAAA0U,kBAAA,SAAAxE,EAAAhC,EAAAyG,GACA,GAAAvE,GAAAlJ,EAAAU,MAAA4F,YAAAmH,EAAArU,KAAAuB,QAAAuO,WAEA,IAAA9P,KAAAmS,eAAA,WACAnS,KAAAoO,iBAAAwB,EAAAhC,GAAA,EAAAkC,IACAA,GAAA9P,KAAAmS,eAAA,SAaAzO,EAAAhE,UAAAwQ,KAAA,SAAAJ,GACA,MAAA9P,MAAAmU,YAAA,EAAArE,IAYApM,EAAAhE,UAAA4U,KAAA,SAAAxE,GACA,MAAA9P,MAAAmU,YAAA,EAAArE,IAaApM,EAAAhE,UAAA6U,OAAA,SAAAC,EAAA1E,GACA,GAAAzG,GAAArJ,KAAAsJ,MACAE,EAAAH,EAAAG,MACA2C,EAAAnM,KAAAuB,QAAA4K,SACAuH,EAAAlK,EAAAkE,MACAa,MAAA,GACAkG,MAAA,GACAzG,EAAAwG,CAIA,QAFAxG,EAAApH,EAAAU,MAAA4F,YAAAc,GAAA,IAEA,GAAAA,GAAAxE,EAAAkB,WAAAsD,IAAAxE,EAAAwE,IAAAxE,EAAAwI,WAAA3I,EAAAmF,MAAAqE,QACA7S,MAGAuO,EAAAP,GAAA7B,EAAA3C,EAAAwE,GAAA0F,GACAe,EAAAlG,EAAA,EAGApC,GAAAvH,KAAAyJ,IAAAE,IAAAkG,EAAAjL,EAAAiB,OAAAiJ,EAAA,GAAAA,KACAnF,IAAAkG,GAAA,KAAAjL,EAAAiB,MACAgK,EAAAlG,EAAA,GAGAvO,KAAA+N,YAAA5B,GAA+B6B,OAAaA,KAAAN,MAAAM,IAC5ChO,KAAAsJ,MAAAiF,cACAvO,KAAA2T,gBAAAc,GAEAzU,KAAAoU,kBAAAjI,EAAA,iBAAA3C,EAAAsB,MAAAqB,EAAAoC,EAAAP,GAAA,GAAA8B,GAEA9P,OAQA0D,EAAAhE,UAAAgV,cAAA,WACA,GAAAnT,GAAAvB,KAAAuB,QACAiH,EAAAjH,EAAAiH,eAAA1G,SACAgH,EAAAlC,EAAAU,MAAA+D,IAAArL,KAAAqH,SAAA,WAAAsN,MAAA,IAEApT,GAAA8I,YAAAvB,EAAA6D,UAGA7D,KAAA,IACAA,EAAA7F,KAAA6F,EAAA,IAAAA,EAAA/H,OAAA,MAEA+H,IAAAmB,IAAA2K,SAGA,IAAApM,EAAAzH,QAAAyH,EAAA,KAAAM,EAAA,IAAAN,EAAA,KAAAM,EAAA,KACA9I,KAAA2K,YAAAnC,IAqBA9E,EAAAhE,UAAAmV,OAAA,WACA,GAAAC,GAEAzL,EAAArJ,KAAAsJ,MACA/H,EAAAvB,KAAAuB,QACAiI,EAAAH,EAAAG,MACAa,EAAA9I,EAAA8I,WACA0K,MAAA,KAEAxT,EAAAiH,eAAAoE,KAAA,KACA5M,KAAA0U,gBACAK,EAAAvL,EAAAsB,MACGT,IACH0K,EAAAvL,EAAAsB,KAAAlE,EAAAU,MAAA+D,IAAArL,KAAAqH,SAAA,YAGA,IAAA2N,GAAAhV,KAAA6K,qBAAAkK,GAAAvL,EAAAiB,MAAA,MAOA,IAJAJ,GAAAzD,EAAAU,MAAA+D,IAAArL,KAAAmJ,YAAmD+B,MAAA8J,EAAA,GAAAD,EAAA,OACnDnO,EAAAU,MAAA+D,IAAA7B,EAAAC,OAAAqL,KAAgDA,EAAAzK,EAAA,kBAAAzD,EAAAU,MAAAqE,aAAAoJ,GAAAD,IAGhDvT,EAAA6G,eAAA,CACA,GAAAgJ,GAAApR,KAAAmJ,WAAA8L,iBAAA,IAAAnO,EAAA/B,YAAA,IAEAqM,GAAArQ,YACAqI,MAAA1K,KAAA0S,GAAA9G,QAAA,SAAAJ,GACA,MAAAA,GAAAgL,gBAAApO,EAAA/B,eAGA/E,KAAAqI,sBAYA,MARArI,MAAA+L,QAAAxK,QAAA0K,IAAA+I,EACAhV,KAAAoO,iBAAA,SAAA2G,EAAAvL,EAAAkE,MAAA,SAEA5G,EAAA9B,cACAhF,KAAA2O,kBACA3O,KAAAsI,oBAAA,QAGAtI,MAqBA0D,EAAAhE,UAAA8F,QAAA,SAAA6O,GACA,GAAAhL,GAAArJ,KAAAsJ,MACAE,EAAAH,EAAAG,MACA2J,EAAAnT,KAAA6K,oBAAA7K,KAAA+L,QAAA1M,OACAyQ,EAAAuE,EACAtC,MAAA,EAwBA,OArBAoB,GAAA,KAAA3J,EAAA0E,UAAA1E,EAAAsB,MACAzB,EAAAzH,YAAAsQ,aAAA,EACApC,EAAAlJ,EAAAU,MAAA4F,YAAA4C,EAAA9P,KAAAuB,QAAAuO,UAEA9P,KAAAyS,iBACAV,EAAA/R,KAAA6K,qBAAArB,EAAAsB,KAAAtB,EAAAkE,MAAA,IAEA1N,KAAA2R,uBAA+BG,QAAAqB,EAAApB,YAC/B/R,KAAAoO,iBAAA,QAAA2D,GAAA,EAAAjC,GAEAA,IACA9P,KAAAsI,oBAAA,OACAtI,KAAAiS,oBAIGzI,EAAA6I,UACHrS,KAAAyS,iBACApJ,EAAAmF,MAAA+D,SAAAlJ,EAAAkF,YAAA,GAGAvO,MAWA0D,EAAAhE,UAAAyV,YAAA,WAEA,MADAnV,MAAA+L,QAAAoJ,cACAnV,MAWA0D,EAAAhE,UAAA0V,aAAA,WAEA,MADApV,MAAA+L,QAAAqJ,eACApV,MAUA0D,EAAAhE,UAAA2V,QAAA,WACA,GAAAhM,GAAArJ,KAAAsJ,MACAK,EAAAN,EAAAM,eACAC,EAAAD,EAAAC,QACAG,EAAAJ,EAAAI,UACAC,EAAAL,EAAAK,KAIA3C,EAAArH,KAAAqH,QAEAA,GAAAqK,aAAA,QAAA9H,EAAAC,WACAxC,EAAAuC,EAAAnE,MAAA,0CAAAmE,EAAAnE,MAGA,IAAA0D,GAAAnJ,KAAAmJ,WACA5B,KAAA6B,MAAA1K,KAAAyK,EAAA3B,SAEAmC,GAAAI,UAAAF,WACAV,EAAAuI,aAAA,QAAA3H,EAAAF,WACAV,EAAAY,EAAAtE,MAAA,0CAAAsE,EAAAtE,SAEA8B,EAAA+C,QAAA,SAAAJ,GACA,MAAA7C,GAAAoE,YAAAvB,KAEAf,EAAAoC,WAAA+J,YAAAnM,GAGA,QAAA2F,GAAAtQ,EAAA,EAAsBsQ,EAAAvH,EAAA/I,GAAoBA,IAAA,CAC1C,GAAAA,EAAAwL,EAAAjJ,OAAA,GACA+N,EAAAvD,WAAA+J,YAAAxG,EACA,OAGA,GAAAjF,GAAAG,EAAAxL,GAAAqL,UACApE,EAAAuE,EAAAxL,GAAAiH,KAEAqJ,GAAAjF,EAAA,0CAAAA,GACAiF,EAAArJ,EAAA,0CAAAA,GAIAzF,KAAA+H,aAAA,GACA/H,KAAAgD,KAGA,QAAAyM,KAAAzP,MACAA,KAAAyP,GAAA,MAIA/L,IACC,EAAAkD,EAAA2O,OAAA9O,EAAAhD,SAAA+R,KAAAvO,EAAAxD,SAEDnF,GAAAmF,QAAAC,GAIA,SAAAnF,EAAAD,EAAAH,GAEA,YAGAc,QAAAC,eAAAZ,EAAA,cACA2B,OAAA,GAOA,IAAAsJ,IACAC,OACAC,MAAA,KACAiE,MAAA,EACAM,GAAA,EACAE,UAAA,EACAD,OAAA,EACAnD,KAAA,EACAL,MAAA,EACAC,UAAA,EACA2H,SAAA,EACAL,WAAA,EACAtI,SAAA,GAEA8E,OACAiH,SAAA,KACA1D,SAAA,KACAQ,SAAA,EACA9D,UAAA,KACAiH,QAAA,EACA7C,SAAA,GAEAjR,aACA2D,OAAA,EACAC,SAAA,EACA0M,aAAA,GAEA3H,WACAgE,YAAA,EACAY,aAAA,MAIAxG,GACAT,eAAA,EACAgB,OAAA,WACAoD,aAAA,KACAjC,YAAA,EACA8B,UAAA,EACA3D,eAAA,KACAC,OAAA,KACAyK,UAAA,GACApD,SAAA,IACAzD,YAAA,SAAAoD,GACA,SAAA7K,KAAA+Q,IAAA,EAAAlG,EAAA,IAEAjD,aAAA,EACA+D,WACA,iBACAC,eAAA,GACApI,gBAAA,EAGA9J,GAAAiL,SACAjL,EAAAqK,WAIA,SAAApK,EAAAD,EAAAH,GAEA,YAaA,SAAA+B,GAAAC,EAAAC,GAAiD,KAAAD,YAAAC,IAA0C,SAAAC,WAAA,qCAE3F,QAAA4F,GAAAtD,EAAAjE,GAAiD,IAAAiE,EAAa,SAAAuD,gBAAA,4DAAyF,QAAAxH,GAAA,gBAAAA,IAAA,kBAAAA,GAAAiE,EAAAjE,EAEvJ,QAAAyH,GAAAC,EAAAC,GAA0C,qBAAAA,IAAA,OAAAA,EAA+D,SAAAhG,WAAA,iEAAAgG,GAAuGD,GAAA1G,UAAAT,OAAAqH,OAAAD,KAAA3G,WAAyEgB,aAAeT,MAAAmG,EAAAhH,YAAA,EAAA6B,UAAA,EAAA9B,cAAA,KAA6EkH,IAAApH,OAAAsH,eAAAtH,OAAAsH,eAAAH,EAAAC,GAAAD,EAAAI,UAAAH,GAdrXpH,OAAAC,eAAAZ,EAAA,cACA2B,OAAA,GAGA,IAAA4G,GAAA1I,EAAA,GAEA2I,EAEA,SAAArG,GAAuC,GAAAA,KAAAlB,WAA6B,MAAAkB,EAAqB,IAAAsG,KAAiB,UAAAtG,EAAmB,OAAAS,KAAAT,GAAuBxB,OAAAS,UAAAC,eAAAjB,KAAA+B,EAAAS,KAAA6F,EAAA7F,GAAAT,EAAAS,GAAsG,OAAtB6F,GAAAtD,QAAAhD,EAAsBsG,GAF1PF,EAcAvI,GAAAmF,QAAA,SAAAmS,GACA,gBAAAC,GAGA,QAAAC,KAGA,MAFA5V,GAAAF,KAAA8V,GAEA7P,EAAAjG,KAAA6V,EAAAtT,MAAAvC,KAAAwB,YAgJA,MArJA2E,GAAA2P,EAAAD,GAWAC,EAAApW,UAAAgR,aAAA,SAAA1M,GACA,GAAAqF,GAAArJ,KAAAsJ,KAEAD,GAAAmF,MAAAiH,QAAAzR,EAAAoO,IACA/I,EAAAmF,MAAAqE,SAAA,EACAxJ,EAAAG,MAAA6I,SAAA,EAEArS,KAAAsI,oBAAA,QAAAtE,EAAAoO,MAQA0D,EAAApW,UAAAkR,eAAA,SAAA5M,GACA,GAAAqF,GAAArJ,KAAAsJ,MACAkF,EAAAnF,EAAAmF,MACAuH,IAAA/V,KAAAuB,QAAA8I,WACA+H,EAAApO,EAAAoO,IAAA2D,GACAN,EAAAjH,EAAAiH,QAAAM,GACAtH,MAAA,GACAuH,EAAA,KACAC,MAAA,EAEAjW,MAAA6H,kBAAA7D,GAkBAA,EAAA8O,aACArE,EAAAzK,EAAA8O,YAAArE,UAGAwH,EAAAjS,EAAA8O,YAAA9S,KAAAuB,QAAA8I,WAAA,oBAEAhB,EAAAkB,QAAA2L,QAAAzH,KACAA,EAAApF,EAAAkB,UAAA3F,KAAAyJ,IAAAG,EAAAkH,UAAAO,KAGAzH,EAAAkH,QAAAO,GAEAzH,EAAAkH,QAAA,KAGArM,EAAAzH,YAAA2D,QAAAyQ,EAAAhW,KAAA6R,cAAA/K,EAAA3B,OAAAI,OACA6M,IAAApO,EAAAoO,IACAS,QAAA7O,EAAA6O,QACApE,aAAAD,EAAAC,UACA8D,SAAAH,GAAAqD,IAAAjH,EAAAiH,QAAAM,GAAA3D,QAGA4D,GAAA,OAAAA,IAAAhW,KAAAmO,gBAAAiE,EAAA,KAQA0D,EAAApW,UAAAoR,gBAAA,SAAA9M,GACA,GAAAwK,GAAAxO,KAAAsJ,MAAAkF,MACA4D,EAAApO,EAAA+N,QACAgE,IAAA/V,KAAAuB,QAAA8I,WACAoL,EAAAjH,EAAAiH,QAAAM,GACAhB,EAAA/U,KAAAsJ,MAAAE,MAAAsB,IAEA0D,GAAA+D,SAAAvO,EAAA8N,QAAAiE,GAAAvH,EAAAiH,QAAAM,GAEAvH,EAAAC,UAAAzO,KAAAsJ,MAAAiB,WAAAiE,EAAAiH,QAAAM,GAAA/R,EAAA8N,QAAAiE,KAEA3D,EAAA2D,GAAAnR,KAAAqH,IAAAwJ,EAAAV,EAAAnQ,KAAAoH,IAAAyJ,EAAArD,EAAA2D,KAEAvH,EAAAuD,QAAAgE,GAAA3D,EAAA2D,GAAAnR,KAAAuR,MAAA/D,EAAA2D,GAAAhB,KAEA,IAAAvG,EAAA+D,UAAAvS,KAAAsI,oBAAA,OACAkG,EAAAqE,SAAA,EAEA7S,KAAA6H,qBAQAiO,EAAApW,UAAAsR,uBAAA,SAAAhN,GACA,GAAAqF,GAAArJ,KAAAsJ,MACAE,EAAAH,EAAAG,MACA5H,EAAAyH,EAAAzH,WAEA4H,GAAAwI,WAAA,GAEApQ,EAAAsQ,aAAAlO,EAAA8O,cAGI,IAHJ9S,KAAAmS,eAAA,SACAL,QAAA9N,EAAA8N,QACAC,QAAA/N,EAAA+N,WAEA/N,EAAA9B,OAGA8B,EAAA8O,cACA9O,EAAA8L,SAAA9P,KAAAuB,QAAAuO,SAEA9L,EAAA+N,UAAA/R,KAAAuB,QAAA8I,YAAAb,EAAAsB,MAAAtB,EAAAkE,MAAArE,EAAAkF,cAGAvO,KAAAsS,cACA1Q,EAAAsQ,cAAAtQ,EAAA4D,SAAA,GAEAxF,KAAA2R,sBAAA3N,IASA8R,EAAApW,UAAAwR,qBAAA,WACAlR,KAAAmS,eAAA,OAEAnS,KAAAsJ,MAAAE,MAAAwI,WAAA,EACAhS,KAAAiS,mBAGA6D,GACEF,KAKF,SAAArX,EAAAD,EAAAH,GAEA,YAGA,IAAAiY,GAAAjY,EAAA,GAEAkY,EAEA,SAAA5V,GAAsC,MAAAA,MAAAlB,WAAAkB,GAAuCgD,QAAAhD,IAF7E2V,EAIA7X,GAAAD,QAAA+X,EAAA5S,SAOA,SAAAlF,EAAAD,EAAAH,GAEA,YAgBA,SAAA+B,GAAAC,EAAAC,GAAiD,KAAAD,YAAAC,IAA0C,SAAAC,WAAA,qCAb3FpB,OAAAC,eAAAZ,EAAA,cACA2B,OAAA,IAEA3B,EAAAiX,MAAAjX,EAAAgJ,UAAA5F,EAEA,IAAApB,GAAA,kBAAAC,SAAA,gBAAAA,QAAAC,SAAA,SAAAC,GAAoG,aAAAA,IAAqB,SAAAA,GAAmB,MAAAA,IAAA,kBAAAF,SAAAE,EAAAC,cAAAH,QAAAE,IAAAF,OAAAb,UAAA,eAAAe,IAM5I2E,EAAAjH,EAAA,GAIAmJ,GAQAjD,EAAA,SAAA+O,GACA,GAAAkD,GAAA,IAEA,oBAAAlD,GAAA,CAEA,GAAAmD,GAAAnD,EAAAmD,MAAA,wBAGAA,IACAD,EAAAlR,EAAAN,SAAA0G,cAAA+K,EAAA,IAGA,IAAAA,EAAAxV,QAAAwV,EAAA,GAAA5B,MAAA,KAAArK,QAAA,SAAAJ,GACA,GAAAsM,GAAAtM,EAAAyK,MAAA,IAEA2B,GAAA5E,aAAA8E,EAAA,GAAAA,EAAA,GAAAC,OAAA7E,QAAA,0BAGA0E,EAAAlR,EAAAN,SAAAmQ,iBAAA7B,GAEAkD,EAAAvV,OAEK,IAAAuV,EAAAvV,SACLuV,IAAA,IAFAA,EAAA,UAKGlD,GAAAsD,UAAA,IAAAtD,EAAAuD,WACHL,EAAAlD,EAGA,OAAAkD,IASAzN,QAAA,SAAA+N,GACA,MAAAA,MAAAlW,cAAA2B,OASAsQ,SAAA,SAAAlS,GACA,MAAAA,OAAAkW,UAAA,qBAAAlW,EAAA,YAAAH,EAAAG,MAAAT,KAAA6I,QAAApI,IAcAiI,OAAA,SAAA7H,GAGA,OAFA+C,GAAA5D,KAEAmC,EAAAX,UAAAT,OAAA8V,EAAAxU,MAAAF,EAAA,EAAAA,EAAA,KAAAV,EAAA,EAAuFA,EAAAU,EAAaV,IACpGoV,EAAApV,EAAA,GAAAD,UAAAC,EAGA,KAAAoV,EAAA9V,QAAA,IAAA8V,EAAA9V,SAAA8V,EAAA,GACA,MAAAhW,EAGA,IAAAiW,GAAAD,EAAAE,OAgBA,OAdA/W,MAAA2S,SAAA9R,IAAAb,KAAA2S,SAAAmE,IACA7X,OAAA6N,KAAAgK,GAAAxM,QAAA,SAAApJ,GACA,GAAAjB,GAAA6W,EAAA5V,EAEA0C,GAAA+O,SAAA1S,KACAY,EAAAK,KAAAL,EAAAK,OAEAL,EAAAK,GAAA0C,EAAA8E,OAAA7H,EAAAK,GAAAjB,IAEAY,EAAAK,GAAA0C,EAAAiF,QAAA5I,KAAA6B,SAAA7B,IAKAD,KAAA0I,OAAAnG,MAAAvC,MAAAa,GAAAiB,OAAA+U,KAaAxL,IAAA,SAAAiL,EAAA7Q,EAAAuR,GACA,mBAAAvR,GAAA,CACA,GAAAxF,GAAAmF,EAAAT,OAAAqI,iBAAAsJ,GAAA7Q,EAEA,OAAAuR,GAAAhX,KAAAkN,YAAAjN,KAEA,GAAAgX,GAAA,SAAApW,EAAAiW,GACA,MAAA7X,QAAA6N,KAAAgK,GAAAxM,QAAA,SAAAJ,GACArJ,EAAAqJ,GAAA4M,EAAA5M,KASA,OALAlK,MAAA6I,QAAAyN,KAAAhM,QAAA,SAAAJ,GACA,MAAA+M,GAAA/M,EAAAzE,WACIwR,EAAAX,EAAA7Q,SAGJ6Q,GAUApJ,YAAA,SAAAtE,EAAAsO,GACA,GAAAxE,GAAA9J,CAEA,OAAAuO,OAAAzE,EAAAnD,SAAAmD,EAAA,KAAAwE,EAAAxE,GASA/G,aAAA,SAAA/C,GACA,GAAAwO,GAAA,kBAEA,QAAA7H,SAAA3G,EAAA,SAAAyO,OAAAzO,GAAA2N,MAAAa,IAAA,OAUAE,SAAA,SAAAhB,EAAAiB,GACA,GAAA9R,GAAAL,EAAAT,OAAAqI,iBAAAsJ,GACApK,EAAA,eAAAqL,GAAA,wDAEA,OAAAvX,MAAAkN,YAAAzH,EAAA8R,EAAA3F,QAAA,YAAA4F,sBAAAxX,KAAAkN,YAAAzH,EAAAyG,EAAA,KAAAlM,KAAAkN,YAAAzH,EAAAyG,EAAA,MASAuL,WAAA,SAAAnB,GACA,MAAAtW,MAAAsX,SAAAhB,EAAA,eASA7E,YAAA,SAAA6E,GACA,MAAAtW,MAAAsX,SAAAhB,EAAA,gBAWAoB,gBAAA,WACA,GAAAC,GAAAvS,EAAAT,OAAAmB,UAAAC,UACAyN,GAAA,EACA+C,MAAA,EAGA,IAAAA,EAAAoB,EAAApB,MAAA,iBACA/C,EAAA+C,EAAA,aACG,mCAAA1Q,KAAA8R,GACHnE,GAAA,MACG,IAAA+C,EAAAoB,EAAApB,MAAA,qBACH,GAAAqB,GAAArB,EAAA,GACAsB,GAAAF,EAAApB,MAAA,qBAKA/C,GAAAoE,GAAA,8BAAA/R,KAAAgS,IAAAD,GAAA,iGAAA/R,KAAAgS,KAAA,6BAAAhS,KAAAgS,GAMA,MAHA7X,MAAA0X,gBAAA,WACA,MAAAlE,IAEAA,GAcAtE,UAAA,SAAAO,EAAAC,EAAAoI,GACA,MAAAA,GAAA,eAAArI,EAAA,IAAAC,EAAA,mBAAAD,EAAA,IAAAC,EAAA,KAOA9H,YAAA,WACA,GAAA+P,GAAAvS,EAAAT,OAAAmB,UAAAC,UACAyN,EAAA,SAAA3N,KAAA8R,EAKA,OAHA3X,MAAA4H,YAAA,WACA,MAAA4L,IAEAA,IAIAuE,EAAA,WACA,QAAAA,GAAAnC,GACA1V,EAAAF,KAAA+X,GAEA/X,KAAA4V,cAAA,WACA,QAAAE,KACA5V,EAAAF,KAAA8V,GAGA,MAAAA,MAcA,MAVAiC,GAAArY,UAAA8V,KAAA,WACA,OAAA1S,GAAAtB,UAAAT,OAAAiX,EAAA3V,MAAAS,GAAAR,EAAA,EAAsEA,EAAAQ,EAAeR,IACrF0V,EAAA1V,GAAAd,UAAAc,EAGA,OAAA0V,GAAAC,OAAA,SAAArZ,EAAAD,GACA,MAAAA,GAAAC,IACGoB,KAAA4V,aAGHmC,KAGAxC,EAAA,SAAAK,GACA,UAAAmC,GAAAnC,GAGAtX,GAAAgJ,QACAhJ,EAAAiX,SAIA,SAAAhX,EAAAD,GAEAC,EAAAD,QAAAkG,GAIA,SAAAjG,EAAAD,GAEAC,EAAAD,QAAAmG,QL2hBM,SAAUlG,EAAQD,EAASH;;;;;;;;;CMtuFjC,SAAA2B,EAAAC,GAEAxB,EAAAD,QAAAyB,EAAA5B,EAAA,GAAAA,EAAA,KAOC6B,EAAA,SAAAkY,EAAAC,GACD,gBAAAja,GAKA,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAI,EAAAJ,EACAK,GAAA,EACAH,WAUA,OANAJ,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,GAAA,EAGAF,EAAAD,QAvBA,GAAAD,KA+DA,OAnCAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAK,EAAA,SAAAyB,GAAmD,MAAAA,IAGnD9B,EAAAU,EAAA,SAAAP,EAAAQ,EAAAC,GACAZ,EAAAa,EAAAV,EAAAQ,IACAG,OAAAC,eAAAZ,EAAAQ,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAZ,EAAAmB,EAAA,SAAAf,GACA,GAAAQ,GAAAR,KAAAgB,WACA,WAAmC,MAAAhB,GAAA,SACnC,WAAyC,MAAAA,GAEzC,OADAJ,GAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAQ,EAAAC,GAA8D,MAAAR,QAAAS,UAAAC,eAAAjB,KAAAc,EAAAC,IAG9DtB,EAAAyB,EAAA,GAGAzB,IAAA0B,EAAA,KAKA,SAAAtB,EAAAD,EAAAH,GAEA,YAGAG,GAAAiB,YAAA,EACAjB,EAAA8Z,cAAA9Z,EAAA+Z,UAAA/Z,EAAAga,cAAA5W,EAEA,IAAA0D,GAAAjH,EAAA,GA0CAsQ,GACA8J,eAAA,EACAlH,eAAA,EACAC,gBAAA,EACAkH,aAAA,EACAC,eAAA,GACAC,qBAAA,EACAC,mBAAA,GAGAlK,GAAAmK,cAAAnK,EAAAiK,qBAAAjK,EAAAkK,kBACAra,GAAAga,UAAA7J,EACAnQ,EAAA+Z,UAAA,mBACA/Z,EAAA8Z,cAAA,gBAAAhT,GAAAT,QAIA,SAAApG,EAAAD,EAAAH,GAEA,YAGAG,GAAAiB,YAAA,CAEA,IAAAmF,GAAA,mBAAAC,gBAAAC,YAAAD,OAAA,mBAAAhC,YAAAiC,YAAAjC,KAAAkC,SAAA,gBAGAvG,GAAAqG,OAAAD,CACApG,GAAAwG,SAAAJ,EAAAI,UAIA,SAAAvG,EAAAD,EAAAH,GAEA,YAGAG,GAAAiB,YAAA,CAEA,IAAAsH,GAAA1I,EAAA,GAEA0a,GAEAC,oBAAA,SAAAC,EAAAvI,GACA,GAAAA,EAAA,GAAAA,EAAA,GACA,MAAA3J,GAAAyR,UAAAC,cAEA,IAAAS,GAAApU,KAAAyJ,IAAA0K,EAEA,OAAAC,GAAAxI,GAAAwI,EAAA,IAAAxI,EAAA3J,EAAAyR,UAAAK,mBAAA9R,EAAAyR,UAAAI,sBAEAO,aAAA,SAAAxK,EAAAyK,GACA,MAAAzK,KAAA5H,EAAAyR,UAAAM,eAAAnK,EAAA5H,EAAAyR,UAAAI,sBAAAQ,EAAArS,EAAAyR,UAAAI,sBAEAS,WAAA,SAAA1K,EAAAyK,GACA,MAAAzK,KAAA5H,EAAAyR,UAAAM,eAAAnK,EAAA5H,EAAAyR,UAAAK,oBAAAO,EAAArS,EAAAyR,UAAAK,oBAEAS,uBAAA,SAAAtH,EAAAC,EAAA/F,EAAAC,EAAAE,EAAA1D,GACA,GAAA4Q,IAAArN,EAAA,GAAAvD,EAAA,GAAAuD,EAAA,GAAAvD,EAAA,IACA6Q,GAAArN,EAAA,GAAAxD,EAAA,GAAAwD,EAAA,GAAAxD,EAAA,IACA8Q,EAAAxH,EAAAjQ,SAEA0X,EAAAzH,EAAA,GAAAD,EAAA,GACA2H,EAAA1H,EAAA,GAAAD,EAAA,EAiBA,OAfA3F,GAAA,KACAoN,EAAA,GAAA3U,KAAAqH,IAAAoN,EAAA,GAAAE,EAAA,KAEApN,EAAA,KACAoN,EAAA,GAAA3U,KAAAoH,IAAAsN,EAAA,GAAAC,EAAA,KAEAA,EAAA,GAAAC,EAAA1H,EAAA,GAAA2H,EAAAD,GAAAD,EAAA,GAAAzH,EAAA,IAAAyH,EAAA,GAEApN,EAAA,KACAoN,EAAA,GAAA3U,KAAAqH,IAAAoN,EAAA,GAAAE,EAAA,KAEApN,EAAA,KACAoN,EAAA,GAAA3U,KAAAoH,IAAAsN,EAAA,GAAAC,EAAA,KAEAA,EAAA,GAAAE,EAAA3H,EAAA,GAAA0H,EAAAC,GAAAF,EAAA,GAAAzH,EAAA,IAAAyH,EAAA,IACA3U,KAAAoH,IAAAC,EAAA,GAAArH,KAAAqH,IAAAD,EAAA,GAAAuN,EAAA,KAAA3U,KAAAoH,IAAAC,EAAA,GAAArH,KAAAqH,IAAAD,EAAA,GAAAuN,EAAA,OAIAG,UAAA,SAAAtH,EAAApG,EAAAC,GACA,MAAAmG,GAAA,GAAApG,EAAA,IAAAoG,EAAA,GAAApG,EAAA,IAAAoG,EAAA,GAAAnG,EAAA,IAAAmG,EAAA,GAAAnG,EAAA,IAIA0N,WAAA,SAAAvH,EAAAL,EAAA/F,EAAAC,GACA,OAAAmG,EAAA,GAAApG,EAAA,IAAAoG,EAAA,GAAAnG,EAAA,IAAAmG,EAAA,GAAApG,EAAA,IAAAoG,EAAA,GAAAnG,EAAA,MAAA8F,EAAA,GAAA/F,EAAA,IAAA+F,EAAA,GAAA9F,EAAA,IAAA8F,EAAA,GAAA/F,EAAA,IAAA+F,EAAA,GAAA9F,EAAA,KAEA2N,iBAAA,SAAAC,EAAAvN,GACA,GAAAwN,GAAAlV,KAAAmV,KAAAF,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACA/J,EAAAlL,KAAAyJ,IAAAyL,GAAAxN,EAEA,QAAAuN,EAAA,KAAA/J,EAAA+J,EAAA,KAAA/J,IAEAkK,mBAAA,SAAA5H,EAAA9F,GACA,GAAA2N,GAAArV,KAAAmV,KAAA3H,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAtC,EAAAlL,KAAAmV,KAAAE,EAAA3N,EAAA,EAGA,OAAAwD,GAAA,MAAAA,GAEAoK,WAAA,SAAAnI,EAAA/F,EAAAC,EAAAE,GACA,MAAAA,GAAA,IAAA4F,EAAA,GAAA/F,EAAA,IAAAG,EAAA,IAAA4F,EAAA,GAAA9F,EAAA,IAAAE,EAAA,IAAA4F,EAAA,GAAA9F,EAAA,IAAAE,EAAA,IAAA4F,EAAA,GAAA/F,EAAA,IAEAmO,eAAA,SAAA/H,EAAApG,EAAAC,EAAAE,GACA,GAAAiO,GAAAhI,EAAAtQ,SACAf,GAAAkL,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAqBA,OAnBAG,GAAA,IAAAiO,EAAA,GAAApO,EAAA,KAEAoO,EAAA,IAAAA,EAAA,GAAApO,EAAA,IAAAjL,EAAA,GAAAkL,EAAA,IAEAE,EAAA,IAAAiO,EAAA,GAAAnO,EAAA,KAEAmO,EAAA,IAAAA,EAAA,GAAAnO,EAAA,IAAAlL,EAAA,GAAAiL,EAAA,IAEAG,EAAA,IAAAiO,EAAA,GAAAnO,EAAA,KAEAmO,EAAA,IAAAA,EAAA,GAAAnO,EAAA,IAAAlL,EAAA,GAAAiL,EAAA,IAEAG,EAAA,IAAAiO,EAAA,GAAApO,EAAA,KAEAoO,EAAA,IAAAA,EAAA,GAAApO,EAAA,IAAAjL,EAAA,GAAAkL,EAAA,IAGAmO,EAAA,IAAAA,EAAA,GAAAC,QAAA,GACAD,EAAA,IAAAA,EAAA,GAAAC,QAAA,GACAD,GAIA9b,GAAAmF,QAAAoV,EACAta,EAAAD,UAAA,SAIA,SAAAC,EAAAD,EAAAH,GAEA,YAQA,SAAA+B,GAAAC,EAAAC,GAAiD,KAAAD,YAAAC,IAA0C,SAAAC,WAAA,qCAE3F,QAAAgE,GAAA+O,GACA,GAAAkH,GAAA9Y,UAAAT,OAAA,OAAAW,KAAAF,UAAA,IAAAA,UAAA,GAEA8U,MAAA,EAEA,oBAAAlD,GAAA,CAMA,GAHAA,EAAAmD,MAAA,yBAGA,CAEA,GAAAgE,GAAAnV,EAAAN,SAAA0G,cAAA,MAEA+O,GAAAC,UAAApH,EACAkD,EAAAjU,MAAA3C,UAAA0J,MAAA1K,KAAA6b,EAAAE,gBAGAnE,GAAAjU,MAAA3C,UAAA0J,MAAA1K,KAAA0G,EAAAN,SAAAmQ,iBAAA7B,GAEAkH,KACAhE,IAAAvV,QAAA,EAAAuV,EAAA,OAAA5U,QAEE0R,GAAAsD,UAAA,IAAAtD,EAAAuD,SAEFL,EAAAlD,EACEhO,EAAAT,OAAA+V,QAAAtH,YAAAsH,UAEFpE,EAAAgE,EAAAlH,EAAAuH,UAAAvH,EAAA/T,IAAA,GAGA,OAAAiX,GAvCAhY,EAAAiB,YAAA,EACAjB,EAAA+F,EAAA/F,EAAAiX,UAAA7T,EAEA,IAAA0D,GAAAjH,EAAA,GAuCA4Z,EAAA,WACA,QAAAA,GAAAnC,GACA1V,EAAAF,KAAA+X,GAEA/X,KAAA4V,cAAA,WACA,QAAAE,KACA5V,EAAAF,KAAA8V,GAGA,MAAAA,MAcA,MAVAiC,GAAArY,UAAA8V,KAAA,WACA,OAAArT,GAAAX,UAAAT,OAAAiX,EAAA3V,MAAAF,GAAAV,EAAA,EAAmEA,EAAAU,EAAaV,IAChFuW,EAAAvW,GAAAD,UAAAC,EAGA,OAAAuW,GAAAC,OAAA,SAAArZ,EAAAD,GACA,MAAAA,GAAAC,IACGoB,KAAA4V,aAGHmC,KAGAxC,EAAA,SAAAK,GACA,UAAAmC,GAAAnC,GAGAtX,GAAAiX,QACAjX,EAAA+F,KAIA,SAAA9F,EAAAD,EAAAH,GAEA,YA6BA,SAAA6H,GAAAvF,GAAsC,MAAAA,MAAAlB,WAAAkB,GAAuCgD,QAAAhD,GAE7E,QAAAP,GAAAC,EAAAC,GAAiD,KAAAD,YAAAC,IAA0C,SAAAC,WAAA,qCAE3F,QAAA4F,GAAAtD,EAAAjE,GAAiD,IAAAiE,EAAa,SAAAuD,gBAAA,4DAAyF,QAAAxH,GAAA,gBAAAA,IAAA,kBAAAA,GAAAiE,EAAAjE,EAEvJ,QAAAyH,GAAAC,EAAAC,GAA0C,qBAAAA,IAAA,OAAAA,EAA+D,SAAAhG,WAAA,iEAAAgG,GAAuGD,GAAA1G,UAAAT,OAAAqH,OAAAD,KAAA3G,WAAyEgB,aAAeT,MAAAmG,EAAAhH,YAAA,EAAA6B,UAAA,EAAA9B,cAAA,KAA6EkH,IAAApH,OAAAsH,eAAAtH,OAAAsH,eAAAH,EAAAC,GAAAD,EAAAI,UAAAH,GAhCrX/H,EAAAiB,YAAA,CAEA,IAAAe,GAAA,kBAAAC,SAAA,gBAAAA,QAAAC,SAAA,SAAAC,GAAoG,aAAAA,IAAqB,SAAAA,GAAmB,MAAAA,IAAA,kBAAAF,SAAAE,EAAAC,cAAAH,QAAAE,IAAAF,OAAAb,UAAA,eAAAe,IAE5Ima,EAAA3b,OAAA4b,QAAA,SAAAha,GAAmD,OAAArC,GAAA,EAAgBA,EAAAgD,UAAAT,OAAsBvC,IAAA,CAAO,GAAAsY,GAAAtV,UAAAhD,EAA2B,QAAA0C,KAAA4V,GAA0B7X,OAAAS,UAAAC,eAAAjB,KAAAoY,EAAA5V,KAAyDL,EAAAK,GAAA4V,EAAA5V,IAAiC,MAAAL,IAE/OyC,EAAAnF,EAAA,GAEAsI,EAAAT,EAAA1C,GAEAwX,EAAA3c,EAAA,GAEA4c,EAAA/U,EAAA8U,GAEAxZ,EAAAnD,EAAA,GAEA8I,EAAAjB,EAAA1E,GAEA0Z,EAAA7c,EAAA,GAEA8c,EAAAjV,EAAAgV,GAEAnU,EAAA1I,EAAA,GAEAyI,EAAAzI,EAAA,GAmBA+c,EAAA,SAAAhU,GAkCA,QAAAgU,GAAA3Z,GACArB,EAAAF,KAAAkb,EAEA,IAAAtX,GAAAqC,EAAAjG,KAAAkH,EAAAxI,KAAAsB,MAiBA,OAfA4a,GAAAhX,EAAArC,SACAyK,KAAA,KACAC,KAAA,SACAxD,QAAA,aACAyD,QAAA,SACAC,WAAA,YACAC,OAAA,SAAAqD,GACA,SAAA7K,KAAA+Q,IAAA,EAAAlG,EAAA,IAEA0L,gBAAAC,IACA9O,aAAA,MACG/K,GACHqC,EAAAyX,iBACAzX,EAAA0X,eAAA,GAAAP,GAAAtX,QACAG,EAAA2X,KAAA3X,EAAArC,QAAAyK,IAAAlK,SACA8B,EA0HA,MA/KAuC,GAAA+U,EAAAhU,GAyEAgU,EAAAxb,UAAAkP,KAAA,SAAAzH,EAAA5F,GAEA,MADAvB,MAAAsb,eAAA5P,IAAAvE,EAAA5F,EAAAvB,MACAA,MAUAkb,EAAAxb,UAAAyR,OAAA,SAAAhK,GAEA,MADAnH,MAAAsb,eAAAE,OAAArU,GACAnH,MAWAkb,EAAAxb,UAAA+b,UAAA,SAAAtU,GACA,MAAAnH,MAAAsb,eAAAG,UAAAtU,IAWA+T,EAAAxb,UAAAyV,YAAA,SAAAhO,GACA,MAAAnH,MAAAsb,eAAAI,cAAA,EAAAvU,IAWA+T,EAAAxb,UAAA0V,aAAA,SAAAjO,GACA,MAAAnH,MAAAsb,eAAAI,cAAA,EAAAvU,IASA+T,EAAAxb,UAAA2b,eAAA,WACA,GAAAlO,GAAAnN,KAEAkB,MAAA,IAEA,8BAAAoJ,QAAA,SAAAJ,GAEA,OADAhJ,EAAAiM,EAAA5L,QAAA2I,MAEAhJ,EAAAR,cAAA2B,MACA8K,EAAA5L,QAAA2I,GAAA,IAAAhJ,EAAAH,OAAAG,EAAAY,OAAAZ,KAAAY,SACK,wBAAA+D,SAAA,KAAA3E,EAAA,YAAAZ,EAAAY,IACLiM,EAAA5L,QAAA2I,IAAAhJ,SAEAiM,EAAA5L,QAAA2I,GAAA,SAeAgR,EAAAxb,UAAAL,IAAA,WACA,MAAAW,MAAAub,KAAAzZ,UASAoZ,EAAAxb,UAAA2V,QAAA,WACArV,KAAAgD,MACAhD,KAAAsb,eAAAjG,WAGA6F,IACC,EAAAtU,EAAA2O,OAAA9O,EAAAhD,SAAA+R,KAAAvO,EAAAxD,QAAAwX,EAAAxX,SAEDmX,GAAAM,EAAArU,EAAAyR,WACAha,EAAAmF,QAAAyX,EACA3c,EAAAD,UAAA,SAIA,SAAAC,EAAAD,EAAAH,GAEA,YAiBA,SAAA+B,GAAAC,EAAAC,GAAiD,KAAAD,YAAAC,IAA0C,SAAAC,WAAA,qCAd3F/B,EAAAiB,YAAA,CAEA,IAAAqb,GAAA3b,OAAA4b,QAAA,SAAAha,GAAmD,OAAArC,GAAA,EAAgBA,EAAAgD,UAAAT,OAAsBvC,IAAA,CAAO,GAAAsY,GAAAtV,UAAAhD,EAA2B,QAAA0C,KAAA4V,GAA0B7X,OAAAS,UAAAC,eAAAjB,KAAAoY,EAAA5V,KAAyDL,EAAAK,GAAA4V,EAAA5V,IAAiC,MAAAL,IAE/O8a,EAAAxd,EAAA,IAEAyd,EAMA,SAAAnb,GAAsC,MAAAA,MAAAlB,WAAAkB,GAAuCgD,QAAAhD,IAN7Ekb,GAEA/U,EAAAzI,EAAA,GAEA0I,EAAA1I,EAAA,EAcA,aAAAyd,EAAAnY,QACA,SAAAgE,OAAA,kFAGA,IAAAoU,GAAA,WACA,QAAAA,KACA3b,EAAAF,KAAA6b,GAEA7b,KAAA8b,YA0JA,MAvJAD,GAAAE,aAAA,SAAAzF,EAAA0F,EAAAC,EAAAC,GACA,IAEA,MAAAL,GAAAM,mBAAA,GAAAP,GAAAnY,QAAA2Y,QAAA9F,GACA+F,cAAAT,EAAAnY,QAAA6Y,KACA7N,UAAAuN,EAAAvN,UACAyE,UAAA,KAKAqJ,UACAC,WAAA,OACAC,YAAA,OACAC,aAAA,OACAC,SAAA,QAEAV,eACID,EAAAE,GACD,MAAAlY,GACH,cAIA6X,EAAAM,mBAAA,SAAAS,EAAArb,EAAA2a,GACA,GAAAW,GAAAD,EAAAvd,IAAA,OAAAkC,QAAAsb,MAGA,OAAAD,GAAAha,GAAA,wBAAAoB,GACAA,EAAA8Y,SAEAZ,EAAAa,kBAAAH,EAAArb,GACAsb,GAAAX,EAAAc,OAAAhZ,IACIA,EAAAiZ,SAEJJ,GAAAX,EAAAgB,KAAAlZ,KAEGpB,GAAA,4BAAAoB,GACH,MAAAkY,GAAAiB,MAAAnZ,MAKA6X,EAAAuB,mBAAA,SAAAR,GACAA,EAAA5Z,IAAA,yCAGA6Y,EAAAwB,iBAAA,WACA,GAAA9M,GAAA/O,UAAAT,OAAA,OAAAW,KAAAF,UAAA,GAAAA,UAAA,MAEA8b,GAAA,EACAC,GAAA,CAYA,QAXAhN,OAEAjG,QAAA,SAAAJ,GACA,OAAAA,GACA,YACAqT,GAAA,CAAqB,MACrB,aACAD,EAAAzW,EAAAuR,iBAIAkF,GAAA1B,EAAAnY,QAAA+Z,YAAAD,GAAA3B,EAAAnY,QAAAga,YAAA,MAGA5B,EAAAnc,UAAAgM,IAAA,SAAAvE,EAAA5F,EAAA2a,GACA,GAAA5F,IAAA,EAAA1P,EAAAvC,GAAA8C,GACAuW,EAAApH,EAAAxM,aAAAjD,EAAAwR,WACA2D,EAAApB,GACAnM,UAAA5H,EAAAyR,UAAAM,cACAvI,OAAA,KACAG,eAAA,GACAF,eAAA,EACAC,WAAA,kBACGhP,GACH0a,EAAAJ,EAAAwB,iBAAArB,EAAAzL,UAEA0L,KAIAyB,EACA1d,KAAA8b,SAAA4B,GAAAd,OAAAvH,UAEAqI,EAAA9Y,KAAAuR,MAAAvR,KAAA+Y,UAAA,GAAAC,OAAAC,WAEA7d,KAAA8b,SAAA4B,IACAd,OAAAf,EAAAE,aAAAzF,EAAA0F,EAAAC,EAAAC,GACA5F,KACA/U,QAAAya,GAEA1F,EAAA5E,aAAA7K,EAAAwR,UAAAqF,KAGA7B,EAAAnc,UAAA8b,OAAA,SAAArU,GACA,GAAAmP,IAAA,EAAA1P,EAAAvC,GAAA8C,GACAjG,EAAAoV,EAAAxM,aAAAjD,EAAAwR,UAEA,IAAAnX,EAAA,CACA,GAAA0b,GAAA5c,KAAA8b,SAAA5a,GAAA0b,MAEAf,GAAAuB,mBAAAR,GACAA,EAAAvH,gBACArV,MAAA8b,SAAA5a,GACAoV,EAAApB,gBAAArO,EAAAwR,aAIAwD,EAAAnc,UAAA+b,UAAA,SAAAtU,GACA,GAAA8I,GAAAjQ,KAAAX,IAAA8H,EAEA,OAAA8I,KAAA2M,OAAA,MAGAf,EAAAnc,UAAAL,IAAA,SAAA8H,GACA,GAAAmP,IAAA,EAAA1P,EAAAvC,GAAA8C,GACAjG,EAAAoV,IAAAxM,aAAAjD,EAAAwR,WAAA,IAEA,OAAAnX,IAAAlB,KAAA8b,SAAA5a,GACAlB,KAAA8b,SAAA5a,GAEA,MAIA2a,EAAAnc,UAAAgc,aAAA,SAAAoC,EAAA3W,GACA,GAAA4W,IACAlB,OAAAiB,EAGA,IAAA3W,EAAA,CACA,GAAAyV,GAAA5c,KAAAyb,UAAAtU,EAEAyV,MAAAvd,IAAA,OAAA2e,IAAAD,OAGA,QAAAne,KAAAI,MAAA8b,SACA9b,KAAA8b,SAAAlc,GAAAgd,OAAAvd,IAAA,OAAA2e,IAAAD,EAGA,OAAA/d,OAGA6b,EAAAnc,UAAA2V,QAAA,WACA,OAAAzV,KAAAI,MAAA8b,SACA9b,KAAAwb,OAAAxb,KAAA8b,SAAAlc,GAAA0W,GAEAtW,MAAA8b,aAGAD,IAGAvd,GAAAmF,QAAAoY,EACAtd,EAAAD,UAAA,SAIA,SAAAC,EAAAD,EAAAH,GAEA,YAeA,SAAA+B,GAAAC,EAAAC,GAAiD,KAAAD,YAAAC,IAA0C,SAAAC,WAAA,qCAE3F,QAAA4F,GAAAtD,EAAAjE,GAAiD,IAAAiE,EAAa,SAAAuD,gBAAA,4DAAyF,QAAAxH,GAAA,gBAAAA,IAAA,kBAAAA,GAAAiE,EAAAjE,EAEvJ,QAAAyH,GAAAC,EAAAC,GAA0C,qBAAAA,IAAA,OAAAA,EAA+D,SAAAhG,WAAA,iEAAAgG,GAAuGD,GAAA1G,UAAAT,OAAAqH,OAAAD,KAAA3G,WAAyEgB,aAAeT,MAAAmG,EAAAhH,YAAA,EAAA6B,UAAA,EAAA9B,cAAA,KAA6EkH,IAAApH,OAAAsH,eAAAtH,OAAAsH,eAAAH,EAAAC,GAAAD,EAAAI,UAAAH,GAhBrX/H,EAAAiB,YAAA,CAEA,IAAAqb,GAAA3b,OAAA4b,QAAA,SAAAha,GAAmD,OAAArC,GAAA,EAAgBA,EAAAgD,UAAAT,OAAsBvC,IAAA,CAAO,GAAAsY,GAAAtV,UAAAhD,EAA2B,QAAA0C,KAAA4V,GAA0B7X,OAAAS,UAAAC,eAAAjB,KAAAoY,EAAA5V,KAAyDL,EAAAK,GAAA4V,EAAA5V,IAAiC,MAAAL,IAE/Ood,EAAA9f,EAAA,GAEA+f,EAIA,SAAAzd,GAAsC,MAAAA,MAAAlB,WAAAkB,GAAuCgD,QAAAhD,IAJ7Ewd,GAEA7Y,EAAAjH,EAAA,EAUAG,GAAAmF,QAAA,SAAAmS,GACA,gBAAAC,GAGA,QAAAC,KACA5V,EAAAF,KAAA8V,EAEA,IAAAlS,GAAAqC,EAAAjG,KAAA6V,EAAAnX,KAAAsB,MAMA,OAJA4D,GAAAua,KAAA,KACAva,EAAAwa,cAAA,KACAxa,EAAAya,cAAAza,EAAAya,cAAAzP,KAAAhL,GACAA,EAAA0a,SAAA1a,EAAA0a,SAAA1P,KAAAhL,GACAA,EAsPA,MAjQAuC,GAAA2P,EAAAD,GAcAC,EAAApW,UAAA6e,MAAA,SAAAvS,EAAAC,EAAAE,GACA,GAAAnM,KAAAoe,cAAA,CACApe,KAAAqT,QAAA,eACA,IAAAmL,GAAAxe,KAAAX,MAEA+S,EAAA8L,EAAAza,QAAA0W,eAAAna,KAAAX,MAAA2M,EAAAC,EAAAE,EAEAiG,GAAA,KAAAoM,EAAA,IAAApM,EAAA,KAAAoM,EAAA,IACAxe,KAAAye,wBAAArM,GAAA,GAEApS,KAAAoe,cAAA,KACApe,KAAAme,MAAA/Y,EAAAT,OAAA+Z,qBAAA1e,KAAAme,MACAne,KAAAme,KAAA,OAIArI,EAAApW,UAAAif,cAAA,SAAAC,EAAA9O,EAAAgD,GACA,GAAAV,GAAApS,KAAAX,MACA2M,EAAAhM,KAAAuB,QAAAyK,IACAC,EAAAjM,KAAAuB,QAAA0K,IACAE,EAAAnM,KAAAuB,QAAA4K,SACAgP,EAAAnb,KAAAuB,QAAA4Z,gBACApJ,EAAAmM,EAAAza,QAAA2V,uBAAAhH,EAAAwM,EAAA5S,EAAAC,EAAAE,EAAAnM,KAAAuB,QAAAkH,OAEAsJ,GAAAmM,EAAAza,QAAAkW,WAAAvH,EAAAL,EAAA/F,EAAAC,GAAAmG,EAAAL,CAEA,IAAAQ,IAAA3N,KAAAyJ,IAAA0D,EAAA,GAAAK,EAAA,IAAAxN,KAAAyJ,IAAA0D,EAAA,GAAAK,EAAA,KACAyM,EAAA,MAAA/O,EAAAoO,EAAAza,QAAAuW,mBAAAzH,EAAAvS,KAAAuB,QAAA+K,cAAAwD,CAGA,OADA+O,GAAA1D,EAAA0D,IAAA1D,GAEArJ,QAAAM,EAAAtQ,SACAiQ,UAAAjQ,SACAgd,SAAAZ,EAAAza,QAAAiW,UAAA3H,EAAA/F,EAAAC,GACAiO,WAAAgE,EAAAza,QAAAyW,WAAA0E,EAAA5S,EAAAC,EAAAE,GACA2D,SAAA+O,EACAtM,WACAO,eAAA,KACAiM,KAAA/e,KAAAqe,gBAIAvI,EAAApW,UAAA4e,SAAA,SAAAU,EAAAlM,GACA,GAAAV,GAAApS,KAAAX,MACA2M,EAAAhM,KAAAuB,QAAAyK,IACAC,EAAAjM,KAAAuB,QAAA0K,GAEAjM,MAAAif,SAAAjf,KAAA2e,eAAA/Z,KAAAoH,IAAAC,EAAA,GAAArH,KAAAqH,IAAAD,EAAA,GAAAoG,EAAA,KAAAxN,KAAAoH,IAAAC,EAAA,GAAArH,KAAAqH,IAAAD,EAAA,GAAAoG,EAAA,WAAAU,GAAAkM,IAGAlJ,EAAApW,UAAA2e,cAAA,WACAre,KAAAoe,cAAA,IACA,IAAAI,GAAAxe,KAAAX,MACA6f,EAAAhB,EAAAza,QAAA0W,gBAAAvV,KAAAuR,MAAAqI,EAAA,IAAA5Z,KAAAuR,MAAAqI,EAAA,KAAAxe,KAAAuB,QAAAyK,IAAAhM,KAAAuB,QAAA0K,IAAAjM,KAAAuB,QAAA4K,SAEAnM,MAAAmf,MAAA5c,MAAAvC,KAAAkf,GACAlf,KAAAof,eAAA,GAOApf,KAAAqT,QAAA,iBAGAyC,EAAApW,UAAAuf,SAAA,SAAA7L,EAAA4L,GAGA,GAFAhf,KAAAoe,cAAAxD,KAAmCxH,GACnCpT,KAAAoe,cAAAiB,WAAA,GAAAzB,OAAAC,UACAzK,EAAAtD,SAAA,CACA,GAAAwP,GAAAtf,KAAAoe,cACAzb,EAAA3C,MAEA,QAAAuf,KAGA,GADA5c,EAAAwb,KAAA,KACAxb,EAAA6c,OAAAF,IAAA,EAGA,WADAN,IAGArc,GAAAwb,KAAA/Y,EAAAT,OAAA8a,sBAAAF,UAIAvf,MAAAye,wBAAArL,EAAArB,SAAA,GACAiN,KAIAlJ,EAAApW,UAAAggB,WAAA,SAAAd,EAAA9O,EAAAgD,GACA,GAAA3F,GAAAnN,KAEAoT,EAAApT,KAAA2e,cAAAC,EAAA9O,EAAAgD,GACA6M,EAAA3f,KAAAqT,QAAA,iBAAAD,EAGA,IAAAA,EAAA8G,aAAAyF,EACA,SAAAlY,OAAA,gEAGA,IAAAkY,EAAA,CACA,GAAAC,MACAC,EAAA,WACA,GAAAC,GAAAF,EAAA7I,OAEA+I,MAAAphB,KAAAsB,MAGAoT,GAAAtB,QAAA,KAAAsB,EAAArB,QAAA,IAAAqB,EAAAtB,QAAA,KAAAsB,EAAArB,QAAA,IACA6N,EAAA3c,KAAA,WACA,MAAAkK,GAAA8R,SAAA7L,EAAAyM,KAGA3B,EAAAza,QAAAiW,UAAAtG,EAAArB,QAAA/R,KAAAuB,QAAAyK,IAAAhM,KAAAuB,QAAA0K,MACA2T,EAAA3c,KAAA,WACA,MAAAkK,GAAAmR,SAAAuB,EAAA/M,KAGA8M,EAAA3c,KAAA,WACA,MAAAkK,GAAAkR,kBAEAwB,MAOA/J,EAAApW,UAAA8f,OAAA,SAAApM,GAKA,OAJA2M,GAAA,GAAAnC,MAAAxK,EAAAiM,UACAW,EAAAhgB,KAAAigB,QAAAF,EAAA3M,EAAAtD,UACAsC,GAAAgB,EAAAtB,QAAA,GAAAsB,EAAAtB,QAAA,IAEAtT,EAAA,EAAkBA,EAAA,EAAOA,IACzB4T,EAAA5T,KAAA4U,EAAArB,QAAAvT,KAAA4T,EAAA5T,KAAA4U,EAAArB,QAAAvT,GAAA4T,EAAA5T,IAAAwhB,EAIA,OAFA5N,GAAA8L,EAAAza,QAAA0W,eAAA/H,EAAApS,KAAAuB,QAAAyK,IAAAhM,KAAAuB,QAAA0K,IAAAjM,KAAAuB,QAAA4K,UACAnM,KAAAye,wBAAArM,GAAA,GACA4N,GAMAlK,EAAApW,UAAA+e,wBAAA,SAAAzT,EAAA6H,EAAA7O,GAeAhE,KAAAub,KAAAvQ,EAAAlJ,SACA9B,KAAAqT,QAAA,UACAjB,IAAApH,EAAAlJ,SACA+Q,UACAC,YAAA9O,GAAA,QAIA8R,EAAApW,UAAAugB,QAAA,SAAArgB,GACA,MAAAA,GAAA,IAAAI,KAAAuB,QAAA6K,OAAAxM,IAcAkW,EAAApW,UAAAyf,MAAA,SAAA1P,EAAAC,GACA,GAAAI,GAAAtO,UAAAT,OAAA,OAAAW,KAAAF,UAAA,GAAAA,UAAA,KAEA0e,EAAAzQ,EACA0Q,EAAAzQ,EACA1D,EAAAhM,KAAAuB,QAAAyK,IACAC,EAAAjM,KAAAuB,QAAA0K,IACAE,EAAAnM,KAAAuB,QAAA4K,QAEAnM,MAAAue,MAAAvS,EAAAC,EAAAE,EACA,IAAAiG,GAAApS,KAAAX,KAEA,OAAAoQ,KAAA2C,EAAA,IAAA1C,IAAA0C,EAAA,GACApS,MAGAA,KAAAof,eAAA,GACA3P,IAAA2C,EAAA,KACAjG,EAAA,KACA+T,EAAAtb,KAAAqH,IAAAD,EAAA,GAAAkU,IAEA/T,EAAA,KACA+T,EAAAtb,KAAAoH,IAAAC,EAAA,GAAAiU,KAGAxQ,IAAA0C,EAAA,KACAjG,EAAA,KACAgU,EAAAvb,KAAAqH,IAAAD,EAAA,GAAAmU,IAEAhU,EAAA,KACAgU,EAAAvb,KAAAoH,IAAAC,EAAA,GAAAkU,KAGArQ,EACA9P,KAAA0f,YAAAQ,EAAAC,GAAArQ,IAEA9P,KAAAub,KAAA2C,EAAAza,QAAA0W,gBAAA+F,EAAAC,GAAAnU,EAAAC,EAAAE,GACAnM,KAAAye,wBAAAze,KAAAub,MAAA,GACAvb,KAAAof,eAAA,IAEApf,OAcA8V,EAAApW,UAAA0gB,MAAA,SAAA3Q,EAAAC,GACA,GAAAI,GAAAtO,UAAAT,OAAA,OAAAW,KAAAF,UAAA,GAAAA,UAAA,IAEA,OAAAxB,MAAAmf,MAAA,MAAA1P,EAAAzP,KAAAub,KAAA,GAAA9L,EAAAzP,KAAAub,KAAA,SAAA7L,EAAA1P,KAAAub,KAAA,GAAA7L,EAAA1P,KAAAub,KAAA,GAAAzL,IAGAgG,GACEF,IAGFrX,EAAAD,UAAA,SAIA,SAAAC,EAAAD,EAAAH,GAEA,YAaA,SAAA+B,GAAAC,EAAAC,GAAiD,KAAAD,YAAAC,IAA0C,SAAAC,WAAA,qCAE3F,QAAA4F,GAAAtD,EAAAjE,GAAiD,IAAAiE,EAAa,SAAAuD,gBAAA,4DAAyF,QAAAxH,GAAA,gBAAAA,IAAA,kBAAAA,GAAAiE,EAAAjE,EAEvJ,QAAAyH,GAAAC,EAAAC,GAA0C,qBAAAA,IAAA,OAAAA,EAA+D,SAAAhG,WAAA,iEAAAgG,GAAuGD,GAAA1G,UAAAT,OAAAqH,OAAAD,KAAA3G,WAAyEgB,aAAeT,MAAAmG,EAAAhH,YAAA,EAAA6B,UAAA,EAAA9B,cAAA,KAA6EkH,IAAApH,OAAAsH,eAAAtH,OAAAsH,eAAAH,EAAAC,GAAAD,EAAAI,UAAAH,GAdrX/H,EAAAiB,YAAA,CAEA,IAAA0e,GAAA9f,EAAA,GAEA+f,EAIA,SAAAzd,GAAsC,MAAAA,MAAAlB,WAAAkB,GAAuCgD,QAAAhD,IAJ7Ewd,GAEApX,EAAA1I,EAAA,EAUAG,GAAAmF,QAAA,SAAAmS,GACA,gBAAAC,GAGA,QAAAC,KACA5V,EAAAF,KAAA8V,EAEA,IAAAlS,GAAAqC,EAAAjG,KAAA6V,EAAAnX,KAAAsB,MAQA,OANA4D,GAAAyc,SACAC,aAAA,EACAC,cAAA,KACAC,kBACAC,aAAA,KACAC,WAAA,GACA9c,EAiNA,MA9NAuC,GAAA2P,EAAAD,GAgBAC,EAAApW,UAAAqd,kBAAA,SAAAH,EAAArb,GACAvB,KAAAqgB,QAAAG,eAAAjf,EACAvB,KAAAqgB,QAAAM,eAAA/D,GAMA9G,EAAApW,UAAAsd,OAAA,SAAAhZ,GACA,GAAAhE,KAAAqgB,QAAAG,eAAAlQ,gBAAAtQ,KAAAqgB,QAAAK,UAAA,CAGA,GAAAtO,GAAApS,KAAAX,MACA2M,EAAAhM,KAAAuB,QAAAyK,IACAC,EAAAjM,KAAAuB,QAAA0K,GAEAjM,MAAAof,eAAA,GACApf,KAAAue,MAAAvS,EAAAC,EAAAjM,KAAAuB,QAAA4K,UAYAnM,KAAAqT,QAAA,QACAjB,MAAAtQ,SACAgR,YAAA9O,IAGAhE,KAAAqgB,QAAAI,aAAArO,EAAAtQ,SACA9B,KAAAqgB,QAAAC,YAAApC,EAAAza,QAAAiW,UAAAtH,EAAApG,EAAAC,KAMA6J,EAAApW,UAAAyd,MAAA,SAAAnZ,GACA,GAAAhE,KAAA4gB,mBAAA5gB,KAAAqgB,QAAAI,aAAA,CAGA,GAAArO,GAAApS,KAAAX,KAAA,GACA2M,EAAAhM,KAAAuB,QAAAyK,IACAC,EAAAjM,KAAAuB,QAAA0K,IACAxD,EAAAzI,KAAAuB,QAAAkH,OACAyD,EAAAlM,KAAAuB,QAAA2K,OACAsU,EAAAxgB,KAAAqgB,QAAAG,eACA/R,EAAA+R,EAAA/R,UACA4B,EAAAmQ,EAAAnQ,MACA6I,EAAAgF,EAAAza,QAAAqV,oBAAA9U,EAAA+U,MAAAyH,EAAAhQ,gBACAqQ,GAAA3U,EAAA,GAAAzD,EAAA,GAAAyD,EAAA,GAAAzD,EAAA,GAAAyD,EAAA,GAAAzD,EAAA,GAAAyD,EAAA,GAAAzD,EAAA,IACAqY,GAAA,EAGAC,EAAA/gB,KAAAqgB,QAAAM,eAAAK,QAAAD,SAGAA,IACA/c,EAAAid,QAAAjd,EAAAkd,OAAAH,EAAAG,OACAld,EAAAmd,QAAAnd,EAAAod,OAAAL,EAAAK,SAEApd,EAAAid,QAAA,EACAjd,EAAAmd,QAAA,GAIAjD,EAAAza,QAAAwV,aAAAxK,EAAAyK,KACAlZ,KAAAqgB,QAAAI,aAAA,IAAAzc,EAAAid,QAAA5Q,EAAA,GACAyQ,GAAA,GAEA5C,EAAAza,QAAA0V,WAAA1K,EAAAyK,KACAlZ,KAAAqgB,QAAAI,aAAA,IAAAzc,EAAAmd,QAAA9Q,EAAA,GACAyQ,GAAA,GAEAA,IACA9c,EAAAqd,SAAAC,iBACAtd,EAAAqd,SAAAE,mBAEAvd,EAAA+O,mBAAA+N,EAGA1O,EAAA,GAAApS,KAAAqgB,QAAAI,aAAA,GACArO,EAAA,GAAApS,KAAAqgB,QAAAI,aAAA,GACArO,EAAA8L,EAAAza,QAAA0W,eAAA/H,EAAApG,EAAAC,EAAAjM,KAAAuB,QAAA4K,UAGAnM,KAAAqgB,QAAAC,cAAApC,EAAAza,QAAAiW,UAAAtH,EAAApG,EAAAC,KACAjM,KAAAqgB,QAAAC,aAAA,EAIA,IAAAkB,OAAA,GACAC,MAAA,GACAC,MAAA,EAEA,IAAA1hB,KAAAqgB,QAAAC,YACAmB,EAAAzV,EAAA,GAAA6U,EAAA,GACAa,EAAAzV,EAAA,GAAA4U,EAAA,GACAW,EAAApP,EAAA,GAEAA,EAAA,GAAAoP,EAAAE,IAAAF,EAAAC,IAAAD,EACAC,EAAAzV,EAAA,GAAA6U,EAAA,GACAa,EAAAzV,EAAA,GAAA4U,EAAA,GACAW,EAAApP,EAAA,GACAA,EAAA,GAAAoP,EAAAE,IAAAF,EAAAC,IAAAD,MAEI,CAGJ,GAAAG,GAAA3hB,KAAAigB,QAAA,UAEA7N,GAAA,GAAApG,EAAA,IAEAwV,GAAAxV,EAAA,GAAAoG,EAAA,KAAAyO,EAAA,GAAAc,GACAvP,EAAA,GAAApG,EAAA,GAAAhM,KAAAigB,QAAAuB,GAAAX,EAAA,IACKzO,EAAA,GAAAnG,EAAA,KAELuV,GAAApP,EAAA,GAAAnG,EAAA,KAAA4U,EAAA,GAAAc,GACAvP,EAAA,GAAAnG,EAAA,GAAAjM,KAAAigB,QAAAuB,GAAAX,EAAA,IAEAzO,EAAA,GAAApG,EAAA,IAEAwV,GAAAxV,EAAA,GAAAoG,EAAA,KAAAyO,EAAA,GAAAc,GACAvP,EAAA,GAAApG,EAAA,GAAAhM,KAAAigB,QAAAuB,GAAAX,EAAA,IACKzO,EAAA,GAAAnG,EAAA,KAELuV,GAAApP,EAAA,GAAAnG,EAAA,KAAA4U,EAAA,GAAAc,GACAvP,EAAA,GAAAnG,EAAA,GAAAjM,KAAAigB,QAAAuB,GAAAX,EAAA,IAGA7gB,KAAAye,wBAAArM,GAAA,EAAApO,KAMA8R,EAAApW,UAAAwd,KAAA,SAAAlZ,GACA,GAAAoO,GAAApS,KAAAX,KAEA,IAAAW,KAAA4gB,mBAAA5gB,KAAAqgB,QAAAI,aAAA,CAKA,OAAAzc,EAAAuO,SACAvS,KAAAof,eAAA,GACApf,KAAAqT,QAAA,WACAvB,QAAAM,EAAAtQ,SACAiQ,QAAAK,EAAAtQ,SACAgR,YAAA9O,GAAA,WAEK,CACL,GAAAyK,GAAAzO,KAAAqgB,QAAAG,eAAA/R,UACA4B,EAAArQ,KAAAqgB,QAAAG,eAAAnQ,MACAuR,EAAAhd,KAAAyJ,IAAArK,EAAA6d,WACAC,EAAAld,KAAAyJ,IAAArK,EAAA+d,aAEAtT,EAAA5H,EAAAyR,UAAAI,wBAAAkJ,EAAA,KACAnT,EAAA5H,EAAAyR,UAAAK,sBAAAmJ,EAAA,EAEA,IAAAE,GAAA9D,EAAAza,QAAAmW,kBAAAgI,GAAA5d,EAAAkd,OAAA,QAAA7Q,EAAA,GAAAyR,GAAA9d,EAAAod,OAAA,QAAA/Q,EAAA,IAAArQ,KAAAuB,QAAA+K,cACAyF,GAAAK,EAAA,GAAA4P,EAAA,GAAA5P,EAAA,GAAA4P,EAAA,GAEAjQ,GAAAmM,EAAAza,QAAA2V,uBAAAhH,EAAAL,EAAA/R,KAAAuB,QAAAyK,IAAAhM,KAAAuB,QAAA0K,IAAAjM,KAAAuB,QAAA4K,SAAAnM,KAAAuB,QAAAkH,QAgBAzI,KAAAqT,QAAA,WACAvB,QAAAM,EAAAtQ,SACAiQ,UACAe,YAAA9O,GAAA,OAEAoO,EAAA,KAAAL,EAAA,IAAAK,EAAA,KAAAL,EAAA,GACA/R,KAAA0f,WAAA3N,EAAA,KAAA/N,GAAA,MAEAhE,KAAAof,eAAA,GAGApf,KAAAqgB,QAAAI,aAAA,OAGA3K,EAAApW,UAAAkhB,gBAAA,WAEA,MAAA5gB,MAAAqgB,QAAAG,eAAAlQ,eAAAtQ,KAAAqgB,QAAAK,WAGA5K,EAAApW,UAAA0f,cAAA,SAAAsB,IACA1gB,KAAAqgB,QAAAG,eAAAlQ,gBAAAtQ,KAAAqgB,QAAAK,cAGA5K,GACEF,IAGFrX,EAAAD,UAAA,SAIA,SAAAC,EAAAD,EAAAH,GAEA,YAGA,IAAA8jB,GAAA9jB,EAAA,GAEA+jB,EAEA,SAAAzhB,GAAsC,MAAAA,MAAAlB,WAAAkB,GAAuCgD,QAAAhD,IAF7EwhB,EAIAC,GAAAze,QAAA0e,QAAA,aACA5jB,EAAAD,QAAA4jB,EAAAze,SAIA,SAAAlF,EAAAD,GAEAC,EAAAD,QAAA4Z,GAIA,SAAA3Z,EAAAD,GAEAC,EAAAD,QAAA6Z,QN0vFM,SAAU5Z,EAAQD,EAASH,GO1kIjC,GAAAikB;;;;;CAKA,SAAAzd,EAAAG,EAAAud,EAAA3gB,GACA,YAkBA,SAAA4gB,GAAAC,EAAAC,EAAAC,GACA,MAAAC,YAAAC,EAAAJ,EAAAE,GAAAD,GAYA,QAAAI,GAAA3gB,EAAAsgB,EAAAE,GACA,QAAApgB,MAAAwG,QAAA5G,KACA4gB,EAAA5gB,EAAAwgB,EAAAF,GAAAE,IACA,GAWA,QAAAI,GAAApiB,EAAAD,EAAAiiB,GACA,GAAAjkB,EAEA,IAAAiC,EAIA,GAAAA,EAAA6J,QACA7J,EAAA6J,QAAA9J,EAAAiiB,OACK,IAAAhiB,EAAAM,SAAAW,EAEL,IADAlD,EAAA,EACAA,EAAAiC,EAAAM,QACAP,EAAA9B,KAAA+jB,EAAAhiB,EAAAjC,KAAAiC,GACAjC,QAGA,KAAAA,IAAAiC,GACAA,EAAAd,eAAAnB,IAAAgC,EAAA9B,KAAA+jB,EAAAhiB,EAAAjC,KAAAiC,GAYA,QAAAqiB,GAAAlT,EAAA9Q,EAAAikB,GACA,GAAAC,GAAA,sBAAAlkB,EAAA,KAAAikB,EAAA,QACA,mBACA,GAAA/e,GAAA,GAAAyD,OAAA,mBACAwb,EAAAjf,KAAAif,MAAAjf,EAAAif,MAAArR,QAAA,sBACAA,QAAA,kBACAA,QAAA,+CAA+D,sBAE/DsR,EAAAve,EAAAwe,UAAAxe,EAAAwe,QAAAC,MAAAze,EAAAwe,QAAAD,IAIA,OAHAA,IACAA,EAAAxkB,KAAAiG,EAAAwe,QAAAH,EAAAC,GAEArT,EAAArN,MAAAvC,KAAAwB,YAwEA,QAAA6hB,GAAAC,EAAAC,EAAAC,GACA,GACAC,GADAC,EAAAH,EAAA7jB,SAGA+jB,GAAAH,EAAA5jB,UAAAT,OAAAqH,OAAAod,GACAD,EAAA/iB,YAAA4iB,EACAG,EAAAE,OAAAD,EAEAF,GACA3I,GAAA4I,EAAAD,GAUA,QAAAb,GAAAJ,EAAAE,GACA,kBACA,MAAAF,GAAAhgB,MAAAkgB,EAAAjhB,YAWA,QAAAoiB,GAAAhb,EAAAib,GACA,aAAAjb,IAAAkb,GACAlb,EAAArG,MAAAshB,IAAA,IAAAniB,IAAAmiB,GAEAjb,EASA,QAAAmb,GAAAC,EAAAC,GACA,MAAAD,KAAAtiB,EAAAuiB,EAAAD,EASA,QAAAE,GAAArjB,EAAAsjB,EAAAjI,GACA2G,EAAAuB,EAAAD,GAAA,SAAA5M,GACA1W,EAAAwjB,iBAAA9M,EAAA2E,GAAA,KAUA,QAAAoI,GAAAzjB,EAAAsjB,EAAAjI,GACA2G,EAAAuB,EAAAD,GAAA,SAAA5M,GACA1W,EAAA0jB,oBAAAhN,EAAA2E,GAAA,KAWA,QAAAsI,GAAAC,EAAAC,GACA,KAAAD,GAAA,CACA,GAAAA,GAAAC,EACA,QAEAD,KAAAlZ,WAEA,SASA,QAAAoZ,GAAAC,EAAAC,GACA,MAAAD,GAAA1O,QAAA2O,IAAA,EAQA,QAAAT,GAAAQ,GACA,MAAAA,GAAAnO,OAAA9B,MAAA,QAUA,QAAAmQ,GAAAC,EAAAF,EAAAG,GACA,GAAAD,EAAA7O,UAAA8O,EACA,MAAAD,GAAA7O,QAAA2O,EAGA,KADA,GAAArmB,GAAA,EACAA,EAAAumB,EAAAhkB,QAAA,CACA,GAAAikB,GAAAD,EAAAvmB,GAAAwmB,IAAAH,IAAAG,GAAAD,EAAAvmB,KAAAqmB,EACA,MAAArmB,EAEAA,KAEA,SASA,QAAAmc,GAAAla,GACA,MAAA4B,OAAA3C,UAAA0J,MAAA1K,KAAA+B,EAAA,GAUA,QAAAwkB,GAAAF,EAAA7jB,EAAAoN,GAKA,IAJA,GAAA4W,MACAC,KACA3mB,EAAA,EAEAA,EAAAumB,EAAAhkB,QAAA,CACA,GAAA6H,GAAA1H,EAAA6jB,EAAAvmB,GAAA0C,GAAA6jB,EAAAvmB,EACAsmB,GAAAK,EAAAvc,GAAA,GACAsc,EAAAjiB,KAAA8hB,EAAAvmB,IAEA2mB,EAAA3mB,GAAAoK,EACApK,IAaA,MAVA8P,KAIA4W,EAHAhkB,EAGAgkB,EAAA5W,KAAA,SAAA8W,EAAAC,GACA,MAAAD,GAAAlkB,GAAAmkB,EAAAnkB,KAHAgkB,EAAA5W,QAQA4W,EASA,QAAAI,GAAA7kB,EAAAhB,GAKA,IAJA,GAAAyJ,GAAAqc,EACAC,EAAA/lB,EAAA,GAAAgmB,cAAAhmB,EAAA2J,MAAA,GAEA5K,EAAA,EACAA,EAAAknB,GAAA3kB,QAAA,CAIA,GAHAmI,EAAAwc,GAAAlnB,IACA+mB,EAAA,EAAArc,EAAAsc,EAAA/lB,IAEAgB,GACA,MAAA8kB,EAEA/mB,KAEA,MAAAkD,GAQA,QAAAikB,KACA,MAAAC,MAQA,QAAAC,GAAA1e,GACA,GAAA2e,GAAA3e,EAAA4e,eAAA5e,CACA,OAAA2e,GAAAE,aAAAF,EAAAG,cAAAthB,EAyCA,QAAAuhB,GAAAC,EAAAC,GACA,GAAAzjB,GAAA3C,IACAA,MAAAmmB,UACAnmB,KAAAomB,WACApmB,KAAAmH,QAAAgf,EAAAhf,QACAnH,KAAAa,OAAAslB,EAAA5kB,QAAA8kB,YAIArmB,KAAAsmB,WAAA,SAAAC,GACA3C,EAAAuC,EAAA5kB,QAAAsb,QAAAsJ,KACAxjB,EAAAuZ,QAAAqK,IAIAvmB,KAAAwmB,OAoCA,QAAAC,GAAAN,GACA,GACAlK,GAAAkK,EAAA5kB,QAAA0a,UAaA,YAXAA,IAEKyK,GACLC,EACKC,GACLpJ,EACKpF,GAGLyO,EAFApJ,IAIA0I,EAAAW,GASA,QAAAA,GAAAX,EAAApkB,EAAAglB,GACA,GAAAC,GAAAD,EAAAE,SAAAlmB,OACAmmB,EAAAH,EAAAI,gBAAApmB,OACA+b,EAAA/a,EAAAqlB,IAAAJ,EAAAE,GAAA,EACAjK,EAAAlb,GAAAslB,GAAAC,KAAAN,EAAAE,GAAA,CAEAH,GAAAjK,YACAiK,EAAA9J,YAEAH,IACAqJ,EAAAnF,YAKA+F,EAAAhlB,YAGAwlB,EAAApB,EAAAY,GAGAZ,EAAAqB,KAAA,eAAAT,GAEAZ,EAAAsB,UAAAV,GACAZ,EAAAnF,QAAAD,UAAAgG,EAQA,QAAAQ,GAAApB,EAAAY,GACA,GAAA/F,GAAAmF,EAAAnF,QACAiG,EAAAF,EAAAE,SACAS,EAAAT,EAAAlmB,MAGAigB,GAAA2G,aACA3G,EAAA2G,WAAAC,EAAAb,IAIAW,EAAA,IAAA1G,EAAA6G,cACA7G,EAAA6G,cAAAD,EAAAb,GACK,IAAAW,IACL1G,EAAA6G,eAAA,EAGA,IAAAF,GAAA3G,EAAA2G,WACAE,EAAA7G,EAAA6G,cACAC,EAAAD,IAAAE,OAAAJ,EAAAI,OAEAA,EAAAhB,EAAAgB,OAAAC,EAAAf,EACAF,GAAAkB,UAAAC,KACAnB,EAAAoB,UAAApB,EAAAkB,UAAAN,EAAAM,UAEAlB,EAAAhO,MAAAqP,EAAAN,EAAAC,GACAhB,EAAAxU,SAAA8V,EAAAP,EAAAC,GAEAO,EAAAtH,EAAA+F,GACAA,EAAAwB,gBAAAC,EAAAzB,EAAA7F,OAAA6F,EAAA3F,OAEA,IAAAqH,GAAAC,EAAA3B,EAAAoB,UAAApB,EAAA7F,OAAA6F,EAAA3F,OACA2F,GAAA4B,iBAAAF,EAAAhZ,EACAsX,EAAA6B,iBAAAH,EAAA/Y,EACAqX,EAAA0B,gBAAApa,GAAAoa,EAAAhZ,GAAApB,GAAAoa,EAAA/Y,GAAA+Y,EAAAhZ,EAAAgZ,EAAA/Y,EAEAqX,EAAA1W,MAAAwX,EAAAgB,EAAAhB,EAAAZ,YAAA,EACAF,EAAA+B,SAAAjB,EAAAkB,EAAAlB,EAAAZ,YAAA,EAEAF,EAAAiC,YAAAhI,EAAAD,UAAAgG,EAAAE,SAAAlmB,OACAigB,EAAAD,UAAAiI,YAAAjC,EAAAE,SAAAlmB,OAAAigB,EAAAD,UAAAiI,YADAjC,EAAAE,SAAAlmB,OAGAkoB,EAAAjI,EAAA+F,EAGA,IAAAlmB,GAAAslB,EAAAhf,OACAqd,GAAAuC,EAAA1F,SAAAxgB,YACAA,EAAAkmB,EAAA1F,SAAAxgB,QAEAkmB,EAAAlmB,SAGA,QAAAynB,GAAAtH,EAAA+F,GACA,GAAAgB,GAAAhB,EAAAgB,OACA/F,EAAAhB,EAAAkI,gBACAC,EAAAnI,EAAAmI,cACApI,EAAAC,EAAAD,aAEAgG,GAAAhlB,YAAAqlB,IAAArG,EAAAhf,YAAAslB,KACA8B,EAAAnI,EAAAmI,WACA1Z,EAAAsR,EAAAG,QAAA,EACAxR,EAAAqR,EAAAK,QAAA,GAGAY,EAAAhB,EAAAkI,aACAzZ,EAAAsY,EAAAtY,EACAC,EAAAqY,EAAArY,IAIAqX,EAAA7F,OAAAiI,EAAA1Z,GAAAsY,EAAAtY,EAAAuS,EAAAvS,GACAsX,EAAA3F,OAAA+H,EAAAzZ,GAAAqY,EAAArY,EAAAsS,EAAAtS,GAQA,QAAAuZ,GAAAjI,EAAA+F,GACA,GAEAqC,GAAAvH,EAAAE,EAAAtT,EAFA4a,EAAArI,EAAAsI,cAAAvC,EACAoB,EAAApB,EAAAkB,UAAAoB,EAAApB,SAGA,IAAAlB,EAAAhlB,WAAAulB,KAAAa,EAAAoB,IAAAF,EAAAD,WAAA1nB,GAAA,CACA,GAAAwf,GAAA6F,EAAA7F,OAAAmI,EAAAnI,OACAE,EAAA2F,EAAA3F,OAAAiI,EAAAjI,OAEAlX,EAAAwe,EAAAP,EAAAjH,EAAAE,EACAS,GAAA3X,EAAAuF,EACAsS,EAAA7X,EAAAwF,EACA0Z,EAAA/a,GAAAnE,EAAAuF,GAAApB,GAAAnE,EAAAwF,GAAAxF,EAAAuF,EAAAvF,EAAAwF,EACAjB,EAAA+Z,EAAAtH,EAAAE,GAEAJ,EAAAsI,aAAAvC,MAGAqC,GAAAC,EAAAD,SACAvH,EAAAwH,EAAAxH,UACAE,EAAAsH,EAAAtH,UACAtT,EAAA4a,EAAA5a,SAGAsY,GAAAqC,WACArC,EAAAlF,YACAkF,EAAAhF,YACAgF,EAAAtY,YAQA,QAAAmZ,GAAAb,GAKA,IAFA,GAAAE,MACAzoB,EAAA,EACAA,EAAAuoB,EAAAE,SAAAlmB,QACAkmB,EAAAzoB,IACAgrB,QAAArT,GAAA4Q,EAAAE,SAAAzoB,GAAAgrB,SACAC,QAAAtT,GAAA4Q,EAAAE,SAAAzoB,GAAAirB,UAEAjrB,GAGA,QACAypB,UAAAC,KACAjB,WACAc,OAAAC,EAAAf,GACA/F,OAAA6F,EAAA7F,OACAE,OAAA2F,EAAA3F,QASA,QAAA4G,GAAAf,GACA,GAAAS,GAAAT,EAAAlmB,MAGA,QAAA2mB,EACA,OACAjY,EAAA0G,GAAA8Q,EAAA,GAAAuC,SACA9Z,EAAAyG,GAAA8Q,EAAA,GAAAwC,SAKA,KADA,GAAAha,GAAA,EAAAC,EAAA,EAAAlR,EAAA,EACAA,EAAAkpB,GACAjY,GAAAwX,EAAAzoB,GAAAgrB,QACA9Z,GAAAuX,EAAAzoB,GAAAirB,QACAjrB,GAGA,QACAiR,EAAA0G,GAAA1G,EAAAiY,GACAhY,EAAAyG,GAAAzG,EAAAgY,IAWA,QAAAgB,GAAAP,EAAA1Y,EAAAC,GACA,OACAD,IAAA0Y,GAAA,EACAzY,IAAAyY,GAAA,GAUA,QAAAK,GAAA/Y,EAAAC,GACA,MAAAD,KAAAC,EACA6I,GAGAlK,GAAAoB,IAAApB,GAAAqB,GACAD,EAAA,EAAA4B,GAAAC,GAEA5B,EAAA,EAAA8I,GAAAC,GAUA,QAAA4P,GAAAqB,EAAAC,EAAA7oB,GACAA,IACAA,EAAA8oB,GAEA,IAAAna,GAAAka,EAAA7oB,EAAA,IAAA4oB,EAAA5oB,EAAA,IACA4O,EAAAia,EAAA7oB,EAAA,IAAA4oB,EAAA5oB,EAAA,GAEA,OAAA8D,MAAAmV,KAAAtK,IAAAC,KAUA,QAAA0Y,GAAAsB,EAAAC,EAAA7oB,GACAA,IACAA,EAAA8oB,GAEA,IAAAna,GAAAka,EAAA7oB,EAAA,IAAA4oB,EAAA5oB,EAAA,IACA4O,EAAAia,EAAA7oB,EAAA,IAAA4oB,EAAA5oB,EAAA,GACA,YAAA8D,KAAAilB,MAAAna,EAAAD,GAAA7K,KAAAklB,GASA,QAAAf,GAAAgB,EAAAC,GACA,MAAA5B,GAAA4B,EAAA,GAAAA,EAAA,GAAAC,IAAA7B,EAAA2B,EAAA,GAAAA,EAAA,GAAAE,IAUA,QAAApB,GAAAkB,EAAAC,GACA,MAAA3B,GAAA2B,EAAA,GAAAA,EAAA,GAAAC,IAAA5B,EAAA0B,EAAA,GAAAA,EAAA,GAAAE,IAiBA,QAAAxM,KACAzd,KAAAkqB,KAAAC,GACAnqB,KAAAoqB,MAAAC,GAEArqB,KAAAsqB,SAAA,EAEApE,EAAA3jB,MAAAvC,KAAAwB,WAoEA,QAAAmlB,KACA3mB,KAAAkqB,KAAAK,GACAvqB,KAAAoqB,MAAAI,GAEAtE,EAAA3jB,MAAAvC,KAAAwB,WAEAxB,KAAAyqB,MAAAzqB,KAAAmmB,QAAAnF,QAAAhO,iBAoEA,QAAA0X,KACA1qB,KAAA2qB,SAAAC,GACA5qB,KAAAoqB,MAAAS,GACA7qB,KAAA8qB,SAAA,EAEA5E,EAAA3jB,MAAAvC,KAAAwB,WAsCA,QAAAupB,GAAAxE,EAAAhP,GACA,GAAAyT,GAAArQ,EAAA4L,EAAA0E,SACA5Y,EAAAsI,EAAA4L,EAAA2E,eAMA,OAJA3T,IAAA8P,GAAAC,MACA0D,EAAA/F,EAAA+F,EAAAlpB,OAAAuQ,GAAA,mBAGA2Y,EAAA3Y,GAiBA,QAAAmL,KACAxd,KAAA2qB,SAAAQ,GACAnrB,KAAAorB,aAEAlF,EAAA3jB,MAAAvC,KAAAwB,WA0BA,QAAA6pB,GAAA9E,EAAAhP,GACA,GAAA+T,GAAA3Q,EAAA4L,EAAA0E,SACAG,EAAAprB,KAAAorB,SAGA,IAAA7T,GAAA6P,GAAAmE,KAAA,IAAAD,EAAAvqB,OAEA,MADAqqB,GAAAE,EAAA,GAAAE,aAAA,GACAF,IAGA,IAAA9sB,GACAitB,EACAP,EAAAvQ,EAAA4L,EAAA2E,gBACAQ,KACA7qB,EAAAb,KAAAa,MAQA,IALA4qB,EAAAH,EAAAK,OAAA,SAAAnd,GACA,MAAAgW,GAAAhW,EAAA3N,YAIA0W,IAAA6P,GAEA,IADA5oB,EAAA,EACAA,EAAAitB,EAAA1qB,QACAqqB,EAAAK,EAAAjtB,GAAAgtB,aAAA,EACAhtB,GAMA,KADAA,EAAA,EACAA,EAAA0sB,EAAAnqB,QACAqqB,EAAAF,EAAA1sB,GAAAgtB,aACAE,EAAAzoB,KAAAioB,EAAA1sB,IAIA+Y,GAAA8P,GAAAC,WACA8D,GAAAF,EAAA1sB,GAAAgtB,YAEAhtB,GAGA,OAAAktB,GAAA3qB,QAMAkkB,EAAAwG,EAAA3pB,OAAA4pB,GAAA,iBACAA,OAPA,GAwBA,QAAA7E,KACAX,EAAA3jB,MAAAvC,KAAAwB,UAEA,IAAA0a,GAAAyG,EAAA3iB,KAAAkc,QAAAlc,KACAA,MAAAwO,MAAA,GAAAgP,GAAAxd,KAAAmmB,QAAAjK,GACAlc,KAAA4rB,MAAA,GAAAnO,GAAAzd,KAAAmmB,QAAAjK,GAEAlc,KAAA6rB,aAAA,KACA7rB,KAAA8rB,eAqCA,QAAAC,GAAAhqB,EAAAiqB,GACAjqB,EAAAqlB,IACApnB,KAAA6rB,aAAAG,EAAA7E,gBAAA,GAAAqE,WACAS,EAAAvtB,KAAAsB,KAAAgsB,IACKjqB,GAAAslB,GAAAC,KACL2E,EAAAvtB,KAAAsB,KAAAgsB,GAIA,QAAAC,GAAAD,GACA,GAAAxd,GAAAwd,EAAA7E,gBAAA,EAEA,IAAA3Y,EAAAgd,aAAAxrB,KAAA6rB,aAAA,CACA,GAAAK,IAAyBzc,EAAAjB,EAAAgb,QAAA9Z,EAAAlB,EAAAib,QACzBzpB,MAAA8rB,YAAA7oB,KAAAipB,EACA,IAAAC,GAAAnsB,KAAA8rB,YACAM,EAAA,WACA,GAAA5tB,GAAA2tB,EAAAjW,QAAAgW,EACA1tB,IAAA,GACA2tB,EAAA9oB,OAAA7E,EAAA,GAGAkkB,YAAA0J,EAAAC,KAIA,QAAAC,GAAAN,GAEA,OADAvc,GAAAuc,EAAA3K,SAAAmI,QAAA9Z,EAAAsc,EAAA3K,SAAAoI,QACAjrB,EAAA,EAAmBA,EAAAwB,KAAA8rB,YAAA/qB,OAA6BvC,IAAA,CAChD,GAAA+tB,GAAAvsB,KAAA8rB,YAAAttB,GACAguB,EAAA5nB,KAAAyJ,IAAAoB,EAAA8c,EAAA9c,GAAAgd,EAAA7nB,KAAAyJ,IAAAqB,EAAA6c,EAAA7c,EACA,IAAA8c,GAAAE,IAAAD,GAAAC,GACA,SAGA,SAsBA,QAAAC,GAAAxG,EAAAlmB,GACAD,KAAAmmB,UACAnmB,KAAAge,IAAA/d,GAmGA,QAAA2sB,GAAAC,GAEA,GAAAlI,EAAAkI,EAAAC,IACA,MAAAA,GAGA,IAAAC,GAAApI,EAAAkI,EAAAG,IACAC,EAAAtI,EAAAkI,EAAAK,GAMA,OAAAH,IAAAE,EACAH,GAIAC,GAAAE,EACAF,EAAAC,GAAAE,GAIAvI,EAAAkI,EAAAM,IACAA,GAGAC,GA2DA,QAAAC,GAAA9rB,GACAvB,KAAAuB,QAAAsZ,MAA4B7a,KAAAstB,SAAA/rB,OAE5BvB,KAAAutB,GAAA5H,IAEA3lB,KAAAmmB,QAAA,KAGAnmB,KAAAuB,QAAAsb,OAAAkH,EAAA/jB,KAAAuB,QAAAsb,QAAA,GAEA7c,KAAAwtB,MAAAC,GAEAztB,KAAA0tB,gBACA1tB,KAAA2tB,eAqOA,QAAAC,IAAAJ,GACA,MAAAA,GAAAK,GACA,SACKL,EAAAM,GACL,MACKN,EAAAO,GACL,OACKP,EAAAQ,GACL,QAEA,GAQA,QAAAC,IAAAxf,GACA,MAAAA,IAAAgK,GACA,OACKhK,GAAA+J,GACL,KACK/J,GAAA4C,GACL,OACK5C,GAAA6C,GACL,QAEA,GASA,QAAA4c,IAAAC,EAAAC,GACA,GAAAjI,GAAAiI,EAAAjI,OACA,OAAAA,GACAA,EAAA9mB,IAAA8uB,GAEAA,EAQA,QAAAE,MACAhB,EAAA9qB,MAAAvC,KAAAwB,WA6DA,QAAA8sB,MACAD,GAAA9rB,MAAAvC,KAAAwB,WAEAxB,KAAAuuB,GAAA,KACAvuB,KAAAwuB,GAAA,KA4EA,QAAAC,MACAJ,GAAA9rB,MAAAvC,KAAAwB,WAsCA,QAAAktB,MACArB,EAAA9qB,MAAAvC,KAAAwB,WAEAxB,KAAA2uB,OAAA,KACA3uB,KAAA4uB,OAAA,KAmEA,QAAAC,MACAR,GAAA9rB,MAAAvC,KAAAwB,WA8BA,QAAAstB,MACAT,GAAA9rB,MAAAvC,KAAAwB,WA2DA,QAAAutB,MACA1B,EAAA9qB,MAAAvC,KAAAwB,WAIAxB,KAAAgvB,OAAA,EACAhvB,KAAAivB,SAAA,EAEAjvB,KAAA2uB,OAAA,KACA3uB,KAAA4uB,OAAA,KACA5uB,KAAAyK,MAAA,EAqGA,QAAAykB,IAAA/nB,EAAA5F,GAGA,MAFAA,SACAA,EAAA8a,YAAA0H,EAAAxiB,EAAA8a,YAAA6S,GAAA5B,SAAA6B,QACA,GAAA/S,IAAAjV,EAAA5F,GAiIA,QAAA6a,IAAAjV,EAAA5F,GACAvB,KAAAuB,QAAAsZ,MAA4BqU,GAAA5B,SAAA/rB,OAE5BvB,KAAAuB,QAAA8kB,YAAArmB,KAAAuB,QAAA8kB,aAAAlf,EAEAnH,KAAAovB,YACApvB,KAAAghB,WACAhhB,KAAAqc,eACArc,KAAAqvB,eAEArvB,KAAAmH,UACAnH,KAAA+mB,MAAAN,EAAAzmB,MACAA,KAAAsvB,YAAA,GAAA3C,GAAA3sB,UAAAuB,QAAA+tB,aAEAC,GAAAvvB,MAAA,GAEA6iB,EAAA7iB,KAAAuB,QAAA8a,YAAA,SAAAmT,GACA,GAAApB,GAAApuB,KAAA0L,IAAA,GAAA8jB,GAAA,GAAAA,EAAA,IACAA,GAAA,IAAApB,EAAAqB,cAAAD,EAAA,IACAA,EAAA,IAAApB,EAAAsB,eAAAF,EAAA,KACKxvB,MA4PL,QAAAuvB,IAAApJ,EAAAza,GACA,GAAAvE,GAAAgf,EAAAhf,OACA,IAAAA,EAAA1B,MAAA,CAGA,GAAA8f,EACA1C,GAAAsD,EAAA5kB,QAAAgb,SAAA,SAAAtc,EAAAnB,GACAymB,EAAAD,EAAAne,EAAA1B,MAAA3G,GACA4M,GACAya,EAAAkJ,YAAA9J,GAAApe,EAAA1B,MAAA8f,GACApe,EAAA1B,MAAA8f,GAAAtlB,GAEAkH,EAAA1B,MAAA8f,GAAAY,EAAAkJ,YAAA9J,IAAA,KAGA7Z,IACAya,EAAAkJ,iBASA,QAAAM,IAAAC,EAAA3f,GACA,GAAA4f,GAAA/qB,EAAAgrB,YAAA,QACAD,GAAAE,UAAAH,GAAA,MACAC,EAAAG,QAAA/f,EACAA,EAAApP,OAAAovB,cAAAJ,GAngFA,GA+FAhV,IA/FA6K,IAAA,iCACAwK,GAAAprB,EAAA0G,cAAA,OAEAsY,GAAA,WAEA3N,GAAAvR,KAAAuR,MACA9H,GAAAzJ,KAAAyJ,IACA6Z,GAAAtK,KAAAsK,GA0FArN,IADA,kBAAA5b,QAAA4b,OACA,SAAAha,GACA,GAAAA,IAAAa,GAAA,OAAAb,EACA,SAAAR,WAAA,6CAIA,QADA8vB,GAAAlxB,OAAA4B,GACA6M,EAAA,EAA2BA,EAAAlM,UAAAT,OAA0B2M,IAAA,CACrD,GAAAoJ,GAAAtV,UAAAkM,EACA,IAAAoJ,IAAApV,GAAA,OAAAoV,EACA,OAAAsZ,KAAAtZ,GACAA,EAAAnX,eAAAywB,KACAD,EAAAC,GAAAtZ,EAAAsZ,IAKA,MAAAD,IAGAlxB,OAAA4b,MAWA,IAAAnS,IAAAoa,EAAA,SAAAuN,EAAAtL,EAAAuL,GAGA,IAFA,GAAAxjB,GAAA7N,OAAA6N,KAAAiY,GACAvmB,EAAA,EACAA,EAAAsO,EAAA/L,UACAuvB,MAAAD,EAAAvjB,EAAAtO,MAAAkD,KACA2uB,EAAAvjB,EAAAtO,IAAAumB,EAAAjY,EAAAtO,KAEAA,GAEA,OAAA6xB,IACC,0BASDC,GAAAxN,EAAA,SAAAuN,EAAAtL,GACA,MAAArc,IAAA2nB,EAAAtL,GAAA,IACC,yBAiNDa,GAAA,EAeA2K,GAAA,wCAEAnY,GAAA,gBAAAzT,GACA+hB,GAAApB,EAAA3gB,EAAA,kBAAAjD,EACAklB,GAAAxO,IAAAmY,GAAA1qB,KAAAC,UAAAC,WAOAwjB,GAAA,GAEAnC,GAAA,EACAmE,GAAA,EACAlE,GAAA,EACAC,GAAA,EAEA/O,GAAA,EACAlH,GAAA,EACAC,GAAA,EACAkH,GAAA,EACAC,GAAA,GAEAC,GAAArH,GAAAC,GACAqH,GAAAH,GAAAC,GACAG,GAAAF,GAAAC,GAEAiR,IAAA,SACAK,IAAA,oBA4BA/D,GAAAxmB,WAKAwc,QAAA,aAKAsK,KAAA,WACAxmB,KAAAkqB,MAAAhG,EAAAlkB,KAAAmH,QAAAnH,KAAAkqB,KAAAlqB,KAAAsmB,YACAtmB,KAAA2qB,UAAAzG,EAAAlkB,KAAAa,OAAAb,KAAA2qB,SAAA3qB,KAAAsmB,YACAtmB,KAAAoqB,OAAAlG,EAAA2B,EAAA7lB,KAAAmH,SAAAnH,KAAAoqB,MAAApqB,KAAAsmB,aAMAjR,QAAA,WACArV,KAAAkqB,MAAA5F,EAAAtkB,KAAAmH,QAAAnH,KAAAkqB,KAAAlqB,KAAAsmB,YACAtmB,KAAA2qB,UAAArG,EAAAtkB,KAAAa,OAAAb,KAAA2qB,SAAA3qB,KAAAsmB,YACAtmB,KAAAoqB,OAAA9F,EAAAuB,EAAA7lB,KAAAmH,SAAAnH,KAAAoqB,MAAApqB,KAAAsmB,aA4TA,IAAAkK,KACAC,UAAArJ,GACAsJ,UAAAnF,GACAoF,QAAAtJ,IAGA8C,GAAA,YACAE,GAAA,mBAgBAhH,GAAA5F,EAAAyI,GAKAhK,QAAA,SAAAqK,GACA,GAAAxkB,GAAAyuB,GAAAjK,EAAAhP,KAGAxV,GAAAqlB,IAAA,IAAAb,EAAAqK,SACA5wB,KAAAsqB,SAAA,GAGAvoB,EAAAwpB,IAAA,IAAAhF,EAAAsK,QACA9uB,EAAAslB,IAIArnB,KAAAsqB,UAIAvoB,EAAAslB,KACArnB,KAAAsqB,SAAA,GAGAtqB,KAAAomB,SAAApmB,KAAAmmB,QAAApkB,GACAklB,UAAAV,GACAY,iBAAAZ,GACAuK,YAvbA,QAwbAzP,SAAAkF,OAKA,IAAAwK,KACAC,YAAA5J,GACA6J,YAAA1F,GACA2F,UAAA7J,GACA8J,cAAA7J,GACA8J,WAAA9J,IAIA+J,IACAC,EAzcA,QA0cAC,EAzcA,MA0cAC,EAzcA,QA0cAC,EAzcA,UA4cAlH,GAAA,cACAC,GAAA,qCAGA7lB,GAAA+sB,iBAAA/sB,EAAAgtB,eACApH,GAAA,gBACAC,GAAA,6CAiBAnH,EAAAsD,EAAAT,GAKAhK,QAAA,SAAAqK,GACA,GAAAkE,GAAAzqB,KAAAyqB,MACAmH,GAAA,EAEAC,EAAAtL,EAAAhP,KAAAua,cAAAlgB,QAAA,SACA7P,EAAAgvB,GAAAc,GACAf,EAAAO,GAAA9K,EAAAuK,cAAAvK,EAAAuK,YAEAiB,EAnfA,SAmfAjB,EAGAkB,EAAAlN,EAAA2F,EAAAlE,EAAA0L,UAAA,YAGAlwB,GAAAqlB,KAAA,IAAAb,EAAAqK,QAAAmB,GACAC,EAAA,IACAvH,EAAAxnB,KAAAsjB,GACAyL,EAAAvH,EAAA1pB,OAAA,GAESgB,GAAAslB,GAAAC,MACTsK,GAAA,GAIAI,EAAA,IAKAvH,EAAAuH,GAAAzL,EAEAvmB,KAAAomB,SAAApmB,KAAAmmB,QAAApkB,GACAklB,SAAAwD,EACAtD,iBAAAZ,GACAuK,cACAzP,SAAAkF,IAGAqL,GAEAnH,EAAApnB,OAAA2uB,EAAA,MAKA,IAAAE,KACAC,WAAA/K,GACAgL,UAAA7G,GACA8G,SAAAhL,GACAiL,YAAAhL,IAGAsD,GAAA,aACAC,GAAA,2CAeAxH,GAAAqH,EAAAxE,GACAhK,QAAA,SAAAqK,GACA,GAAAhP,GAAA2a,GAAA3L,EAAAhP,KAOA,IAJAA,IAAA6P,KACApnB,KAAA8qB,SAAA,GAGA9qB,KAAA8qB,QAAA,CAIA,GAAAG,GAAAF,EAAArsB,KAAAsB,KAAAumB,EAAAhP,EAGAA,IAAA8P,GAAAC,KAAA2D,EAAA,GAAAlqB,OAAAkqB,EAAA,GAAAlqB,QAAA,IACAf,KAAA8qB,SAAA,GAGA9qB,KAAAomB,SAAApmB,KAAAmmB,QAAA5O,GACA0P,SAAAgE,EAAA,GACA9D,gBAAA8D,EAAA,GACA6F,YAtkBA,QAukBAzP,SAAAkF,OAsBA,IAAAgM,KACAJ,WAAA/K,GACAgL,UAAA7G,GACA8G,SAAAhL,GACAiL,YAAAhL,IAGA6D,GAAA,2CAcA9H,GAAA7F,EAAA0I,GACAhK,QAAA,SAAAqK,GACA,GAAAhP,GAAAgb,GAAAhM,EAAAhP,MACA0T,EAAAI,EAAA3sB,KAAAsB,KAAAumB,EAAAhP,EACA0T,IAIAjrB,KAAAomB,SAAApmB,KAAAmmB,QAAA5O,GACA0P,SAAAgE,EAAA,GACA9D,gBAAA8D,EAAA,GACA6F,YA7nBA,QA8nBAzP,SAAAkF,MA4EA,IAAA8F,IAAA,KACAK,GAAA,EAaArJ,GAAAwD,EAAAX,GAOAhK,QAAA,SAAAiK,EAAAqM,EAAAC,GACA,GAAAV,GAhuBA,SAguBAU,EAAA3B,YACA4B,EA/tBA,SA+tBAD,EAAA3B,WAEA,MAAA4B,GAAAD,EAAAE,oBAAAF,EAAAE,mBAAAC,kBAAA,CAKA,GAAAb,EACAhG,EAAArtB,KAAAsB,KAAAwyB,EAAAC,OACS,IAAAC,GAAApG,EAAA5tB,KAAAsB,KAAAyyB,GACT,MAGAzyB,MAAAomB,SAAAD,EAAAqM,EAAAC,KAMApd,QAAA,WACArV,KAAAwO,MAAA6G,UACArV,KAAA4rB,MAAAvW,YA0CA,IAAAwd,IAAAvN,EAAA4K,GAAAzqB,MAAA,eACAqtB,GAAAD,KAAAnxB,EAIA0rB,GAAA,OACAD,GAAA,eACAL,GAAA,OACAE,GAAA,QACAE,GAAA,QACA6F,GA4IA,WACA,IAAAD,GACA,QAEA,IAAAE,MACAC,EAAAtuB,EAAAgB,KAAAhB,EAAAgB,IAAAC,QAOA,QANA,4DAAA0E,QAAA,SAAA1B,GAIAoqB,EAAApqB,IAAAqqB,GAAAtuB,EAAAgB,IAAAC,SAAA,eAAAgD,KAEAoqB,IA1IArG,GAAAjtB,WAKAse,IAAA,SAAA/d,GAzBA,WA2BAA,IACAA,EAAAD,KAAAkzB,WAGAJ,IAAA9yB,KAAAmmB,QAAAhf,QAAA1B,OAAAstB,GAAA9yB,KACAD,KAAAmmB,QAAAhf,QAAA1B,MAAAotB,IAAA5yB,GAEAD,KAAA6sB,QAAA5sB,EAAA6xB,cAAArb,QAMA0c,OAAA,WACAnzB,KAAAge,IAAAhe,KAAAmmB,QAAA5kB,QAAA+tB,cAOA4D,QAAA,WACA,GAAArG,KAMA,OALAhK,GAAA7iB,KAAAmmB,QAAA9J,YAAA,SAAA+R,GACAxK,EAAAwK,EAAA7sB,QAAAsb,QAAAuR,MACAvB,IAAA/qB,OAAAssB,EAAAgF,qBAGAxG,EAAAC,EAAAjgB,KAAA,OAOAymB,gBAAA,SAAAtM,GACA,GAAA1F,GAAA0F,EAAA1F,SACA5S,EAAAsY,EAAAwB,eAGA,IAAAvoB,KAAAmmB,QAAAnF,QAAAN,UAEA,WADAW,GAAAC,gBAIA,IAAAuL,GAAA7sB,KAAA6sB,QACAyG,EAAA3O,EAAAkI,EAAAC,MAAAiG,GAAAjG,IACAG,EAAAtI,EAAAkI,EAAAK,MAAA6F,GAAA7F,IACAH,EAAApI,EAAAkI,EAAAG,MAAA+F,GAAA/F,GAEA,IAAAsG,EAAA,CAGA,GAAAC,GAAA,IAAAxM,EAAAE,SAAAlmB,OACAyyB,EAAAzM,EAAAxU,SAAA,EACAkhB,EAAA1M,EAAAoB,UAAA,GAEA,IAAAoL,GAAAC,GAAAC,EACA,OAIA,MAAA1G,IAAAE,MAAA,GAKAqG,GACArG,GAAAxe,EAAAiK,IACAqU,GAAAte,EAAAkK,GACA3Y,KAAA0zB,WAAArS,OAHA,IAWAqS,WAAA,SAAArS,GACArhB,KAAAmmB,QAAAnF,QAAAN,WAAA,EACAW,EAAAC,kBAiFA,IAAAmM,IAAA,EACAO,GAAA,EACAD,GAAA,EACAD,GAAA,EACA6F,GAAA7F,GACAD,GAAA,EAyBAR,GAAA3tB,WAKA4tB,YAOAtP,IAAA,SAAAzc,GAKA,MAJAsZ,IAAA7a,KAAAuB,WAGAvB,KAAAmmB,SAAAnmB,KAAAmmB,QAAAmJ,YAAA6D,SACAnzB,MAQAyvB,cAAA,SAAAtB,GACA,GAAAvL,EAAAuL,EAAA,gBAAAnuB,MACA,MAAAA,KAGA,IAAA0tB,GAAA1tB,KAAA0tB,YAMA,OALAS,GAAAD,GAAAC,EAAAnuB,MACA0tB,EAAAS,EAAAZ,MACAG,EAAAS,EAAAZ,IAAAY,EACAA,EAAAsB,cAAAzvB,OAEAA,MAQA4zB,kBAAA,SAAAzF,GACA,MAAAvL,GAAAuL,EAAA,oBAAAnuB,MACAA,MAGAmuB,EAAAD,GAAAC,EAAAnuB,YACAA,MAAA0tB,aAAAS,EAAAZ,IACAvtB,OAQA0vB,eAAA,SAAAvB,GACA,GAAAvL,EAAAuL,EAAA,iBAAAnuB,MACA,MAAAA,KAGA,IAAA2tB,GAAA3tB,KAAA2tB,WAMA,OALAQ,GAAAD,GAAAC,EAAAnuB,OACA,IAAA8kB,EAAA6I,EAAAQ,KACAR,EAAA1qB,KAAAkrB,GACAA,EAAAuB,eAAA1vB,OAEAA,MAQA6zB,mBAAA,SAAA1F,GACA,GAAAvL,EAAAuL,EAAA,qBAAAnuB,MACA,MAAAA,KAGAmuB,GAAAD,GAAAC,EAAAnuB,KACA,IAAA0N,GAAAoX,EAAA9kB,KAAA2tB,YAAAQ,EAIA,OAHAzgB,IAAA,GACA1N,KAAA2tB,YAAAtqB,OAAAqK,EAAA,GAEA1N,MAOA8zB,mBAAA,WACA,MAAA9zB,MAAA2tB,YAAA5sB,OAAA,GAQAgzB,iBAAA,SAAA5F,GACA,QAAAnuB,KAAA0tB,aAAAS,EAAAZ,KAQA/F,KAAA,SAAAT,GAIA,QAAAS,GAAAoI,GACAjtB,EAAAwjB,QAAAqB,KAAAoI,EAAA7I,GAJA,GAAApkB,GAAA3C,KACAwtB,EAAAxtB,KAAAwtB,KAOAA,GAAAM,IACAtG,EAAA7kB,EAAApB,QAAAquB,MAAAhC,GAAAJ,IAGAhG,EAAA7kB,EAAApB,QAAAquB,OAEA7I,EAAAiN,iBACAxM,EAAAT,EAAAiN,iBAIAxG,GAAAM,IACAtG,EAAA7kB,EAAApB,QAAAquB,MAAAhC,GAAAJ,KAUAyG,QAAA,SAAAlN,GACA,GAAA/mB,KAAAk0B,UACA,MAAAl0B,MAAAwnB,KAAAT,EAGA/mB,MAAAwtB,MA7KA,IAoLA0G,QAAA,WAEA,IADA,GAAA11B,GAAA,EACAA,EAAAwB,KAAA2tB,YAAA5sB,QAAA,CACA,KAAAf,KAAA2tB,YAAAnvB,GAAAgvB,OAvLA,GAuLAC,KACA,QAEAjvB,KAEA,UAOAipB,UAAA,SAAAgL,GAGA,GAAA0B,GAAAtZ,MAAsC4X,EAGtC,KAAA7O,EAAA5jB,KAAAuB,QAAAsb,QAAA7c,KAAAm0B,IAGA,MAFAn0B,MAAAo0B,aACAp0B,KAAAwtB,MA3MA,GAgNAxtB,MAAAwtB,OAAAmG,GAAA9F,GAhNA,MAiNA7tB,KAAAwtB,MAAAC,IAGAztB,KAAAwtB,MAAAxtB,KAAAq0B,QAAAF,GAIAn0B,KAAAwtB,OAAAQ,GAAAD,GAAAD,GAAAD,KACA7tB,KAAAi0B,QAAAE,IAWAE,QAAA,SAAA5B,KAOAW,eAAA,aAOAgB,MAAA,cA8DA/Q,EAAAgL,GAAAhB,GAKAC,UAKArG,SAAA,GASAqN,SAAA,SAAAvN,GACA,GAAAwN,GAAAv0B,KAAAuB,QAAA0lB,QACA,YAAAsN,GAAAxN,EAAAE,SAAAlmB,SAAAwzB,GASAF,QAAA,SAAAtN,GACA,GAAAyG,GAAAxtB,KAAAwtB,MACAzrB,EAAAglB,EAAAhlB,UAEAyyB,EAAAhH,GAAAQ,GAAAD,IACA0G,EAAAz0B,KAAAs0B,SAAAvN,EAGA,OAAAyN,KAAAzyB,EAAAulB,KAAAmN,GACAjH,EAAAK,GACS2G,GAAAC,EACT1yB,EAAAslB,GACAmG,EAAAM,GACaN,EAAAQ,GAGbR,EAAAO,GAFAC,GA5VA,MAiXA3K,EAAAiL,GAAAD,IAKAf,UACAsC,MAAA,MACA1c,UAAA,GACA+T,SAAA,EACAxY,UAAAmK,IAGAwa,eAAA,WACA,GAAA3kB,GAAAzO,KAAAuB,QAAAkN,UACAoe,IAOA,OANApe,GAAAiK,IACAmU,EAAA5pB,KAAAiqB,IAEAze,EAAAkK,IACAkU,EAAA5pB,KAAA+pB,IAEAH,GAGA6H,cAAA,SAAA3N,GACA,GAAAxlB,GAAAvB,KAAAuB,QACAozB,GAAA,EACApiB,EAAAwU,EAAAxU,SACA9D,EAAAsY,EAAAtY,UACAgB,EAAAsX,EAAA7F,OACAxR,EAAAqX,EAAA3F,MAeA,OAZA3S,GAAAlN,EAAAkN,YACAlN,EAAAkN,UAAAiK,IACAjK,EAAA,IAAAgB,EAAA8I,GAAA9I,EAAA,EAAA4B,GAAAC,GACAqjB,EAAAllB,GAAAzP,KAAAuuB,GACAhc,EAAA3N,KAAAyJ,IAAA0Y,EAAA7F,UAEAzS,EAAA,IAAAiB,EAAA6I,GAAA7I,EAAA,EAAA8I,GAAAC,GACAkc,EAAAjlB,GAAA1P,KAAAwuB,GACAjc,EAAA3N,KAAAyJ,IAAA0Y,EAAA3F,UAGA2F,EAAAtY,YACAkmB,GAAApiB,EAAAhR,EAAA2R,WAAAzE,EAAAlN,EAAAkN,WAGA6lB,SAAA,SAAAvN,GACA,MAAAsH,IAAA3uB,UAAA40B,SAAA51B,KAAAsB,KAAA+mB,KACA/mB,KAAAwtB,MAAAQ,MAAAhuB,KAAAwtB,MAAAQ,KAAAhuB,KAAA00B,cAAA3N,KAGAS,KAAA,SAAAT,GAEA/mB,KAAAuuB,GAAAxH,EAAA7F,OACAlhB,KAAAwuB,GAAAzH,EAAA3F,MAEA,IAAA3S,GAAAwf,GAAAlH,EAAAtY,UAEAA,KACAsY,EAAAiN,gBAAAh0B,KAAAuB,QAAAquB,MAAAnhB,GAEAzO,KAAA2jB,OAAA6D,KAAA9oB,KAAAsB,KAAA+mB,MAcA1D,EAAAoL,GAAAJ,IAKAf,UACAsC,MAAA,QACA1c,UAAA,EACA+T,SAAA,GAGAmM,eAAA,WACA,OAAAtG,KAGAwH,SAAA,SAAAvN,GACA,MAAA/mB,MAAA2jB,OAAA2Q,SAAA51B,KAAAsB,KAAA+mB,KACAniB,KAAAyJ,IAAA0Y,EAAA1W,MAAA,GAAArQ,KAAAuB,QAAA2R,WAAAlT,KAAAwtB,MAAAQ,KAGAxG,KAAA,SAAAT,GACA,OAAAA,EAAA1W,MAAA,CACA,GAAAukB,GAAA7N,EAAA1W,MAAA,YACA0W,GAAAiN,gBAAAh0B,KAAAuB,QAAAquB,MAAAgF,EAEA50B,KAAA2jB,OAAA6D,KAAA9oB,KAAAsB,KAAA+mB,MAiBA1D,EAAAqL,GAAArB,GAKAC,UACAsC,MAAA,QACA3I,SAAA,EACA4N,KAAA,IACA3hB,UAAA,GAGAkgB,eAAA,WACA,OAAAhG,KAGAiH,QAAA,SAAAtN,GACA,GAAAxlB,GAAAvB,KAAAuB,QACAuzB,EAAA/N,EAAAE,SAAAlmB,SAAAQ,EAAA0lB,SACA8N,EAAAhO,EAAAxU,SAAAhR,EAAA2R,UACA8hB,EAAAjO,EAAAoB,UAAA5mB,EAAAszB,IAMA,IAJA70B,KAAA4uB,OAAA7H,GAIAgO,IAAAD,GAAA/N,EAAAhlB,WAAAslB,GAAAC,MAAA0N,EACAh1B,KAAAo0B,YACS,IAAArN,EAAAhlB,UAAAqlB,GACTpnB,KAAAo0B,QACAp0B,KAAA2uB,OAAArM,EAAA,WACAtiB,KAAAwtB,MAAAmG,GACA3zB,KAAAi0B,WACa1yB,EAAAszB,KAAA70B,UACJ,IAAA+mB,EAAAhlB,UAAAslB,GACT,MAAAsM,GAEA,OA7gBA,KAghBAS,MAAA,WACAa,aAAAj1B,KAAA2uB,SAGAnH,KAAA,SAAAT,GACA/mB,KAAAwtB,QAAAmG,KAIA5M,KAAAhlB,UAAAslB,GACArnB,KAAAmmB,QAAAqB,KAAAxnB,KAAAuB,QAAAquB,MAAA,KAAA7I,IAEA/mB,KAAA4uB,OAAA3G,UAAAC,KACAloB,KAAAmmB,QAAAqB,KAAAxnB,KAAAuB,QAAAquB,MAAA5vB,KAAA4uB,aAeAvL,EAAAwL,GAAAR,IAKAf,UACAsC,MAAA,SACA1c,UAAA,EACA+T,SAAA,GAGAmM,eAAA,WACA,OAAAtG,KAGAwH,SAAA,SAAAvN,GACA,MAAA/mB,MAAA2jB,OAAA2Q,SAAA51B,KAAAsB,KAAA+mB,KACAniB,KAAAyJ,IAAA0Y,EAAA+B,UAAA9oB,KAAAuB,QAAA2R,WAAAlT,KAAAwtB,MAAAQ,OAcA3K,EAAAyL,GAAAT,IAKAf,UACAsC,MAAA,QACA1c,UAAA,GACAkW,SAAA,GACA3a,UAAAiK,GAAAC,GACAsO,SAAA,GAGAmM,eAAA,WACA,MAAA9E,IAAA5uB,UAAA0zB,eAAA10B,KAAAsB,OAGAs0B,SAAA,SAAAvN,GACA,GACAqC,GADA3a,EAAAzO,KAAAuB,QAAAkN,SAWA,OARAA,IAAAiK,GAAAC,IACAyQ,EAAArC,EAAA0B,gBACSha,EAAAiK,GACT0Q,EAAArC,EAAA4B,iBACSla,EAAAkK,KACTyQ,EAAArC,EAAA6B,kBAGA5oB,KAAA2jB,OAAA2Q,SAAA51B,KAAAsB,KAAA+mB,IACAtY,EAAAsY,EAAAwB,iBACAxB,EAAAxU,SAAAvS,KAAAuB,QAAA2R,WACA6T,EAAAiC,aAAAhpB,KAAAuB,QAAA0lB,UACA5Y,GAAA+a,GAAAppB,KAAAuB,QAAA6nB,UAAArC,EAAAhlB,UAAAslB,IAGAG,KAAA,SAAAT,GACA,GAAAtY,GAAAwf,GAAAlH,EAAAwB,gBACA9Z,IACAzO,KAAAmmB,QAAAqB,KAAAxnB,KAAAuB,QAAAquB,MAAAnhB,EAAAsY,GAGA/mB,KAAAmmB,QAAAqB,KAAAxnB,KAAAuB,QAAAquB,MAAA7I,MA2BA1D,EAAA0L,GAAA1B,GAKAC,UACAsC,MAAA,MACA3I,SAAA,EACAiO,KAAA,EACAC,SAAA,IACAN,KAAA,IACA3hB,UAAA,EACAkiB,aAAA,IAGAhC,eAAA,WACA,OAAAjG,KAGAkH,QAAA,SAAAtN,GACA,GAAAxlB,GAAAvB,KAAAuB,QAEAuzB,EAAA/N,EAAAE,SAAAlmB,SAAAQ,EAAA0lB,SACA8N,EAAAhO,EAAAxU,SAAAhR,EAAA2R,UACAmiB,EAAAtO,EAAAoB,UAAA5mB,EAAAszB,IAIA,IAFA70B,KAAAo0B,QAEArN,EAAAhlB,UAAAqlB,IAAA,IAAApnB,KAAAyK,MACA,MAAAzK,MAAAs1B,aAKA,IAAAP,GAAAM,GAAAP,EAAA,CACA,GAAA/N,EAAAhlB,WAAAslB,GACA,MAAArnB,MAAAs1B,aAGA,IAAAC,IAAAv1B,KAAAgvB,OAAAjI,EAAAkB,UAAAjoB,KAAAgvB,MAAAztB,EAAA4zB,SACAK,GAAAx1B,KAAAivB,SAAA5G,EAAAroB,KAAAivB,QAAAlI,EAAAgB,QAAAxmB,EAAA6zB,YAEAp1B,MAAAgvB,MAAAjI,EAAAkB,UACAjoB,KAAAivB,QAAAlI,EAAAgB,OAEAyN,GAAAD,EAGAv1B,KAAAyK,OAAA,EAFAzK,KAAAyK,MAAA,EAKAzK,KAAA4uB,OAAA7H,CAKA,QADA/mB,KAAAyK,MAAAlJ,EAAA2zB,KAIA,MAAAl1B,MAAA8zB,sBAGA9zB,KAAA2uB,OAAArM,EAAA,WACAtiB,KAAAwtB,MAAAmG,GACA3zB,KAAAi0B,WACqB1yB,EAAA4zB,SAAAn1B,MACrBguB,IANA2F,GAUA,MAttBA,KAytBA2B,YAAA,WAIA,MAHAt1B,MAAA2uB,OAAArM,EAAA,WACAtiB,KAAAwtB,MA3tBA,IA4tBSxtB,KAAAuB,QAAA4zB,SAAAn1B,MA5tBT,IAguBAo0B,MAAA,WACAa,aAAAj1B,KAAA2uB,SAGAnH,KAAA,WACAxnB,KAAAwtB,OAAAmG,KACA3zB,KAAA4uB,OAAA6G,SAAAz1B,KAAAyK,MACAzK,KAAAmmB,QAAAqB,KAAAxnB,KAAAuB,QAAAquB,MAAA5vB,KAAA4uB,YAoBAM,GAAA/M,QAAA,QAMA+M,GAAA5B,UAOAoI,WAAA,EAQApG,YAl9BA,UAw9BAzS,QAAA,EASAwJ,YAAA,KAOApK,WAAA,KAOAkT,SAEAN,IAA4BhS,QAAA,KAC5B4R,IAA2B5R,QAAA,IAAc,YACzCiS,IAA2BrgB,UAAAiK,MAC3B4V,IAAyB7f,UAAAiK,KAAgC,WACzDqW,KACAA,IAAyBa,MAAA,YAAAsF,KAAA,IAA4B,SACrDxG,KAQAnS,UAMAC,WAAA,OAOAC,YAAA,OASAC,aAAA,OAOAiZ,eAAA,OAOAhZ,SAAA,OAQAiZ,kBAAA,iBAoCAxZ,IAAA1c,WAMAse,IAAA,SAAAzc,GAaA,MAZAsZ,IAAA7a,KAAAuB,WAGAA,EAAA+tB,aACAtvB,KAAAsvB,YAAA6D,SAEA5xB,EAAA8kB,cAEArmB,KAAA+mB,MAAA1R,UACArV,KAAA+mB,MAAAlmB,OAAAU,EAAA8kB,YACArmB,KAAA+mB,MAAAP,QAEAxmB,MASAkC,KAAA,SAAA2zB,GACA71B,KAAAghB,QAAA8U,QAAAD,EA5DA,EADA,GAsEApO,UAAA,SAAAgL,GACA,GAAAzR,GAAAhhB,KAAAghB,OACA,KAAAA,EAAA8U,QAAA,CAKA91B,KAAAsvB,YAAA+D,gBAAAZ,EAEA,IAAArE,GACA/R,EAAArc,KAAAqc,YAKA0Z,EAAA/U,EAAA+U,gBAIAA,QAAAvI,MAAAmG,MACAoC,EAAA/U,EAAA+U,cAAA,KAIA,KADA,GAAAv3B,GAAA,EACAA,EAAA6d,EAAAtb,QACAqtB,EAAA/R,EAAA7d,GA9FA,IAsGAwiB,EAAA8U,SACAC,GAAA3H,GAAA2H,IACA3H,EAAA2F,iBAAAgC,GAGA3H,EAAAgG,QAFAhG,EAAA3G,UAAAgL,IAOAsD,GAAA3H,EAAAZ,OAAAQ,GAAAD,GAAAD,MACAiI,EAAA/U,EAAA+U,cAAA3H,GAEA5vB,MASAa,IAAA,SAAA+uB,GACA,GAAAA,YAAAf,GACA,MAAAe,EAIA,QADA/R,GAAArc,KAAAqc,YACA7d,EAAA,EAAuBA,EAAA6d,EAAAtb,OAAwBvC,IAC/C,GAAA6d,EAAA7d,GAAA+C,QAAAquB,OAAAxB,EACA,MAAA/R,GAAA7d,EAGA,cASAkN,IAAA,SAAA0iB,GACA,GAAAxL,EAAAwL,EAAA,MAAApuB,MACA,MAAAA,KAIA,IAAAg2B,GAAAh2B,KAAAX,IAAA+uB,EAAA7sB,QAAAquB,MASA,OARAoG,IACAh2B,KAAAwb,OAAAwa,GAGAh2B,KAAAqc,YAAApZ,KAAAmrB,GACAA,EAAAjI,QAAAnmB,KAEAA,KAAAsvB,YAAA6D,SACA/E,GAQA5S,OAAA,SAAA4S,GACA,GAAAxL,EAAAwL,EAAA,SAAApuB,MACA,MAAAA,KAMA,IAHAouB,EAAApuB,KAAAX,IAAA+uB,GAGA,CACA,GAAA/R,GAAArc,KAAAqc,YACA3O,EAAAoX,EAAAzI,EAAA+R,IAEA,IAAA1gB,IACA2O,EAAAhZ,OAAAqK,EAAA,GACA1N,KAAAsvB,YAAA6D,UAIA,MAAAnzB,OASA4C,GAAA,SAAAqzB,EAAA/Z,GACA,GAAA+Z,IAAAv0B,GAGAwa,IAAAxa,EAAA,CAIA,GAAA0tB,GAAApvB,KAAAovB,QAKA,OAJAvM,GAAAuB,EAAA6R,GAAA,SAAArG,GACAR,EAAAQ,GAAAR,EAAAQ,OACAR,EAAAQ,GAAA3sB,KAAAiZ,KAEAlc,OASAgD,IAAA,SAAAizB,EAAA/Z,GACA,GAAA+Z,IAAAv0B,EAAA,CAIA,GAAA0tB,GAAApvB,KAAAovB,QAQA,OAPAvM,GAAAuB,EAAA6R,GAAA,SAAArG,GACA1T,EAGAkT,EAAAQ,IAAAR,EAAAQ,GAAAvsB,OAAAyhB,EAAAsK,EAAAQ,GAAA1T,GAAA,SAFAkT,GAAAQ,KAKA5vB,OAQAwnB,KAAA,SAAAoI,EAAA3f,GAEAjQ,KAAAuB,QAAAm0B,WACA/F,GAAAC,EAAA3f,EAIA,IAAAmf,GAAApvB,KAAAovB,SAAAQ,IAAA5vB,KAAAovB,SAAAQ,GAAAxmB,OACA,IAAAgmB,KAAAruB,OAAA,CAIAkP,EAAAsH,KAAAqY,EACA3f,EAAAqR,eAAA,WACArR,EAAAoR,SAAAC,iBAIA,KADA,GAAA9iB,GAAA,EACAA,EAAA4wB,EAAAruB,QACAquB,EAAA5wB,GAAAyR,GACAzR,MAQA6W,QAAA,WACArV,KAAAmH,SAAAooB,GAAAvvB,MAAA,GAEAA,KAAAovB,YACApvB,KAAAghB,WACAhhB,KAAA+mB,MAAA1R,UACArV,KAAAmH,QAAA,OAyCA0T,GAAAqU,IACA9H,eACAmE,cACAlE,aACAC,gBAEAmG,kBACAO,eACAD,iBACAD,eACA6F,oBACA9F,mBACAqI,aAlrCA,GAorCA3d,kBACAlH,kBACAC,mBACAkH,gBACAC,kBACAC,wBACAC,sBACAC,iBAEAwD,WACA8J,QACAyG,cAEAnP,aACAC,aACAkJ,oBACAE,kBACA6D,mBAEA2C,aACAgB,kBACA8H,IAAApH,GACAzS,IAAAgS,GACA8H,MAAAtH,GACAuH,MAAA5H,GACA6H,OAAAzH,GACA0H,MAAA7H,GAEA9rB,GAAAshB,EACAlhB,IAAAshB,EACAzB,OACAyN,SACA5nB,UACAmS,UACAwI,UACAV,SACA2C,kBAKA,KAAA3gB,IAAA,mBAAAhC,eACAusB,WAGA9M,EAAA,WACA,MAAA8M,KACKxwB,KAAAJ,EAAAH,EAAAG,EAAAC,MAAAmD,IAAAnD,EAAAD,QAAA8jB,IAOJzd,OAAAG","file":"js/bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Component\"] = factory();\n\telse\n\t\troot[\"eg\"] = root[\"eg\"] || {}, root[\"eg\"][\"Component\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\n/**\n * A class used to manage events and options in a component\n * @class\n * @group egjs\n * @name eg.Component\n * @ko 컴포넌트의 이벤트와 옵션을 관리할 수 있게 하는 클래스\n *\n * @support {\"ie\": \"7+\", \"ch\" : \"latest\", \"ff\" : \"latest\",  \"sf\" : \"latest\", \"edge\" : \"latest\", \"ios\" : \"7+\", \"an\" : \"2.1+ (except 3.x)\"}\n */\nvar Component = exports.Component = function () {\n\tfunction Component() {\n\t\t_classCallCheck(this, Component);\n\n\t\tthis._eventHandler = {};\n\t\tthis.options = {};\n\t}\n\n\t/**\n  * Sets options in a component or returns them.\n  * @ko 컴포넌트에 옵션을 설정하거나 옵션을 반환한다\n  * @method eg.Component#option\n  * @param {String} key The key of the option<ko>옵션의 키</ko>\n  * @param {Object} [value] The option value that corresponds to a given key <ko>키에 해당하는 옵션값</ko>\n  * @return {eg.Component|Object} An instance, an option value, or an option object of a component itself.<br>- If both key and value are used to set an option, it returns an instance of a component itself.<br>- If only a key is specified for the parameter, it returns the option value corresponding to a given key.<br>- If nothing is specified, it returns an option object. <ko>컴포넌트 자신의 인스턴스나 옵션값, 옵션 객체.<br>- 키와 값으로 옵션을 설정하면 컴포넌트 자신의 인스턴스를 반환한다.<br>- 파라미터에 키만 설정하면 키에 해당하는 옵션값을 반환한다.<br>- 파라미터에 아무것도 설정하지 않으면 옵션 객체를 반환한다.</ko>\n  * @example\n \t class Some extends eg.Component{\n \t\t}\n \t const some = new Some({\n \t\t\"foo\": 1,\n \t\t\"bar\": 2\n \t});\n \t some.option(\"foo\"); // return 1\n  some.option(\"foo\",3); // return some instance\n  some.option(); // return options object.\n  some.option({\n \t\t\"foo\" : 10,\n \t\t\"bar\" : 20,\n \t\t\"baz\" : 30\n \t}); // return some instance.\n  */\n\n\n\t_createClass(Component, [{\n\t\tkey: \"option\",\n\t\tvalue: function option() {\n\t\t\tif (arguments.length >= 2) {\n\t\t\t\tvar _key = arguments.length <= 0 ? undefined : arguments[0];\n\t\t\t\tvar value = arguments.length <= 1 ? undefined : arguments[1];\n\t\t\t\tthis.options[_key] = value;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tvar key = arguments.length <= 0 ? undefined : arguments[0];\n\t\t\tif (typeof key === \"string\") {\n\t\t\t\treturn this.options[key];\n\t\t\t}\n\n\t\t\tif (arguments.length === 0) {\n\t\t\t\treturn this.options;\n\t\t\t}\n\n\t\t\tvar options = key;\n\t\t\tthis.options = options;\n\n\t\t\treturn this;\n\t\t}\n\t\t/**\n   * Triggers a custom event.\n   * @ko 커스텀 이벤트를 발생시킨다\n   * @method eg.Component#trigger\n   * @param {String} eventName The name of the custom event to be triggered <ko>발생할 커스텀 이벤트의 이름</ko>\n   * @param {Object} customEvent Event data to be sent when triggering a custom event <ko>커스텀 이벤트가 발생할 때 전달할 데이터</ko>\n   * @return {Boolean} Indicates whether the event has occurred. If the stop() method is called by a custom event handler, it will return false and prevent the event from occurring. <ko>이벤트 발생 여부. 커스텀 이벤트 핸들러에서 stop() 메서드를 호출하면 'false'를 반환하고 이벤트 발생을 중단한다.</ko>\n   * @example\n   class Some extends eg.Component{\n  \t\tsome(){\n  \t\t\tthis.trigger(\"hi\");// fire hi event.\n  \t\t}\n  \t}\n   */\n\n\t}, {\n\t\tkey: \"trigger\",\n\t\tvalue: function trigger(eventName) {\n\t\t\tvar customEvent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\t\tvar handlerList = this._eventHandler[eventName] || [];\n\t\t\tvar hasHandlerList = handlerList.length > 0;\n\n\t\t\tif (!hasHandlerList) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// If detach method call in handler in first time then handeler list calls.\n\t\t\thandlerList = handlerList.concat();\n\n\t\t\tcustomEvent.eventType = eventName;\n\n\t\t\tvar isCanceled = false;\n\t\t\tvar arg = [customEvent];\n\t\t\tvar i = void 0;\n\n\t\t\tcustomEvent.stop = function () {\n\t\t\t\treturn isCanceled = true;\n\t\t\t};\n\n\t\t\tfor (var _len = arguments.length, restParam = Array(_len > 2 ? _len - 2 : 0), _key2 = 2; _key2 < _len; _key2++) {\n\t\t\t\trestParam[_key2 - 2] = arguments[_key2];\n\t\t\t}\n\n\t\t\tif (restParam.length >= 1) {\n\t\t\t\targ = arg.concat(restParam);\n\t\t\t}\n\n\t\t\tfor (i in handlerList) {\n\t\t\t\thandlerList[i].apply(this, arg);\n\t\t\t}\n\n\t\t\treturn !isCanceled;\n\t\t}\n\t\t/**\n   * Executed event just one time.\n   * @ko 이벤트가 한번만 실행된다.\n   * @method eg.Component#once\n   * @param {eventName} eventName The name of the event to be attached <ko>등록할 이벤트의 이름</ko>\n   * @param {Function} handlerToAttach The handler function of the event to be attached <ko>등록할 이벤트의 핸들러 함수</ko>\n   * @return {eg.Component} An instance of a component itself<ko>컴포넌트 자신의 인스턴스</ko>\n   * @example\n   class Some extends eg.Component{\n  \t\thi(){\n  \t\t\talert(\"hi\");\n  \t\t}\n  \t\tthing(){\n  \t\t\tthis.once(\"hi\", this.hi);\n  \t\t}\n  \t}\n  \t var some = new Some();\n   some.thing();\n   some.trigger(\"hi\");\n   // fire alert(\"hi\");\n   some.trigger(\"hi\");\n   // Nothing happens\n   */\n\n\t}, {\n\t\tkey: \"once\",\n\t\tvalue: function once(eventName, handlerToAttach) {\n\t\t\tif ((typeof eventName === \"undefined\" ? \"undefined\" : _typeof(eventName)) === \"object\" && typeof handlerToAttach === \"undefined\") {\n\t\t\t\tvar eventHash = eventName;\n\t\t\t\tvar i = void 0;\n\t\t\t\tfor (i in eventHash) {\n\t\t\t\t\tthis.once(i, eventHash[i]);\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t} else if (typeof eventName === \"string\" && typeof handlerToAttach === \"function\") {\n\t\t\t\tvar self = this;\n\t\t\t\tthis.on(eventName, function listener() {\n\t\t\t\t\tfor (var _len2 = arguments.length, arg = Array(_len2), _key3 = 0; _key3 < _len2; _key3++) {\n\t\t\t\t\t\targ[_key3] = arguments[_key3];\n\t\t\t\t\t}\n\n\t\t\t\t\thandlerToAttach.apply(self, arg);\n\t\t\t\t\tself.off(eventName, listener);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * Checks whether an event has been attached to a component.\n   * @ko 컴포넌트에 이벤트가 등록됐는지 확인한다.\n   * @method eg.Component#hasOn\n   * @param {String} eventName The name of the event to be attached <ko>등록 여부를 확인할 이벤트의 이름</ko>\n   * @return {Boolean} Indicates whether the event is attached. <ko>이벤트 등록 여부</ko>\n   * @example\n   class Some extends eg.Component{\n  \t\tsome(){\n  \t\t\tthis.hasOn(\"hi\");// check hi event.\n  \t\t}\n  \t}\n   */\n\n\t}, {\n\t\tkey: \"hasOn\",\n\t\tvalue: function hasOn(eventName) {\n\t\t\treturn !!this._eventHandler[eventName];\n\t\t}\n\n\t\t/**\n   * Attaches an event to a component.\n   * @ko 컴포넌트에 이벤트를 등록한다.\n   * @method eg.Component#on\n   * @param {eventName} eventName The name of the event to be attached <ko>등록할 이벤트의 이름</ko>\n   * @param {Function} handlerToAttach The handler function of the event to be attached <ko>등록할 이벤트의 핸들러 함수</ko>\n   * @return {eg.Component} An instance of a component itself<ko>컴포넌트 자신의 인스턴스</ko>\n   * @example\n   class Some extends eg.Component{\n   \t\thi(){\n  \t\t\tconsole.log(\"hi\");\n   \t\t}\n  \t\tsome(){\n  \t\t\tthis.on(\"hi\",this.hi); //attach event\n  \t\t}\n  \t}\n   */\n\n\t}, {\n\t\tkey: \"on\",\n\t\tvalue: function on(eventName, handlerToAttach) {\n\t\t\tif ((typeof eventName === \"undefined\" ? \"undefined\" : _typeof(eventName)) === \"object\" && typeof handlerToAttach === \"undefined\") {\n\t\t\t\tvar eventHash = eventName;\n\t\t\t\tvar name = void 0;\n\t\t\t\tfor (name in eventHash) {\n\t\t\t\t\tthis.on(name, eventHash[name]);\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t} else if (typeof eventName === \"string\" && typeof handlerToAttach === \"function\") {\n\t\t\t\tvar handlerList = this._eventHandler[eventName];\n\n\t\t\t\tif (typeof handlerList === \"undefined\") {\n\t\t\t\t\thandlerList = this._eventHandler[eventName] = [];\n\t\t\t\t}\n\n\t\t\t\thandlerList.push(handlerToAttach);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\t\t/**\n   * Detaches an event from the component.\n   * @ko 컴포넌트에 등록된 이벤트를 해제한다\n   * @method eg.Component#off\n   * @param {eventName} eventName The name of the event to be detached <ko>해제할 이벤트의 이름</ko>\n   * @param {Function} handlerToDetach The handler function of the event to be detached <ko>해제할 이벤트의 핸들러 함수</ko>\n   * @return {eg.Component} An instance of a component itself <ko>컴포넌트 자신의 인스턴스</ko>\n   * @example\n   class Some extends eg.Component{\n   \t\thi(){\n  \t\t\tconsole.log(\"hi\");\n   \t\t}\n  \t\tsome(){\n  \t\t\tthis.off(\"hi\",this.hi); //detach event\n  \t\t}\n  \t}\n   */\n\n\t}, {\n\t\tkey: \"off\",\n\t\tvalue: function off(eventName, handlerToDetach) {\n\t\t\t// All event detach.\n\t\t\tif (typeof eventName === \"undefined\") {\n\t\t\t\tthis._eventHandler = {};\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\t// All handler of specific event detach.\n\t\t\tif (typeof handlerToDetach === \"undefined\") {\n\t\t\t\tif (typeof eventName === \"string\") {\n\t\t\t\t\tthis._eventHandler[eventName] = undefined;\n\t\t\t\t\treturn this;\n\t\t\t\t} else {\n\t\t\t\t\tvar eventHash = eventName;\n\t\t\t\t\tvar name = void 0;\n\t\t\t\t\tfor (name in eventHash) {\n\t\t\t\t\t\tthis.off(name, eventHash[name]);\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// The handler of specific event detach.\n\t\t\tvar handlerList = this._eventHandler[eventName];\n\t\t\tif (handlerList) {\n\t\t\t\tvar k = void 0;\n\t\t\t\tvar handlerFunction = void 0;\n\t\t\t\tfor (k = 0, handlerFunction; handlerFunction = handlerList[k]; k++) {\n\t\t\t\t\tif (handlerFunction === handlerToDetach) {\n\t\t\t\t\t\thandlerList = handlerList.splice(k, 1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\t}]);\n\n\treturn Component;\n}();\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _component = __webpack_require__(0);\n\nmodule.exports = _component.Component;\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=component.js.map\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar MaskFlicking_1 = __webpack_require__(2);\r\nexports.MaskFlicking = MaskFlicking_1.MaskFlicking;\r\nexports.default = { MaskFlicking: MaskFlicking_1.MaskFlicking };\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Flicking = __webpack_require__(3);\r\nvar MaskFlicking = (function () {\r\n    function MaskFlicking(rootElement, options) {\r\n        var _this = this;\r\n        var flicking = new Flicking(rootElement, options);\r\n        this.flicking = flicking;\r\n        this.activePanel();\r\n        flicking.on({\r\n            \"flickEnd\": function (e) {\r\n                _this.activePanel();\r\n            }\r\n        });\r\n    }\r\n    MaskFlicking.prototype.activePanel = function () {\r\n        var flicking = this.flicking;\r\n        var nowPanel = flicking.getElement(flicking.getIndex());\r\n        var prePanel = this.nowPanel;\r\n        if (prePanel !== nowPanel) {\r\n            if (prePanel) {\r\n                $(prePanel).removeClass(\"on\");\r\n            }\r\n            $(nowPanel).addClass(\"on\");\r\n            this.nowPanel = nowPanel;\r\n        }\r\n    };\r\n    return MaskFlicking;\r\n}());\r\nexports.MaskFlicking = MaskFlicking;\r\nexports.default = MaskFlicking;\r\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*!\n * Copyright (c) 2017 NAVER Corp.\r\n * @egjs/flicking projects are licensed under the MIT <https://naver.github.io/egjs/license.txt> license\r\n * \r\n * @egjs/flicking JavaScript library\r\n * https://github.com/naver/egjs-flicking\r\n * \r\n * @version 2.0.0-rc.2\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory(__webpack_require__(0), __webpack_require__(4));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@egjs/component\", \"@egjs/movablecoord\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Flicking\"] = factory(require(\"@egjs/component\"), require(\"@egjs/movablecoord\"));\n\telse\n\t\troot[\"eg\"] = root[\"eg\"] || {}, root[\"eg\"][\"Flicking\"] = factory(root[\"eg\"][\"Component\"], root[\"eg\"][\"MovableCoord\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_8__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 5);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n/* eslint-disable no-new-func, no-nested-ternary */\nvar win = typeof window !== \"undefined\" && window.Math === Math ? window : typeof self !== \"undefined\" && self.Math === Math ? self : Function(\"return this\")();\n/* eslint-enable no-new-func, no-nested-ternary */\n\nvar document = win.document;\n\nexports.window = win;\nexports.document = document;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.DATA_HEIGHT = exports.IS_ANDROID2 = exports.SUPPORT_WILLCHANGE = exports.SUPPORT_TRANSFORM = exports.EVENTS = undefined;\n\nvar _browser = __webpack_require__(0);\n\n// define custom events name\nvar EVENTS = {\n\tbeforeFlickStart: \"beforeFlickStart\",\n\tbeforeRestore: \"beforeRestore\",\n\tflick: \"flick\",\n\tflickEnd: \"flickEnd\",\n\trestore: \"restore\"\n};\n\n// check for css transform support\n/**\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nvar SUPPORT_TRANSFORM = function () {\n\tvar style = _browser.document.documentElement.style;\n\n\treturn \"transform\" in style || \"webkitTransform\" in style;\n}();\n\n// check for will-change support\nvar SUPPORT_WILLCHANGE = _browser.window.CSS && _browser.window.CSS.supports && _browser.window.CSS.supports(\"will-change\", \"transform\");\n\n// check for Android 2.x\nvar IS_ANDROID2 = /Android 2\\./.test(navigator.userAgent);\n\n// data-height attribute's name for adaptiveHeight option\nvar DATA_HEIGHT = \"data-height\";\n\nexports.EVENTS = EVENTS;\nexports.SUPPORT_TRANSFORM = SUPPORT_TRANSFORM;\nexports.SUPPORT_WILLCHANGE = SUPPORT_WILLCHANGE;\nexports.IS_ANDROID2 = IS_ANDROID2;\nexports.DATA_HEIGHT = DATA_HEIGHT;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _component = __webpack_require__(7);\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _movablecoord = __webpack_require__(8);\n\nvar _movablecoord2 = _interopRequireDefault(_movablecoord);\n\nvar _utils = __webpack_require__(6);\n\nvar _consts = __webpack_require__(1);\n\nvar consts = _interopRequireWildcard(_consts);\n\nvar _config = __webpack_require__(3);\n\nvar _browser = __webpack_require__(0);\n\nvar _eventHandler = __webpack_require__(4);\n\nvar _eventHandler2 = _interopRequireDefault(_eventHandler);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright (c) 2015 NAVER Corp.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * egjs projects are licensed under the MIT license\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * A module used to implement flicking interactions. With this module, you can make flicking gestures, which are ways to navigate left and right to move between panels arranged side by side.\n * @ko 플리킹 UI를 구현하는 모듈. 나란히 배치한 패널을 쓸어 넘겨 다음 패널이나 이전 패널로 이동하는 플리킹 UI를 만들 수 있다.\n * @alias eg.Flicking\n * @extends eg.Component\n *\n * @param {HTMLElement|String|jQuery} element A base element for the eg.Flicking module <ko>eg.Flicking 모듈을 사용할 기준 엘리먼트</ko>\n * @param {Object} options The option object of the eg.Flicking module<ko>eg.Flicking 모듈의 옵션 객체</ko>\n * @param {Boolean} [options.hwAccelerable=eg.isHWAccelerable()] Force hardware compositing <ko>하드웨어 가속 사용 여부</ko>\n * @param {String} [options.prefix=eg-flick] A prefix for class names of the panel elements <ko>패널 엘리먼트의 클래스 이름에 설정할 접두사</ko>\n * @param {Number} [options.deceleration=0.0006] Deceleration of the animation where acceleration is manually enabled by user. A higher value indicates shorter running time <ko>사용자의 동작으로 가속도가 적용된 애니메이션의 감속도. 값이 높을수록 애니메이션 실행 시간이 짧아진다</ko>\n * @param {Boolean} [options.horizontal=true] Direction of the panel movement (true: horizontal, false: vertical) <ko>패널 이동 방향 (true 가로방향, false 세로방향)</ko>\n * @param {Boolean} [options.circular=false] Indicates whether a circular panel is available <ko>패널 순환 여부</ko>\n * @param {Number|Array} [options.previewPadding=[0,0]] The preview size for the previous or next panel. If direction is set to \"horizontal\", the preview section will be displayed on the left and right of the panel. If direction is set to \"vertical\", it will be displayed on the top and bottom of the panel <ko>이전 패널과 다음 패널을 미리 보는 영역의 크기. 패널 이동 방향이 가로 방향이면 패널 왼쪽과 오른쪽에 미리 보는 영역이 나타난다. 패널 이동 방향이 세로 방향이면 패널 위쪽과 아래쪽에 미리 보는 영역이 나타난다</ko>\n * @param {Number|Array} [options.bounce=[10,10]] −\tThe size of bouncing area. If a panel is set to \"non-circulable\", the start and end panels can exceed the base element area and move further as much as the bouncing area. If a panel is dragged to the bouncing area and then dropped, the panel where bouncing effects are applied is retuned back into the base element area. <ko>바운스 영역의 크기. 패널이 순환하지 않도록 설정됐다면 시작 패널과 마지막 패널은 기준 엘리먼트 영역을 넘어 바운스 영역의 크기만큼 더 이동할 수 있다. 패널을 바운스 영역까지 끌었다가 놓으면, 바운스 효과가 적용된 패널이 다시 기준 엘리먼트 영역 안으로 들어온다</ko>\n * @param {Number} [options.threshold=40] Distance threshold. If the drag exceeds the threshold value, it will be changed to the next panel <ko>다음 패널로 바뀌는 기준 이동 거리. 패널을 기준 이동 거리 이상 끌었다 놓으면 패널이 다음 패널로 바뀐다</ko>\n * @param {Number} [options.duration=100] Duration of the panel movement (unit: ms) <ko>패널 이동 애니메이션 진행 시간(단위: ms)</ko>\n * @param {Function} [options.panelEffect=easeOutCubic] The easing function to apply to a panel moving animation <ko>패널 이동 애니메이션에 적용할 easing 함수</ko>\n * @param {Number} [options.defaultIndex=0] The index number of a panel to be selected upon module initialization <ko>모듈이 초기화될 때 선택할 패널의 인덱스 번호</ko>\n * @param {Array} [options.inputType] Types of input devices.<br>- touch: A touch screen can be used to move a panel.<br>- mouse: A mouse can be used to move a panel. <ko>입력 장치 종류.<br>- touch: 터치 입력 장치로 패널을 이동할 수 있다.<br>- mouse: 마우스로 패널을 이동할 수 있다.</ko>\n * @param {Number} [options.thresholdAngle=45] The threshold value that determines whether user action is horizontal or vertical (0~90) <ko>사용자의 동작이 가로 방향인지 세로 방향인지 판단하는 기준 각도(0~90)</ko>\n * @param {Boolean} [options.adaptiveHeight=false] Set container's height be adaptive according panel's height.<br>(Note: on Android 4.1.x stock browser, has rendering bug which not correctly render height value on panel with single node. To avoid just append another empty node at the end.)<ko>컨테이너 영역이 패널의 높이값에 따라 변경될지 여부<br>(참고: Android 4.1.x 스톡 브라우저에서 단일 노드로 구성된 패널의 높이값 변경이 제대로 렌더링 되지 않는 버그가 있음. 비어있는 노드를 추가하면 해결이 가능하다.)</ko>\n *\n * @codepen {\"id\":\"rVOpPK\", \"ko\":\"플리킹 UI 기본 예제\", \"en\":\"Flicking UI default example\", \"collectionId\":\"ArxyLK\", \"height\" : 403}\n * @support {\"ie\": \"10+\", \"ch\" : \"latest\", \"ff\" : \"latest\",  \"sf\" : \"latest\" , \"edge\" : \"latest\", \"ios\" : \"7+\", \"an\" : \"2.3+ (except 3.x)\"}\n *\n * @see Easing Functions Cheat Sheet {@link http://easings.net/}\n * @see If you want to try a different easing function, use the jQuery easing plugin ({@link http://gsgd.co.uk/sandbox/jquery/easing}) or the jQuery UI easing library ({@link https://jqueryui.com/easing}). <ko>다른 easing 함수를 사용하려면 jQuery easing 플러그인({@link http://gsgd.co.uk/sandbox/jquery/easing})이나, jQuery UI easing 라이브러리({@link https://jqueryui.com/easing})를 사용한다</ko>\n * @example\n <!-- HTML -->\n <div id=\"mflick\">\n <div>\n <p>Layer 0</p>\n </div>\n <div>\n <p>Layer 1</p>\n </div>\n <div>\n <p>Layer 2</p>\n </div>\n </div>\n <script>\n var some = new eg.Flicking(\"#mflick\", {\n\t\t\t\tcircular : true,\n\t\t\t\tthreshold : 50\n\t\t\t}).on({\n\t\t\t\tbeforeRestore : function(e) { ... },\n\t\t\t\tflickStart : function(e) { ... }\n\t\t\t});\n </script>\n */\nvar Flicking = function (_Mixin$with) {\n\t_inherits(Flicking, _Mixin$with);\n\n\t/**\n  * Constructor\n  * @param {HTMLElement|String} element - base element or selector\n  * @param {Object} options\n  */\n\tfunction Flicking(element, options, _prefix) {\n\t\t_classCallCheck(this, Flicking);\n\n\t\tvar _this = _possibleConstructorReturn(this, _Mixin$with.call(this));\n\n\t\t_this.$wrapper = _utils.utils.$(element);\n\t\tvar $children = _this.$wrapper && _this.$wrapper.children;\n\n\t\tif (!_this.$wrapper || !$children || !$children.length) {\n\t\t\t// eslint-disable validateLineBreaks, maximumLineLength\n\t\t\tthrow new Error(\"Given base element doesn't exist or it hasn't proper DOM structure to be initialized.\");\n\n\t\t\t// eslint-enable validateLineBreaks, maximumLineLength\n\t\t}\n\n\t\t_this._setOptions(options);\n\t\t_this._setConfig($children, _prefix);\n\n\t\t!_utils.utils.hasClickBug() && (_this._setPointerEvents = function () {});\n\n\t\t_this._build();\n\t\t_this._bindEvents(true);\n\n\t\t_this._applyPanelsCss();\n\t\t_this._arrangePanels();\n\n\t\t_this.options.hwAccelerable && consts.SUPPORT_WILLCHANGE && _this._setHint();\n\t\t_this.options.adaptiveHeight && _this._setAdaptiveHeight();\n\n\t\t_this._adjustContainerCss(\"end\");\n\t\treturn _this;\n\t}\n\n\t/**\n  * Set options values\n  * @param {Object} options\n  */\n\n\n\tFlicking.prototype._setOptions = function _setOptions(options) {\n\t\t// default value of previewPadding and bounce\n\t\tvar arrVal = {\n\t\t\tpreviewPadding: [0, 0],\n\t\t\tbounce: [10, 10]\n\t\t};\n\n\t\tthis.options = _utils.utils.extend(_utils.utils.extend({}, _config.OPTIONS), arrVal, options);\n\n\t\tfor (var key in arrVal) {\n\t\t\tvar val = this.options[key];\n\n\t\t\tif (typeof val === \"number\") {\n\t\t\t\tval = [val, val];\n\t\t\t} else if (!_utils.utils.isArray(val)) {\n\t\t\t\tval = arrVal[key];\n\t\t\t}\n\n\t\t\tthis.options[key] = val;\n\t\t}\n\t};\n\n\t/**\n  * Set config values\n  * @param {HTMLCollection} $children wrappers' children elements\n  * @param {String} _prefix event prefix\n  * @return {HTMLElement}\n  */\n\n\n\tFlicking.prototype._setConfig = function _setConfig($children, _prefix) {\n\t\tvar options = this.options;\n\t\tvar padding = options.previewPadding;\n\t\tvar $nodes = $children;\n\n\t\tif ($nodes[0].classList.contains(options.prefix + \"-container\")) {\n\t\t\t$nodes = $nodes[0];\n\t\t\tthis.$container = $nodes;\n\t\t\t$nodes = $nodes.children;\n\t\t}\n\n\t\t// convert to array\n\t\t$nodes = [].slice.call($nodes);\n\n\t\t// config value\n\t\tvar conf = this._conf = _utils.utils.extend(_utils.utils.extend({}, _config.CONFIG), {\n\t\t\tpanel: {\n\t\t\t\t$list: $nodes,\n\t\t\t\tminCount: padding[0] + padding[1] > 0 ? 5 : 3 // minimum panel count\n\t\t\t},\n\t\t\t// remember original class and inline style in case of restoration on destroy()\n\t\t\torigPanelStyle: {\n\t\t\t\twrapper: {\n\t\t\t\t\tclassName: this.$wrapper.getAttribute(\"class\") || null,\n\t\t\t\t\tstyle: this.$wrapper.getAttribute(\"style\") || null\n\t\t\t\t},\n\t\t\t\tcontainer: {\n\t\t\t\t\tclassName: this.$container && this.$container.getAttribute(\"class\") || null,\n\t\t\t\t\tstyle: this.$container && this.$container.getAttribute(\"style\") || null\n\t\t\t\t},\n\t\t\t\tlist: $nodes.map(function (v) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tclassName: v.getAttribute(\"class\") || null,\n\t\t\t\t\t\tstyle: v.getAttribute(\"style\") || null\n\t\t\t\t\t};\n\t\t\t\t})\n\t\t\t},\n\t\t\tuseLayerHack: options.hwAccelerable && !consts.SUPPORT_WILLCHANGE,\n\t\t\teventPrefix: _prefix || \"\"\n\t\t});\n\n\t\t[[\"LEFT\", \"RIGHT\"], [\"UP\", \"DOWN\"]][+!options.horizontal].forEach(function (v) {\n\t\t\treturn conf.dirData.push(_movablecoord2.default[\"DIRECTION_\" + v]);\n\t\t});\n\t};\n\n\t/**\n  * Build and set panel nodes to make flicking structure\n  */\n\n\n\tFlicking.prototype._build = function _build() {\n\t\tvar panel = this._conf.panel;\n\t\tvar options = this.options;\n\t\tvar $children = panel.$list;\n\t\tvar padding = options.previewPadding.concat();\n\t\tvar prefix = options.prefix;\n\t\tvar horizontal = options.horizontal;\n\t\tvar panelCount = panel.count = panel.origCount = $children.length;\n\t\tvar bounce = options.bounce;\n\n\t\tthis._setPadding(padding, true);\n\t\tvar sizeValue = this._getDataByDirection([panel.size, \"100%\"]);\n\n\t\t// container element style\n\t\tvar cssValue = {\n\t\t\tposition: \"relative\",\n\t\t\tzIndex: 2000,\n\t\t\twidth: \"100%\",\n\t\t\theight: \"100%\"\n\t\t};\n\n\t\thorizontal && (cssValue.top = \"0px\");\n\n\t\tif (this.$container) {\n\t\t\t_utils.utils.css(this.$container, cssValue);\n\t\t} else {\n\t\t\tvar $parent = $children[0].parentNode;\n\t\t\tvar $container = _browser.document.createElement(\"div\");\n\n\t\t\t$container.className = prefix + \"-container\";\n\t\t\t_utils.utils.css($container, cssValue);\n\n\t\t\t$children.forEach(function (v) {\n\t\t\t\treturn $container.appendChild(v);\n\t\t\t});\n\n\t\t\t$parent.appendChild($container);\n\t\t\tthis.$container = $container;\n\t\t}\n\n\t\t// panels' css values\n\t\t$children.forEach(function (v) {\n\t\t\tv.classList.add(prefix + \"-panel\");\n\n\t\t\t_utils.utils.css(v, {\n\t\t\t\tposition: \"absolute\",\n\t\t\t\twidth: _utils.utils.getUnitValue(sizeValue[0]),\n\t\t\t\theight: _utils.utils.getUnitValue(sizeValue[1]),\n\t\t\t\tboxSizing: \"border-box\",\n\t\t\t\ttop: 0,\n\t\t\t\tleft: 0\n\t\t\t});\n\t\t});\n\n\t\tif (this._addClonePanels()) {\n\t\t\tpanelCount = panel.count = (panel.$list = [].slice.call(this.$container.children)).length;\n\t\t}\n\n\t\t// create MovableCoord instance\n\t\tthis._mcInst = new _movablecoord2.default({\n\t\t\tmin: [0, 0],\n\t\t\tmax: this._getDataByDirection([panel.size * (panelCount - 1), 0]),\n\t\t\tmargin: 0,\n\t\t\tcircular: false,\n\t\t\teasing: options.panelEffect,\n\t\t\tdeceleration: options.deceleration,\n\t\t\tbounce: this._getDataByDirection([0, bounce[1], 0, bounce[0]])\n\t\t});\n\n\t\tthis._setDefaultPanel(options.defaultIndex);\n\t};\n\n\t/**\n  * Set preview padding value\n  * @param {Array} padding\n  * @param {Boolean} build\n  */\n\n\n\tFlicking.prototype._setPadding = function _setPadding(padding, build) {\n\t\tvar horizontal = this.options.horizontal;\n\t\tvar panel = this._conf.panel;\n\t\tvar paddingSum = padding[0] + padding[1];\n\t\tvar cssValue = {};\n\n\t\tif (paddingSum || !build) {\n\t\t\tcssValue.padding = horizontal ? \"0 \" + padding.reverse().join(\"px 0 \") + \"px\" : padding.join(\"px 0 \") + \"px\";\n\t\t}\n\n\t\tif (build) {\n\t\t\tcssValue.overflow = \"hidden\";\n\t\t\tcssValue.boxSizing = \"border-box\";\n\t\t}\n\n\t\tObject.keys(cssValue).length && _utils.utils.css(this.$wrapper, cssValue);\n\n\t\tvar wrapperStyle = getComputedStyle(this.$wrapper);\n\t\tvar paddingType = horizontal ? [\"Left\", \"Right\"] : [\"Top\", \"Bottom\"];\n\n\t\tpanel.size = _utils.utils.getNumValue(wrapperStyle[horizontal ? \"width\" : \"height\"]) - (_utils.utils.getNumValue(wrapperStyle[\"padding\" + paddingType[0]]) + _utils.utils.getNumValue(wrapperStyle[\"padding\" + paddingType[1]]));\n\t};\n\n\t/**\n  * To fulfill minimum panel count cloning original node when circular or previewPadding option are set\n  * @return {Boolean} true : added clone node, false : not added\n  */\n\n\n\tFlicking.prototype._addClonePanels = function _addClonePanels() {\n\t\tvar _this2 = this;\n\n\t\tvar panel = this._conf.panel;\n\t\tvar panelCount = panel.origCount;\n\t\tvar cloneCount = panel.minCount - panelCount;\n\t\tvar list = panel.$list;\n\t\tvar cloneNodes = void 0;\n\n\t\t// if panels are given less than required when circular option is set, then clone node to apply circular mode\n\t\tif (this.options.circular && panelCount < panel.minCount) {\n\t\t\tcloneNodes = list.map(function (v) {\n\t\t\t\treturn v.cloneNode(true);\n\t\t\t});\n\n\t\t\twhile (cloneNodes.length < cloneCount) {\n\t\t\t\tcloneNodes = cloneNodes.concat(list.map(function (v) {\n\t\t\t\t\treturn v.cloneNode(true);\n\t\t\t\t}));\n\t\t\t}\n\n\t\t\tcloneNodes.forEach(function (v) {\n\t\t\t\treturn _this2.$container.appendChild(v);\n\t\t\t});\n\n\t\t\treturn !!cloneNodes.length;\n\t\t}\n\n\t\treturn false;\n\t};\n\n\t/**\n  * Move panel's position within array\n  * @param {Number} count element counts to move\n  * @param {Boolean} append where the list to be appended(moved) (true: to the end, false: to the beginning)\n  */\n\n\n\tFlicking.prototype._movePanelPosition = function _movePanelPosition(count, append) {\n\t\tvar panel = this._conf.panel;\n\t\tvar list = panel.$list;\n\t\tvar listToMove = list.splice(append ? 0 : panel.count - count, count);\n\n\t\tpanel.$list = append ? list.concat(listToMove) : listToMove.concat(list);\n\t};\n\n\t/**\n  * Set default panel to show\n  * @param {Number} index\n  */\n\n\n\tFlicking.prototype._setDefaultPanel = function _setDefaultPanel(index) {\n\t\tvar panel = this._conf.panel;\n\t\tvar lastIndex = panel.count - 1;\n\t\tvar coords = void 0;\n\t\tvar baseIndex = void 0;\n\n\t\tif (this.options.circular) {\n\t\t\t// if default index is given, then move correspond panel to the first position\n\t\t\tif (index > 0 && index <= lastIndex) {\n\t\t\t\tthis._movePanelPosition(index, true);\n\t\t\t}\n\n\t\t\t// set first panel's position according physical node length\n\t\t\tbaseIndex = this._getBasePositionIndex();\n\t\t\tthis._movePanelPosition(baseIndex, false);\n\n\t\t\tthis._setPanelNo({\n\t\t\t\tno: index,\n\t\t\t\tcurrNo: index\n\t\t\t});\n\t\t\t// if defaultIndex option is given, then move to that index panel\n\t\t} else if (index > 0 && index <= lastIndex) {\n\t\t\tthis._setPanelNo({\n\t\t\t\tindex: index,\n\t\t\t\tno: index,\n\t\t\t\tcurrIndex: index,\n\t\t\t\tcurrNo: index\n\t\t\t});\n\n\t\t\tcoords = [-(panel.size * index), 0];\n\n\t\t\tthis._setTranslate(coords);\n\t\t\tthis._setMovableCoord(\"setTo\", [Math.abs(coords[0]), Math.abs(coords[1])], true, 0);\n\t\t}\n\t};\n\n\t/**\n  * Arrange panels' position\n  * @param {Boolean} sort Need to sort panel's position\n  * @param {Number} indexToMove Number to move from current position (negative: left, positive: right)\n  */\n\n\n\tFlicking.prototype._arrangePanels = function _arrangePanels(sort, indexToMove) {\n\t\tvar conf = this._conf;\n\t\tvar panel = conf.panel;\n\t\tvar touch = conf.touch;\n\t\tvar dirData = conf.dirData;\n\t\tvar baseIndex = void 0;\n\n\t\tif (this.options.circular) {\n\t\t\t// when arranging panels, set flag to not trigger flick custom event\n\t\t\tconf.customEvent.flick = false;\n\n\t\t\t// move elements according direction\n\t\t\tif (sort) {\n\t\t\t\tindexToMove && (touch.direction = dirData[+!(indexToMove > 0)]);\n\t\t\t\tthis._arrangePanelPosition(touch.direction, indexToMove);\n\t\t\t}\n\n\t\t\t// set index for base element's position\n\t\t\tbaseIndex = this._getBasePositionIndex();\n\n\t\t\tthis._setPanelNo({\n\t\t\t\tindex: baseIndex,\n\t\t\t\tcurrIndex: baseIndex\n\t\t\t});\n\n\t\t\t// arrange MovableCoord's coord position\n\t\t\tconf.customEvent.flick = !!this._setMovableCoord(\"setTo\", [panel.size * panel.index, 0], true, 0);\n\t\t}\n\n\t\tthis._applyPanelsPos();\n\t};\n\n\t/**\n  * Set each panel's position in DOM\n  */\n\n\n\tFlicking.prototype._applyPanelsPos = function _applyPanelsPos() {\n\t\tthis._conf.panel.$list.forEach(this._applyPanelsCss.bind(this));\n\t};\n\n\t/**\n  * Set CSS style values to move elements\n  *\n  * Initialize setting up checking if browser support transform css property.\n  * If browser doesn't support transform, then use left/top properties instead.\n  * @param {HTMLElement} $element\n  * @param {Array} coords\n  */\n\n\n\tFlicking.prototype._setMoveStyle = function _setMoveStyle($el, coordsValue) {\n\t\tthis._setMoveStyle = consts.SUPPORT_TRANSFORM ? function moveStyle($element, coords) {\n\t\t\t_utils.utils.css($element, {\n\t\t\t\ttransform: _utils.utils.translate(coords[0], coords[1], this._conf.useLayerHack)\n\t\t\t});\n\t\t} : function ($element, coords) {\n\t\t\t_utils.utils.css($element, { left: coords[0], top: coords[1] });\n\t\t};\n\n\t\tthis._setMoveStyle($el, coordsValue);\n\t};\n\n\t/**\n  * Callback function for applying CSS values to each panels\n  *\n  * Need to be initialized before use, to set up for Android 2.x browsers or others.\n  */\n\n\n\tFlicking.prototype._applyPanelsCss = function _applyPanelsCss() {\n\t\tvar conf = this._conf;\n\t\tvar dummyAnchorClassName = \"__dummy_anchor\";\n\n\t\tif (consts.IS_ANDROID2) {\n\t\t\tconf.$dummyAnchor = _utils.utils.$(\".\" + dummyAnchorClassName);\n\n\t\t\t!conf.$dummyAnchor && this.$wrapper.appendChild(conf.$dummyAnchor = _utils.utils.$(\"<a href=\\\"javascript:void(0)\\\" class=\\\"\" + dummyAnchorClassName + \"\\\" style=\\\"position:absolute;height:0px;width:0px\\\">\"));\n\n\t\t\tthis._applyPanelsCss = function applyCss(v, i) {\n\t\t\t\tvar coords = this._getDataByDirection([this._conf.panel.size * i + \"px\", 0]);\n\n\t\t\t\t_utils.utils.css(v, {\n\t\t\t\t\tleft: coords[0],\n\t\t\t\t\ttop: coords[1]\n\t\t\t\t});\n\t\t\t};\n\t\t} else {\n\t\t\tthis._applyPanelsCss = function applyCss(v, i) {\n\t\t\t\tvar coords = this._getDataByDirection([consts.SUPPORT_TRANSFORM ? 100 * i + \"%\" : this._conf.panel.size * i + \"px\", 0]);\n\n\t\t\t\tthis._setMoveStyle(v, coords);\n\t\t\t};\n\t\t}\n\t};\n\n\t/**\n  * Adjust container's css value to handle Android 2.x link highlighting bug\n  *\n  * @param {String} phase\n  *    start - set left/top value to 0\n  *    end - set translate value to 0\n  * @param {Array} coordValue coordinate value\n  */\n\n\n\tFlicking.prototype._adjustContainerCss = function _adjustContainerCss(phase, coordValue) {\n\t\tvar conf = this._conf;\n\t\tvar panel = conf.panel;\n\t\tvar options = this.options;\n\t\tvar horizontal = options.horizontal;\n\t\tvar paddingTop = options.previewPadding[0];\n\t\tvar container = this.$container;\n\t\tvar coords = coordValue;\n\t\tvar value = void 0;\n\n\t\tif (consts.IS_ANDROID2) {\n\t\t\tif (!coords) {\n\t\t\t\tcoords = [-panel.size * panel.index, 0];\n\t\t\t}\n\n\t\t\tif (phase === \"start\") {\n\t\t\t\tcontainer = container.style;\n\t\t\t\tvalue = parseInt(container[horizontal ? \"left\" : \"top\"], 10);\n\n\t\t\t\tif (horizontal) {\n\t\t\t\t\tvalue && (container.left = \"0px\");\n\t\t\t\t} else {\n\t\t\t\t\tvalue !== paddingTop && (container.top = \"0px\");\n\t\t\t\t}\n\n\t\t\t\tthis._setTranslate([-coords[+!options.horizontal], 0]);\n\t\t\t} else if (phase === \"end\") {\n\t\t\t\tcoords = this._getCoordsValue(coords);\n\n\t\t\t\t_utils.utils.css(container, {\n\t\t\t\t\tleft: coords.x,\n\t\t\t\t\ttop: coords.y,\n\t\t\t\t\ttransform: _utils.utils.translate(0, 0, conf.useLayerHack)\n\t\t\t\t});\n\n\t\t\t\tconf.$dummyAnchor.focus();\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n  * Set MovableCoord coord value\n  * @param {String} method\n  * @param {Array} coordValue\n  * @param {Boolean} isDirVal\n  * @param {Number} duration\n  * @return {eg.MovableCoord} MovableCoord instance\n  */\n\n\n\tFlicking.prototype._setMovableCoord = function _setMovableCoord(method, coordValue, isDirVal, duration) {\n\t\tvar coord = coordValue;\n\n\t\tif (isDirVal) {\n\t\t\tcoord = this._getDataByDirection(coord);\n\t\t}\n\n\t\treturn this._mcInst[method](coord[0], coord[1], duration);\n\t};\n\n\t/**\n  * Set hint for browser to decide efficient way of doing transform changes(or animation)\n  * https://dev.opera.com/articles/css-will-change-property/\n  */\n\n\n\tFlicking.prototype._setHint = function _setHint() {\n\t\tvar style = { willChange: \"transform\" };\n\n\t\t_utils.utils.css(this.$container, style);\n\t\t_utils.utils.css(this._conf.panel.$list, style);\n\t};\n\n\t/**\n  * Get data according options.horizontal value\n  *\n  * @param {Array} value primary data to handle\n  * @return {Array}\n  */\n\n\n\tFlicking.prototype._getDataByDirection = function _getDataByDirection(value) {\n\t\tvar data = value.concat();\n\n\t\t!this.options.horizontal && data.reverse();\n\t\treturn data;\n\t};\n\n\t/**\n  * Move nodes\n  * @param {Boolean} direction\n  * @param {Number} indexToMove\n  */\n\n\n\tFlicking.prototype._arrangePanelPosition = function _arrangePanelPosition(direction, indexToMove) {\n\t\tvar next = direction === this._conf.dirData[0];\n\n\t\tthis._movePanelPosition(Math.abs(indexToMove || 1), next);\n\t};\n\n\t/**\n  * Get the base position index of the panel\n  */\n\n\n\tFlicking.prototype._getBasePositionIndex = function _getBasePositionIndex() {\n\t\treturn Math.floor(this._conf.panel.count / 2 - 0.1);\n\t};\n\n\t/**\n  * Bind events\n  * @param {Boolean} bind\n  */\n\n\n\tFlicking.prototype._bindEvents = function _bindEvents(bind) {\n\t\tvar options = this.options;\n\t\tvar $wrapper = this.$wrapper;\n\t\tvar mcInst = this._mcInst;\n\n\t\tif (bind) {\n\t\t\tmcInst.bind($wrapper, {\n\t\t\t\tscale: this._getDataByDirection([-1, 0]),\n\t\t\t\tdirection: _movablecoord2.default[\"DIRECTION_\" + (options.horizontal ? \"HORIZONTAL\" : \"VERTICAL\")],\n\t\t\t\tinterruptable: false,\n\t\t\t\tinputType: options.inputType,\n\t\t\t\tthresholdAngle: options.thresholdAngle\n\t\t\t}).on({\n\t\t\t\thold: this._holdHandler.bind(this),\n\t\t\t\tchange: this._changeHandler.bind(this),\n\t\t\t\trelease: this._releaseHandler.bind(this),\n\t\t\t\tanimationStart: this._animationStartHandler.bind(this),\n\t\t\t\tanimationEnd: this._animationEndHandler.bind(this)\n\t\t\t});\n\t\t} else {\n\t\t\tmcInst.unbind($wrapper).off();\n\t\t}\n\t};\n\n\t/**\n  * Set container's height value according to children's height\n  * @param {Number} direction\n  */\n\n\n\tFlicking.prototype._setAdaptiveHeight = function _setAdaptiveHeight(direction) {\n\t\tvar conf = this._conf;\n\t\tvar indexToMove = conf.indexToMove;\n\t\tvar $children = void 0;\n\t\tvar height = void 0;\n\n\t\tvar $panel = indexToMove === 0 ?\n\n\t\t// panel moved by 1\n\t\tthis[\"get\" + (direction === _movablecoord2.default.DIRECTION_LEFT && \"Next\" || direction === _movablecoord2.default.DIRECTION_RIGHT && \"Prev\" || \"\") + \"Element\"]() :\n\n\t\t// panel moved by .moveTo()\n\t\tconf.panel.$list[conf.panel.currIndex + indexToMove];\n\n\t\tvar $first = $panel.querySelector(\":first-child\");\n\n\t\theight = $first.getAttribute(consts.DATA_HEIGHT);\n\n\t\tif (!height) {\n\t\t\t$children = $panel.children;\n\t\t\theight = _utils.utils.outerHeight($children.length > 1 ? ($panel.style.height = \"auto\", $panel) : $first);\n\n\t\t\t$first.setAttribute(consts.DATA_HEIGHT, height);\n\t\t}\n\n\t\tthis.$wrapper.style.height = height + \"px\";\n\t};\n\n\t/**\n  * Trigger beforeRestore event\n  * @param {Object} e event object\n  */\n\n\n\tFlicking.prototype._triggerBeforeRestore = function _triggerBeforeRestore(e) {\n\t\tvar conf = this._conf;\n\t\tvar touch = conf.touch;\n\n\t\t// reverse direction value when restore\n\t\ttouch.direction = ~~conf.dirData.join(\"\").replace(touch.direction, \"\");\n\n\t\t/**\n   * This event is fired before an element is restored to its original position when user action is done while the element is not dragged until a certain distance threshold is reached\n   * @ko 다음 패널로 바뀌는 기준 이동 거리만큼 이동하기 전에 사용자의 동작이 끝났을 때 원래 패널로 복원되기 전에 발생하는 이벤트\n   * @name eg.Flicking#beforeRestore\n   * @event\n   * @param {Object} param The object of data to be sent to an event <ko>이벤트에 전달되는 데이터 객체</ko>\n   * @param {String} param.eventType The name of the event <ko>이름명</ko>\n   * @param {Number} param.index Physical index number of the current panel element, which is relative to DOM. (@deprecated since 1.3.0)<ko>현재 패널 엘리먼트의 물리적 인덱스 번호. DOM 엘리먼트를 기준으로 하는 인덱스 번호다. (@deprecated since 1.3.0)</ko>\n   * @param {Number} param.no Logical index number of the current panel element, which is relative to the panel content.<ko>현재 패널 엘리먼트의 논리적 인덱스 번호. 패널 콘텐츠를 기준으로 하는 인덱스 번호다</ko>\n   * @param {Number} param.direction Direction of the movement (see eg.MovableCoord.DIRECTION_* constant) <ko>이동 방향(eg.MovableCoord.DIRECTION_* constant 참고)</ko>\n   * @param {Array} param.depaPos Start coordinate <ko>출발점 좌표</ko>\n   * @param {Number} param.depaPos.0 x-coordinate <ko>x 좌표</ko>\n   * @param {Number} param.depaPos.1 y-coordinate <ko>y 좌표</ko>\n   * @param {Array} param.destPos End coordinate <ko>도착점 좌표</ko>\n   * @param {Number} param.destPos.0 x-coordinate <ko>x 좌표</ko>\n   * @param {Number} param.destPos.1 y-coordinate <ko>y 좌표</ko>\n   */\n\t\tconf.customEvent.restore = this._triggerEvent(consts.EVENTS.beforeRestore, {\n\t\t\tdepaPos: e.depaPos,\n\t\t\tdestPos: e.destPos\n\t\t});\n\n\t\tif (!conf.customEvent.restore) {\n\t\t\t\"stop\" in e && e.stop();\n\t\t\tconf.panel.animating = false;\n\t\t}\n\t};\n\n\t/**\n  * Trigger restore event\n  */\n\n\n\tFlicking.prototype._triggerRestore = function _triggerRestore() {\n\t\tvar customEvent = this._conf.customEvent;\n\n\t\t/**\n   * This event is fired after an element is restored to its original position when user action is done while the element is not dragged until a certain distance threshold is reached.\n   * @ko 다음 패널로 바뀌는 기준 이동 거리만큼 이동하기 전에 사용자의 동작이 끝났을 때 원래 패널로 복원된 다음 발생하는 이벤트\n   * @name eg.Flicking#restore\n   * @event\n   * @param {Object} param The object of data to be sent to an event <ko>이벤트에 전달되는 데이터 객체</ko>\n   * @param {String} param.eventType The name of the event <ko>이름명</ko>\n   * @param {Number} param.index Physical index number of the current panel element, which is relative to DOM(@deprecated since 1.3.0)<ko>현재 패널 엘리먼트의 물리적 인덱스 번호. DOM 엘리먼트를 기준으로 하는 인덱스 번호다 (@deprecated since 1.3.0)</ko>\n   * @param {Number} param.no Logical index number of the current panel element, which is relative to the panel content. <ko>현재 패널 엘리먼트의 논리적 인덱스 번호. 패널 콘텐츠를 기준으로 하는 인덱스 번호다</ko>\n   * @param {Number} param.direction Direction of the panel move (see eg.MovableCoord.DIRECTION_* constant) <ko>이동 방향(eg.MovableCoord.DIRECTION_* constant 참고)</ko>\n   */\n\t\tcustomEvent.restore && this._triggerEvent(consts.EVENTS.restore);\n\t\tcustomEvent.restoreCall = false;\n\t};\n\n\t/**\n  * Set value when panel changes\n  * @param {String} phase - [start|end]\n  * @param {Object} pos\n  */\n\n\n\tFlicking.prototype._setPhaseValue = function _setPhaseValue(phase, pos) {\n\t\tvar conf = this._conf;\n\t\tvar options = this.options;\n\t\tvar panel = conf.panel;\n\n\t\tif (phase === \"start\" && (panel.changed = this._isMovable())) {\n\t\t\t/**\n    * This event is fired before flicking starts\n    * @ko 플리킹이 시작하기 전에 발생하는 이벤트\n    * @name eg.Flicking#beforeFlickStart\n    * @event\n    * @param {Object} param The object of data to be sent to an event <ko>이벤트에 전달되는 데이터 객체</ko>\n    * @param {String} param.eventType The name of the event <ko>이름명</ko>\n    * @param {Number} param.index Physical index number of the current panel element, which is relative to DOM. (@deprecated since 1.3.0)<ko>현재 패널 엘리먼트의 물리적 인덱스 번호. DOM 엘리먼트를 기준으로 하는 인덱스 번호다 (@deprecated since 1.3.0)</ko>\n    * @param {Number} param.no Logical index number of the current panel element, which is relative to the panel content.<ko>현재 패널 엘리먼트의 논리적 인덱스 번호. 패널 콘텐츠를 기준으로 하는 인덱스 번호다</ko>\n    * @param {Number} param.direction Direction of the movement (see eg.MovableCoord.DIRECTION_* constant) <ko>−\t이동 방향(eg.MovableCoord.DIRECTION_* constant 참고)</ko>\n    * @param {Array} param.depaPos Start coordinate <ko>출발점 좌표</ko>\n    * @param {Number} param.depaPos.0 x-coordinate <ko>x 좌표</ko>\n    * @param {Number} param.depaPos.1 y-coordinate <ko>y 좌표</ko>\n    * @param {Array} param.destPos End coordinate <ko>도착점 좌표</ko>\n    * @param {Number} param.destPos.0 x-coordinate <ko>x 좌표</ko>\n    * @param {Number} param.destPos.1 y-coordinate <ko>y 좌표</ko>\n    */\n\t\t\tif (!this._triggerEvent(consts.EVENTS.beforeFlickStart, pos)) {\n\t\t\t\tpanel.changed = panel.animating = false;\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\toptions.adaptiveHeight && this._setAdaptiveHeight(conf.touch.direction);\n\t\t\t}\n\n\t\t\tconf.indexToMove === 0 && this._setPanelNo();\n\t\t} else if (phase === \"end\") {\n\t\t\tif (options.circular && panel.changed) {\n\t\t\t\tthis._arrangePanels(true, conf.indexToMove);\n\t\t\t}\n\n\t\t\t!consts.IS_ANDROID2 && this._setTranslate([-panel.size * panel.index, 0]);\n\t\t\tconf.touch.distance = conf.indexToMove = 0;\n\n\t\t\t/**\n    * This event is fired after panel moves.\n    * @ko 패널이 이동한 다음 발생하는 이벤트\n    * @name eg.Flicking#flickEnd\n    * @event\n    * @param {Object} param The object of data to be sent to an event <ko>이벤트에 전달되는 데이터 객체</ko>\n    * @param {String} param.eventType The name of the event <ko>이름명</ko>\n    * @param {Number} param.index Physical index number of the current panel element, which is relative to DOM (@deprecated since 1.3.0)<ko>현재 패널 엘리먼트의 물리적 인덱스 번호. DOM 엘리먼트를 기준으로 하는 인덱스 번호다 (@deprecated since 1.3.0)</ko>\n    * @param {Number} param.no Logical index number of the current panel element, which is relative to the panel content. <ko>현재 패널 엘리먼트의 논리적 인덱스 번호. 패널 콘텐츠를 기준으로 하는 인덱스 번호다.</ko>\n    * @param {Number} param.direction Direction of the movemen (see eg.MovableCoord.DIRECTION_* constant) <ko>−\t이동 방향(eg.MovableCoord.DIRECTION_* constant 참고</ko>\n    */\n\t\t\tpanel.changed && this._triggerEvent(consts.EVENTS.flickEnd);\n\t\t}\n\n\t\tthis._adjustContainerCss(phase);\n\t\treturn true;\n\t};\n\n\t/**\n  * Get positive or negative according direction\n  */\n\n\n\tFlicking.prototype._getNumByDirection = function _getNumByDirection() {\n\t\tvar conf = this._conf;\n\n\t\treturn conf.touch.direction === conf.dirData[0] ? 1 : -1;\n\t};\n\n\t/**\n  * Revert panel number\n  */\n\n\n\tFlicking.prototype._revertPanelNo = function _revertPanelNo() {\n\t\tvar panel = this._conf.panel;\n\t\tvar num = this._getNumByDirection();\n\n\t\tvar index = panel.currIndex >= 0 ? panel.currIndex : panel.index - num;\n\t\tvar no = panel.currNo >= 0 ? panel.currNo : panel.no - num;\n\n\t\tthis._setPanelNo({\n\t\t\tindex: index,\n\t\t\tno: no\n\t\t});\n\t};\n\n\t/**\n  * Set the panel number\n  * @param {Object} obj number object\n  */\n\n\n\tFlicking.prototype._setPanelNo = function _setPanelNo(obj) {\n\t\tvar panel = this._conf.panel;\n\t\tvar count = panel.origCount - 1;\n\t\tvar num = this._getNumByDirection();\n\n\t\tif (_utils.utils.isObject(obj)) {\n\t\t\tfor (var key in obj) {\n\t\t\t\tpanel[key] = obj[key];\n\t\t\t}\n\t\t} else {\n\t\t\t// remember current value\n\t\t\tpanel.currIndex = panel.index;\n\t\t\tpanel.currNo = panel.no;\n\n\t\t\tpanel.index += num;\n\t\t\tpanel.no += num;\n\t\t}\n\n\t\tif (panel.no > count) {\n\t\t\tpanel.no = 0;\n\t\t} else if (panel.no < 0) {\n\t\t\tpanel.no = count;\n\t\t}\n\t};\n\n\t/**\n  * Set pointerEvents css property on container element due to the iOS click bug\n  * @param {Event} e\n  */\n\n\n\tFlicking.prototype._setPointerEvents = function _setPointerEvents(e) {\n\t\tvar pointer = _utils.utils.css(this.$container, \"pointerEvents\");\n\t\tvar val = void 0;\n\n\t\tif (e && e.holding && e.hammerEvent && e.hammerEvent.preventSystemEvent && pointer !== \"none\") {\n\t\t\tval = \"none\";\n\t\t} else if (!e && pointer !== \"auto\") {\n\t\t\tval = \"auto\";\n\t\t}\n\n\t\tval && _utils.utils.css(this.$container, { pointerEvents: val });\n\t};\n\n\t/**\n  * Get coordinate value with unit\n  * @param coords {Array} x,y numeric value\n  * @return {Object} x,y coordinate value with unit\n  */\n\n\n\tFlicking.prototype._getCoordsValue = function _getCoordsValue(coordsValue) {\n\t\t// the param comes as [ val, 0 ], whatever the direction. So reorder the value depend the direction.\n\t\tvar coords = this._getDataByDirection(coordsValue);\n\n\t\treturn {\n\t\t\tx: _utils.utils.getUnitValue(coords[0]),\n\t\t\ty: _utils.utils.getUnitValue(coords[1])\n\t\t};\n\t};\n\n\t/**\n  * Set translate property value\n  * @param {Array} coords coordinate x,y value\n  */\n\n\n\tFlicking.prototype._setTranslate = function _setTranslate(coordsValue) {\n\t\tvar coords = this._getCoordsValue(coordsValue);\n\n\t\tthis._setMoveStyle(this.$container, [coords.x, coords.y]);\n\t};\n\n\t/**\n  * Check if panel passed through threshold pixel\n  */\n\n\n\tFlicking.prototype._isMovable = function _isMovable() {\n\t\tvar options = this.options;\n\t\tvar mcInst = this._mcInst;\n\t\tvar isMovable = Math.abs(this._conf.touch.distance) >= options.threshold;\n\t\tvar max = void 0;\n\t\tvar currPos = void 0;\n\n\t\tif (!options.circular && isMovable) {\n\t\t\tmax = this._getDataByDirection(mcInst.options.max)[0];\n\t\t\tcurrPos = this._getDataByDirection(mcInst.get())[0];\n\n\t\t\t// if current position out of range\n\t\t\tif (currPos < 0 || currPos > max) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn isMovable;\n\t};\n\n\t/**\n  * Trigger custom events\n  * @param {String} name - event name\n  * @param {Object} param - additional event value\n  * @return {Boolean}\n  */\n\n\n\tFlicking.prototype._triggerEvent = function _triggerEvent(name, param) {\n\t\tvar conf = this._conf;\n\t\tvar panel = conf.panel;\n\n\t\t// pass changed panel no only on 'flickEnd' event\n\t\tif (name === consts.EVENTS.flickEnd) {\n\t\t\tpanel.currNo = panel.no;\n\t\t\tpanel.currIndex = panel.index;\n\t\t}\n\n\t\treturn this.trigger(conf.eventPrefix + name, _utils.utils.extend({\n\t\t\teventType: name,\n\t\t\tindex: panel.currIndex,\n\t\t\tno: panel.currNo,\n\t\t\tdirection: conf.touch.direction\n\t\t}, param));\n\t};\n\n\t/**\n  * Get next/prev panel element/index.\n  * @param {Boolean} direction\n  * @param {Boolean} element - true:to get element, false:to get index\n  * @param {Number} physical - true : physical, false : logical\n  * @return {HTMLElement|Number}\n  */\n\n\n\tFlicking.prototype._getElement = function _getElement(direction, element, physical) {\n\t\tvar panel = this._conf.panel;\n\t\tvar circular = this.options.circular;\n\t\tvar pos = panel.currIndex;\n\t\tvar next = direction === this._conf.dirData[0];\n\t\tvar result = null;\n\t\tvar total = void 0;\n\t\tvar index = void 0;\n\n\t\tif (physical) {\n\t\t\ttotal = panel.count;\n\t\t\tindex = pos;\n\t\t} else {\n\t\t\ttotal = panel.origCount;\n\t\t\tindex = panel.currNo;\n\t\t}\n\n\t\tvar currentIndex = index;\n\n\t\tif (next) {\n\t\t\tif (index < total - 1) {\n\t\t\t\tindex++;\n\t\t\t} else if (circular) {\n\t\t\t\tindex = 0;\n\t\t\t}\n\t\t} else {\n\t\t\tif (index > 0) {\n\t\t\t\tindex--;\n\t\t\t} else if (circular) {\n\t\t\t\tindex = total - 1;\n\t\t\t}\n\t\t}\n\n\t\tif (currentIndex !== index) {\n\t\t\tresult = element ? panel.$list[next ? pos + 1 : pos - 1] : index;\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t/**\n  * Set value to force move panels when duration is 0\n  * @param {Boolean} next\n  */\n\n\n\tFlicking.prototype._setValueToMove = function _setValueToMove(next) {\n\t\tvar conf = this._conf;\n\n\t\tconf.touch.distance = this.options.threshold + 1;\n\t\tconf.touch.direction = conf.dirData[+!next];\n\t};\n\n\t/**\n  * Returns the index number of the current panel element.\n  * @ko 현재 패널 엘리먼트의 인덱스 번호를 반환한다\n  * @method eg.Flicking#getIndex\n  * @param {Boolean} [physical=false] Types of index numbers<br>- true: Indicates physical index numbers relative to DOM.<br>- false: Indicates logical index numbers relative to the panel content. <ko>−\t인덱스 번호의 종류<br>- true: 물리적 인덱스 번호. DOM 엘리먼트를 기준으로 하는 인덱스 번호다.<br>- false: 논리적 인덱스 번호. 패널 콘텐츠를 기준으로 하는 인덱스 번호다.</ko>\n  * @return {Number} Index number of the current panel element <ko>현재 패널의 인덱스 번호</ko>\n  */\n\n\n\tFlicking.prototype.getIndex = function getIndex(physical) {\n\t\treturn this._conf.panel[physical ? \"currIndex\" : \"currNo\"];\n\t};\n\n\t/**\n  * Returns the reference of the current panel element.\n  * @ko 현재 패널 엘리먼트의 레퍼런스를 반환한다\n  * @method eg.Flicking#getElement\n  * @return {HTMLElement} Current element <ko>현재 엘리먼트</ko>\n  */\n\n\n\tFlicking.prototype.getElement = function getElement() {\n\t\tvar panel = this._conf.panel;\n\n\t\treturn panel.$list[panel.currIndex];\n\t};\n\n\t/**\n  * Returns the reference of the next panel element.\n  * @ko 다음 패널 엘리먼트의 레퍼런스를 반환한다.\n  * @method eg.Flicking#getNextElement\n  * @return {HTMLElement|null} Next panel element or null if it does not exist.<ko>다음 패널 엘리먼트. 패널이 없으면 'null'을 반환한다.</ko>\n  */\n\n\n\tFlicking.prototype.getNextElement = function getNextElement() {\n\t\treturn this._getElement(this._conf.dirData[0], true);\n\t};\n\n\t/**\n  * Returns the index number of the next panel element.\n  * @ko 다음 패널 엘리먼트의 인덱스 번호를 반환한다\n  * @method eg.Flicking#getNextIndex\n  * @param {Boolean} [physical=false] Types of index numbers<br>- true: Indicates physical index numbers relative to DOM.<br>- false: Indicates logical index numbers relative to the panel content. <ko>−\t인덱스 번호의 종류<br>- true: 물리적 인덱스 번호. DOM 엘리먼트를 기준으로 하는 인덱스 번호다.<br>- false: 논리적 인덱스 번호. 패널 콘텐츠를 기준으로 하는 인덱스 번호다.</ko>\n  * @return {Number|null} Index number of the next panel element or null if it does not exist. <ko>다음 패널 엘리먼트의 인덱스 번호. 패널이 없으면 'null'을 반환한다</ko>\n  */\n\n\n\tFlicking.prototype.getNextIndex = function getNextIndex(physical) {\n\t\treturn this._getElement(this._conf.dirData[0], false, physical);\n\t};\n\n\t/**\n  * Returns the references of whole panel elements.\n  * @ko 패널을 구성하는 모든 엘리먼트의 레퍼런스를 반환한다\n  * @method eg.Flicking#getAllElements\n  * @return {HTMLElement} Whole panel elements <ko>모든 패널 엘리먼트</ko>\n  */\n\n\n\tFlicking.prototype.getAllElements = function getAllElements() {\n\t\treturn this._conf.panel.$list;\n\t};\n\n\t/**\n  * Returns the reference of the previous panel element.\n  * @ko 이전 패널 엘리먼트의 레퍼런스를 반환한다.\n  * @method eg.Flicking#getPrevElement\n  * @return {HTMLElement|null} Previous panel element or null if it does not exist. <ko>이전 패널 엘리먼트. 패널이 없으면 'null'을 반환한다</ko>\n  */\n\n\n\tFlicking.prototype.getPrevElement = function getPrevElement() {\n\t\treturn this._getElement(this._conf.dirData[1], true);\n\t};\n\n\t/**\n  * Returns the index number of the previous panel element.\n  * @ko 이전 패널 엘리먼트의 인덱스 번호를 반환한다\n  * @method eg.Flicking#getPrevIndex\n  * @param {Boolean} [physical=false] Types of index numbers<br>- true: Indicates physical index numbers relative to DOM.<br>- false: Indicates logical index numbers relative to the panel content. <ko>−\t인덱스 번호의 종류<br>- true: 물리적 인덱스 번호. DOM 엘리먼트를 기준으로 하는 인덱스 번호다.<br>- false: 논리적 인덱스 번호. 패널 콘텐츠를 기준으로 하는 인덱스 번호다.</ko>\n  * @return {Number|null} Previous element index value or null if no more element exist<ko>이전 패널 인덱스 번호. 패널이 없는 경우에는 null</ko>\n  */\n\n\n\tFlicking.prototype.getPrevIndex = function getPrevIndex(physical) {\n\t\treturn this._getElement(this._conf.dirData[1], false, physical);\n\t};\n\n\t/**\n  * Returns the total number of whole panel elements.\n  * @ko 전체 패널 엘리먼트의 개수를 반환한다\n  * @method eg.Flicking#getTotalCount\n  * @deprecated since 1.3.0\n  * @param {Boolean} [physical=false] Number of elements relative to (true: DOM, false: panel content)<ko>엘리먼트 개수의 기준(true: DOM 엘리먼트 기준, false: 패널 콘텐츠 기준)</ko>\n  * @return {Number} Total number of whole panel elements <ko>모든 패널 엘리먼트의 개수</ko>\n  */\n\n\n\tFlicking.prototype.getTotalCount = function getTotalCount(physical) {\n\t\treturn this._conf.panel[physical ? \"count\" : \"origCount\"];\n\t};\n\n\t/**\n  * Checks whether the animated panel is playing.\n  * @ko 패널 이동 애니메이션이 진행 중인지 확인한다.\n  * @method eg.Flicking#isPlaying\n  * @return {Boolean} Indicates whether the animated panel is playing <ko>패널 이동 애니메이션 진행 중 여부</ko>\n  */\n\n\n\tFlicking.prototype.isPlaying = function isPlaying() {\n\t\treturn this._conf.panel.animating;\n\t};\n\n\t/**\n  * Move panel to the given direction\n  * @param {Boolean} next\n  * @param {Number} duration\n  */\n\n\n\tFlicking.prototype._movePanel = function _movePanel(next, duration) {\n\t\tvar conf = this._conf;\n\t\tvar panel = conf.panel;\n\t\tvar options = this.options;\n\n\t\tif (panel.animating || conf.touch.holding) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tthis._setValueToMove(next);\n\n\t\tif (options.circular || this[next ? \"getNextIndex\" : \"getPrevIndex\"]() != null) {\n\t\t\tthis._movePanelByPhase(\"setBy\", [panel.size * (next ? 1 : -1), 0], duration);\n\t\t}\n\n\t\treturn this;\n\t};\n\n\t/**\n  * Move panel applying start/end phase value\n  * @param {String} method movableCoord method name\n  * @param {Object} coords coordinate array value\n  * @param {Number} durationValue duration value\n  */\n\n\n\tFlicking.prototype._movePanelByPhase = function _movePanelByPhase(method, coords, durationValue) {\n\t\tvar duration = _utils.utils.getNumValue(durationValue, this.options.duration);\n\n\t\tif (this._setPhaseValue(\"start\") !== false) {\n\t\t\tthis._setMovableCoord(method, coords, true, duration);\n\t\t\t!duration && this._setPhaseValue(\"end\");\n\t\t}\n\t};\n\n\t/**\n  * Moves an element to the next panel.\n  * @ko 다음 패널로 이동한다.\n  * @method eg.Flicking#next\n  * @param {Number} [duration=options.duration] Duration of the panel movement (unit: ms) <ko>패널 이동 애니메이션 진행 시간(단위: ms)</ko>\n  * @return {eg.Flicking} An instance of a module itself <ko>모듈 자신의 인스턴스</ko>\n  */\n\n\n\tFlicking.prototype.next = function next(duration) {\n\t\treturn this._movePanel(true, duration);\n\t};\n\n\t/**\n  * Moves an element to the previous panel.\n  * @ko 이전 패널로 이동한다.\n  * @method eg.Flicking#prev\n  * @param {Number} [duration=options.duration] Duration of the panel movement (unit: ms) <ko>패널 이동 애니메이션 진행 시간(단위: ms)</ko>\n  * @return {eg.Flicking} An instance of a module itself<ko>모듈 자신의 인스턴스</ko>\n  */\n\n\n\tFlicking.prototype.prev = function prev(duration) {\n\t\treturn this._movePanel(false, duration);\n\t};\n\n\t/**\n  * Moves an element to the indicated panel.\n  * @ko 지정한 패널로 이동한다.\n  * @method eg.Flicking#moveTo\n  * @param {Number} no Logical index number of the target panel element, which is relative to the panel content. <ko>이동할 패널 엘리먼트의 논리적 인덱스 번호. 패널 콘텐츠를 기준으로 하는 인덱스 번호다</ko>\n  * @param {Number} [duration=options.duration] Duration of the panel movement (unit: ms) <ko>패널 이동 애니메이션 진행 시간(단위: ms)</ko>\n  * @return {eg.Flicking} An instance of a module itself<ko>모듈 자신의 인스턴스</ko>\n  */\n\n\n\tFlicking.prototype.moveTo = function moveTo(noValue, duration) {\n\t\tvar conf = this._conf;\n\t\tvar panel = conf.panel;\n\t\tvar circular = this.options.circular;\n\t\tvar currentIndex = panel.index;\n\t\tvar indexToMove = void 0;\n\t\tvar isPositive = void 0;\n\t\tvar no = noValue;\n\n\t\tno = _utils.utils.getNumValue(no, -1);\n\n\t\tif (no < 0 || no >= panel.origCount || no === panel.no || panel.animating || conf.touch.holding) {\n\t\t\treturn this;\n\t\t}\n\n\t\tindexToMove = no - (circular ? panel.no : currentIndex);\n\t\tisPositive = indexToMove > 0;\n\n\t\t// check for real panel count which can be moved on each sides in circular mode\n\t\tif (circular && Math.abs(indexToMove) > (isPositive ? panel.count - (currentIndex + 1) : currentIndex)) {\n\t\t\tindexToMove += (isPositive ? -1 : 1) * panel.count;\n\t\t\tisPositive = indexToMove > 0;\n\t\t}\n\n\t\tthis._setPanelNo(circular ? { no: no } : { no: no, index: no });\n\t\tthis._conf.indexToMove = indexToMove;\n\t\tthis._setValueToMove(isPositive);\n\n\t\tthis._movePanelByPhase(circular ? \"setBy\" : \"setTo\", [panel.size * (circular ? indexToMove : no), 0], duration);\n\n\t\treturn this;\n\t};\n\n\t/**\n  * Update panel's previewPadding size according options.previewPadding\n  */\n\n\n\tFlicking.prototype._checkPadding = function _checkPadding() {\n\t\tvar options = this.options;\n\t\tvar previewPadding = options.previewPadding.concat();\n\t\tvar padding = _utils.utils.css(this.$wrapper, \"padding\").split(\" \");\n\n\t\toptions.horizontal && padding.reverse();\n\n\t\t// get current padding value\n\t\tpadding = [padding[0]];\n\t\tpadding.push(padding[padding.length === 2 ? 0 : 2]);\n\n\t\tpadding = padding.map(Number);\n\n\t\t// update padding when current and given are different\n\t\tif (previewPadding.length === 2 && previewPadding[0] !== padding[0] || previewPadding[1] !== padding[1]) {\n\t\t\tthis._setPadding(previewPadding);\n\t\t}\n\t};\n\n\t/**\n  * Updates the size of the panel.\n  * @ko 패널의 크기를 갱신한다\n  * @method eg.Flicking#resize\n  * @return {eg.Flicking} An instance of a module itself<ko>모듈 자신의 인스턴스</ko>\n  * @example\n  let some = new eg.Flicking(\"#mflick\", {\n \t\t\t\tpreviewPadding: [10,10]\n \t\t\t});\n \t // when device orientaion changes\n  some.resize();\n \t // or when changes previewPadding option from its original value\n  some.options.previewPadding = [20, 30];\n  some.resize();\n  */\n\n\n\tFlicking.prototype.resize = function resize() {\n\t\tvar _utils$css;\n\n\t\tvar conf = this._conf;\n\t\tvar options = this.options;\n\t\tvar panel = conf.panel;\n\t\tvar horizontal = options.horizontal;\n\t\tvar panelSize = void 0;\n\n\t\tif (~~options.previewPadding.join(\"\")) {\n\t\t\tthis._checkPadding();\n\t\t\tpanelSize = panel.size;\n\t\t} else if (horizontal) {\n\t\t\tpanelSize = panel.size = _utils.utils.css(this.$wrapper, \"width\", true);\n\t\t}\n\n\t\tvar maxCoords = this._getDataByDirection([panelSize * (panel.count - 1), 0]);\n\n\t\t// resize elements\n\t\thorizontal && _utils.utils.css(this.$container, { width: maxCoords[0] + panelSize + \"px\" });\n\t\t_utils.utils.css(panel.$list, (_utils$css = {}, _utils$css[horizontal ? \"width\" : \"height\"] = _utils.utils.getUnitValue(panelSize), _utils$css));\n\n\t\t// remove data-height attribute and re-evaluate panel's height\n\t\tif (options.adaptiveHeight) {\n\t\t\tvar $panel = this.$container.querySelectorAll(\"[\" + consts.DATA_HEIGHT + \"]\");\n\n\t\t\tif ($panel.length) {\n\t\t\t\t[].slice.call($panel).forEach(function (v) {\n\t\t\t\t\treturn v.removeAttribute(consts.DATA_HEIGHT);\n\t\t\t\t});\n\n\t\t\t\tthis._setAdaptiveHeight();\n\t\t\t}\n\t\t}\n\n\t\tthis._mcInst.options.max = maxCoords;\n\t\tthis._setMovableCoord(\"setTo\", [panelSize * panel.index, 0], true, 0);\n\n\t\tif (consts.IS_ANDROID2) {\n\t\t\tthis._applyPanelsPos();\n\t\t\tthis._adjustContainerCss(\"end\");\n\t\t}\n\n\t\treturn this;\n\t};\n\n\t/**\n  * Restores an element to its original position when it movement stops while the element is not dragged until a certain distance threshold is reached.\n  * @ko 다음 패널로 바뀌기 전에 패널 이동이 멈췄을 때 원래 패널로 복원한다\n  * @method eg.Flicking#restore\n  * @param {Number} [durationValue=options.duration] Duration of the panel movement (unit: ms) <ko>패널 이동 애니메이션 진행 시간(단위: ms)</ko>\n  * @return {eg.Flicking} An instance of a module itself<ko>모듈 자신의 인스턴스</ko>\n  * @example\n  * let some = new eg.Flicking(\"#mflick\").on({\n  *\t\t\t\tbeforeFlickStart : function(e) {\n  *\t\t\t\t\tif(e.no === 2) {\n  *\t\t\t\t\t\te.stop();  // stop flicking\n  *\t\t\t\t\t\tthis.restore(100);  // restoring to previous position\n  *\t\t\t\t\t}\n  *\t\t\t\t}\n  *\t\t\t);\n  */\n\n\n\tFlicking.prototype.restore = function restore(durationValue) {\n\t\tvar conf = this._conf;\n\t\tvar panel = conf.panel;\n\t\tvar currPos = this._getDataByDirection(this._mcInst.get());\n\t\tvar duration = durationValue;\n\t\tvar destPos = void 0;\n\n\t\t// check if the panel isn't in right position\n\t\tif (currPos[0] !== panel.currIndex * panel.size) {\n\t\t\tconf.customEvent.restoreCall = true;\n\t\t\tduration = _utils.utils.getNumValue(duration, this.options.duration);\n\n\t\t\tthis._revertPanelNo();\n\t\t\tdestPos = this._getDataByDirection([panel.size * panel.index, 0]);\n\n\t\t\tthis._triggerBeforeRestore({ depaPos: currPos, destPos: destPos });\n\t\t\tthis._setMovableCoord(\"setTo\", destPos, true, duration);\n\n\t\t\tif (!duration) {\n\t\t\t\tthis._adjustContainerCss(\"end\");\n\t\t\t\tthis._triggerRestore();\n\t\t\t}\n\n\t\t\t// to handle on api call\n\t\t} else if (panel.changed) {\n\t\t\tthis._revertPanelNo();\n\t\t\tconf.touch.distance = conf.indexToMove = 0;\n\t\t}\n\n\t\treturn this;\n\t};\n\n\t/**\n  * Enables input devices.\n  * @ko 입력 장치를 사용할 수 있게 한다\n  * @method eg.Flicking#enableInput\n  * @return {eg.Flicking} An instance of a module itself <ko>모듈 자신의 인스턴스</ko>\n  */\n\n\n\tFlicking.prototype.enableInput = function enableInput() {\n\t\tthis._mcInst.enableInput();\n\t\treturn this;\n\t};\n\n\t/**\n  * Disables input devices.\n  * @ko 입력 장치를 사용할 수 없게 한다.\n  * @method eg.Flicking#disableInput\n  * @return {eg.Flicking} An instance of a module itself <ko>모듈 자신의 인스턴스</ko>\n  */\n\n\n\tFlicking.prototype.disableInput = function disableInput() {\n\t\tthis._mcInst.disableInput();\n\t\treturn this;\n\t};\n\n\t/**\n  * Destroys elements, properties, and events used in a panel.\n  * @ko 패널에 사용한 엘리먼트와 속성, 이벤트를 해제한다\n  * @method eg.Flicking#destroy\n  */\n\n\n\tFlicking.prototype.destroy = function destroy() {\n\t\tvar conf = this._conf;\n\t\tvar origPanelStyle = conf.origPanelStyle;\n\t\tvar wrapper = origPanelStyle.wrapper;\n\t\tvar container = origPanelStyle.container;\n\t\tvar list = origPanelStyle.list;\n\n\t\t// unwrap container element and restore original inline style\n\t\t// restore wrapper style\n\t\tvar $wrapper = this.$wrapper;\n\n\t\t$wrapper.setAttribute(\"class\", wrapper.className);\n\t\t$wrapper[wrapper.style ? \"setAttribute\" : \"removeAttribute\"](\"style\", wrapper.style);\n\n\t\t// restore container style\n\t\tvar $container = this.$container;\n\t\tvar $children = [].slice.call($container.children);\n\n\t\tif (origPanelStyle.container.className) {\n\t\t\t$container.setAttribute(\"class\", container.className);\n\t\t\t$container[container.style ? \"setAttribute\" : \"removeAttribute\"](\"style\", container.style);\n\t\t} else {\n\t\t\t$children.forEach(function (v) {\n\t\t\t\treturn $wrapper.appendChild(v);\n\t\t\t});\n\t\t\t$container.parentNode.removeChild($container);\n\t\t}\n\n\t\tfor (var i = 0, $el; $el = $children[i]; i++) {\n\t\t\tif (i > list.length - 1) {\n\t\t\t\t$el.parentNode.removeChild($el);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tvar className = list[i].className;\n\t\t\tvar style = list[i].style;\n\n\t\t\t$el[className ? \"setAttribute\" : \"removeAttribute\"](\"class\", className);\n\t\t\t$el[style ? \"setAttribute\" : \"removeAttribute\"](\"style\", style);\n\t\t}\n\n\t\t// unbind events\n\t\tthis._bindEvents(false);\n\t\tthis.off();\n\n\t\t// release resources\n\t\tfor (var x in this) {\n\t\t\tthis[x] = null;\n\t\t}\n\t};\n\n\treturn Flicking;\n}((0, _utils.Mixin)(_component2.default).with(_eventHandler2.default));\n\nexports.default = Flicking;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n/**\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n// internal config values\nvar CONFIG = {\n\tpanel: {\n\t\t$list: null, // panel list\n\t\tindex: 0, // dom index used among process\n\t\tno: 0, // panel no used among process\n\t\tcurrIndex: 0, // current physical dom index\n\t\tcurrNo: 0, // current logical panel number\n\t\tsize: 0, // panel size\n\t\tcount: 0, // total physical panel count\n\t\torigCount: 0, // total count of given original panels\n\t\tchanged: false, // if panel changed\n\t\tanimating: false, // current animating status boolean\n\t\tminCount: 3 // minimum panel count\n\t},\n\ttouch: {\n\t\tholdPos: [0, 0], // hold x,y coordinate\n\t\tdestPos: [0, 0], // destination x,y coordinate\n\t\tdistance: 0, // touch distance pixel of start to end touch\n\t\tdirection: null, // touch direction\n\t\tlastPos: 0, // to determine move on holding\n\t\tholding: false\n\t},\n\tcustomEvent: { // for custom events value\n\t\tflick: true,\n\t\trestore: false,\n\t\trestoreCall: false\n\t},\n\tdirData: [], // direction constant value according horizontal or vertical\n\tindexToMove: 0,\n\t$dummyAnchor: null // For buggy link highlighting on Android 2.x\n};\n\n// default options\nvar OPTIONS = {\n\thwAccelerable: true, // ns.isHWAccelerable(),  // check weather hw acceleration is available\n\tprefix: \"eg-flick\", // prefix value of class name\n\tdeceleration: 0.0006, // deceleration value\n\thorizontal: true, // move direction (true == horizontal, false == vertical)\n\tcircular: false, // circular mode. In this mode at least 3 panels are required.\n\tpreviewPadding: null, // preview padding value in left(up) to right(down) order. In this mode at least 5 panels are required.\n\tbounce: null, // bounce value in left(up) to right(down) order. Works only in non-circular mode.\n\tthreshold: 40, // the distance pixel threshold value for change panel\n\tduration: 100, // duration ms for animation\n\tpanelEffect: function panelEffect(x) {\n\t\treturn 1 - Math.pow(1 - x, 3);\n\t}, // easing function for panel change animation\n\tdefaultIndex: 0, // initial panel index to be shown\n\tinputType: [// input type\n\t\"touch\", \"mouse\"],\n\tthresholdAngle: 45, // the threshold value that determines whether user action is horizontal or vertical (0~90)\n\tadaptiveHeight: false // Set container's height be adaptive according panel's height\n};\n\nexports.CONFIG = CONFIG;\nexports.OPTIONS = OPTIONS;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _consts = __webpack_require__(1);\n\nvar consts = _interopRequireWildcard(_consts);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright (c) 2015 NAVER Corp.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * egjs projects are licensed under the MIT license\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\nexports.default = function (superclass) {\n\treturn function (_superclass) {\n\t\t_inherits(_class, _superclass);\n\n\t\tfunction _class() {\n\t\t\t_classCallCheck(this, _class);\n\n\t\t\treturn _possibleConstructorReturn(this, _superclass.apply(this, arguments));\n\t\t}\n\n\t\t/**\n   * 'hold' event handler\n   */\n\t\t_class.prototype._holdHandler = function _holdHandler(e) {\n\t\t\tvar conf = this._conf;\n\n\t\t\tconf.touch.holdPos = e.pos;\n\t\t\tconf.touch.holding = true;\n\t\t\tconf.panel.changed = false;\n\n\t\t\tthis._adjustContainerCss(\"start\", e.pos);\n\t\t};\n\n\t\t/**\n   * 'change' event handler\n   */\n\n\n\t\t_class.prototype._changeHandler = function _changeHandler(e) {\n\t\t\tvar conf = this._conf;\n\t\t\tvar touch = conf.touch;\n\t\t\tvar posIndex = +!this.options.horizontal;\n\t\t\tvar pos = e.pos[posIndex];\n\t\t\tvar holdPos = touch.holdPos[posIndex];\n\t\t\tvar direction = void 0;\n\t\t\tvar eventRes = null;\n\t\t\tvar movedPx = void 0;\n\n\t\t\tthis._setPointerEvents(e); // for \"click\" bug\n\n\t\t\t/**\n    * This event is fired when panel moves.\n    * @ko 패널이 이동할 때 발생하는 이벤트\n    * @name eg.Flicking#flick\n    * @event\n    * @param {Object} param The object of data to be sent to an event <ko>이벤트에 전달되는 데이터 객체</ko>\n    * @param {String} param.eventType The name of the event<ko>이름명</ko>\n    * @param {Number} param.index Physical index number of the current panel element, which is relative to DOM (@deprecated since 1.3.0)<ko>현재 패널 엘리먼트의 물리적 인덱스 번호. DOM 엘리먼트를 기준으로 하는 인덱스 번호다 (@deprecated since 1.3.0)</ko>\n    * @param {Number} param.no Logical index number of the current panel element, which is relative to the panel content <ko>현재 패널 엘리먼트의 논리적 인덱스 번호. 패널 콘텐츠를 기준으로 하는 인덱스 번호다</ko>\n    * @param {Number} param.direction Direction of the movement (see eg.MovableCoord.DIRECTION_* constant) <ko>이동 방향(eg.MovableCoord.DIRECTION_* constant 참고)</ko>\n    * @param {Array} param.pos Start coordinate <ko>출발점 좌표</ko>\n    * @param {Number} param.pos.0 x-coordinate <ko>x 좌표</ko>\n    * @param {Number} param.pos.1 y-coordinate <ko>y 좌표</ko>\n    * @param {Boolean} param.holding Indicates whether a user holds an element on the screen of the device. <ko>사용자가 기기의 화면을 누르고 있는지 여부</ko>\n    * @param {Number} param.distance Distance moved from then starting point. According the move direction, positive on eg.MovableCoord.DIRECTION_LEFT/UP and negative on eg.MovableCoord.DIRECTION_RIGHT/DOWN <ko>시작점부터 이동된 거리의 값. 이동 방향에 따라 eg.MovableCoord.DIRECTION_LEFT/UP의 경우 양수를 eg.MovableCoord.DIRECTION_RIGHT/DOWN의 경우는 음수를 반환</ko>\n    */\n\t\t\tif (e.hammerEvent) {\n\t\t\t\tdirection = e.hammerEvent.direction;\n\n\t\t\t\t// Adjust direction in case of diagonal touch move\n\t\t\t\tmovedPx = e.hammerEvent[this.options.horizontal ? \"deltaX\" : \"deltaY\"];\n\n\t\t\t\tif (!~conf.dirData.indexOf(direction)) {\n\t\t\t\t\tdirection = conf.dirData[+(Math.abs(touch.lastPos) <= movedPx)];\n\t\t\t\t}\n\n\t\t\t\ttouch.lastPos = movedPx;\n\t\t\t} else {\n\t\t\t\ttouch.lastPos = null;\n\t\t\t}\n\n\t\t\tconf.customEvent.flick && (eventRes = this._triggerEvent(consts.EVENTS.flick, {\n\t\t\t\tpos: e.pos,\n\t\t\t\tholding: e.holding,\n\t\t\t\tdirection: direction || touch.direction,\n\t\t\t\tdistance: pos - (holdPos || (touch.holdPos[posIndex] = pos))\n\t\t\t}));\n\n\t\t\t(eventRes || eventRes === null) && this._setTranslate([-pos, 0]);\n\t\t};\n\n\t\t/**\n   * 'release' event handler\n   */\n\n\n\t\t_class.prototype._releaseHandler = function _releaseHandler(e) {\n\t\t\tvar touch = this._conf.touch;\n\t\t\tvar pos = e.destPos;\n\t\t\tvar posIndex = +!this.options.horizontal;\n\t\t\tvar holdPos = touch.holdPos[posIndex];\n\t\t\tvar panelSize = this._conf.panel.size;\n\n\t\t\ttouch.distance = e.depaPos[posIndex] - touch.holdPos[posIndex];\n\n\t\t\ttouch.direction = this._conf.dirData[+!(touch.holdPos[posIndex] < e.depaPos[posIndex])];\n\n\t\t\tpos[posIndex] = Math.max(holdPos - panelSize, Math.min(holdPos, pos[posIndex]));\n\n\t\t\ttouch.destPos[posIndex] = pos[posIndex] = Math.round(pos[posIndex] / panelSize) * panelSize;\n\n\t\t\ttouch.distance === 0 && this._adjustContainerCss(\"end\");\n\t\t\ttouch.holding = false;\n\n\t\t\tthis._setPointerEvents(); // for \"click\" bug\n\t\t};\n\n\t\t/**\n   * 'animationStart' event handler\n   */\n\n\n\t\t_class.prototype._animationStartHandler = function _animationStartHandler(e) {\n\t\t\tvar conf = this._conf;\n\t\t\tvar panel = conf.panel;\n\t\t\tvar customEvent = conf.customEvent;\n\n\t\t\tpanel.animating = true;\n\n\t\t\tif (!customEvent.restoreCall && e.hammerEvent && this._setPhaseValue(\"start\", {\n\t\t\t\tdepaPos: e.depaPos,\n\t\t\t\tdestPos: e.destPos\n\t\t\t}) === false) {\n\t\t\t\te.stop();\n\t\t\t}\n\n\t\t\tif (e.hammerEvent) {\n\t\t\t\te.duration = this.options.duration;\n\n\t\t\t\te.destPos[+!this.options.horizontal] = panel.size * (panel.index + conf.indexToMove);\n\t\t\t}\n\n\t\t\tif (this._isMovable()) {\n\t\t\t\t!customEvent.restoreCall && (customEvent.restore = false);\n\t\t\t} else {\n\t\t\t\tthis._triggerBeforeRestore(e);\n\t\t\t}\n\t\t};\n\n\t\t/**\n   * 'animationEnd' event handler\n   */\n\n\n\t\t_class.prototype._animationEndHandler = function _animationEndHandler() {\n\t\t\tthis._setPhaseValue(\"end\");\n\n\t\t\tthis._conf.panel.animating = false;\n\t\t\tthis._triggerRestore();\n\t\t};\n\n\t\treturn _class;\n\t}(superclass);\n};\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _flicking = __webpack_require__(2);\n\nvar _flicking2 = _interopRequireDefault(_flicking);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = _flicking2.default; /**\n                                      * Copyright (c) 2015 NAVER Corp.\n                                      * egjs projects are licensed under the MIT license\n                                      */\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.Mixin = exports.utils = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; /**\n                                                                                                                                                                                                                                                                               * Copyright (c) 2015 NAVER Corp.\n                                                                                                                                                                                                                                                                               * egjs projects are licensed under the MIT license\n                                                                                                                                                                                                                                                                               */\n\n\nvar _browser = __webpack_require__(0);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar utils = {\n\t/**\n  * Select or create element\n  * @param {String|HTMLElement} param\n  *  when string given is as HTML tag, then create element\n  *  otherwise it returns selected elements\n  * @returns {HTMLElement}\n  */\n\t$: function $(param) {\n\t\tvar el = null;\n\n\t\tif (typeof param === \"string\") {\n\t\t\t// check if string is HTML tag format\n\t\t\tvar match = param.match(/^<([a-z]+)\\s*([^>]*)>/);\n\n\t\t\t// creating element\n\t\t\tif (match) {\n\t\t\t\tel = _browser.document.createElement(match[1]);\n\n\t\t\t\t// attributes\n\t\t\t\tmatch.length === 3 && match[2].split(\" \").forEach(function (v) {\n\t\t\t\t\tvar attr = v.split(\"=\");\n\n\t\t\t\t\tel.setAttribute(attr[0], attr[1].trim().replace(/(^[\"']|[\"']$)/g, \"\"));\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tel = _browser.document.querySelectorAll(param);\n\n\t\t\t\tif (!el.length) {\n\t\t\t\t\tel = null;\n\t\t\t\t} else if (el.length === 1) {\n\t\t\t\t\tel = el[0];\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (param.nodeName && param.nodeType === 1) {\n\t\t\tel = param;\n\t\t}\n\n\t\treturn el;\n\t},\n\n\n\t/**\n  * Check if is array\n  * @param arr\n  * @returns {Boolean}\n  */\n\tisArray: function isArray(arr) {\n\t\treturn arr && arr.constructor === Array;\n\t},\n\n\n\t/**\n  * Check if is object\n  * @param {Object} obj\n  * @returns {Boolean}\n  */\n\tisObject: function isObject(obj) {\n\t\treturn obj && !obj.nodeType && (typeof obj === \"undefined\" ? \"undefined\" : _typeof(obj)) === \"object\" && !this.isArray(obj);\n\t},\n\n\n\t/**\n  * Merge object returning new object\n  * @param {Object} target\n  * @param {Object} objectN\n  * @returns {Object} merged target object\n  * @example\n  *  var target = { a: 1 };\n  *  utils.extend(target, { b: 2, c: 3 });\n  *  target;  // { a: 1, b: 2, c: 3 };\n  */\n\textend: function extend(target) {\n\t\tvar _this = this;\n\n\t\tfor (var _len = arguments.length, objectN = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t\t\tobjectN[_key - 1] = arguments[_key];\n\t\t}\n\n\t\tif (!objectN.length || objectN.length === 1 && !objectN[0]) {\n\t\t\treturn target;\n\t\t}\n\n\t\tvar source = objectN.shift();\n\n\t\tif (this.isObject(target) && this.isObject(source)) {\n\t\t\tObject.keys(source).forEach(function (key) {\n\t\t\t\tvar value = source[key];\n\n\t\t\t\tif (_this.isObject(value)) {\n\t\t\t\t\t!target[key] && (target[key] = {});\n\n\t\t\t\t\ttarget[key] = _this.extend(target[key], value);\n\t\t\t\t} else {\n\t\t\t\t\ttarget[key] = _this.isArray(value) ? value.concat() : value;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn this.extend.apply(this, [target].concat(objectN));\n\t},\n\n\n\t/**\n  * Get or set the style value or apply\n  * @param {HTMLElement} el\n  * @param {String|Object} style\n  *  String: return style property value\n  *  Object: set style value\n  * @parma {Boolean} getAsNumber - get the value as number\n  * @returns {String|HTMLElement}\n  */\n\tcss: function css(el, style, getAsNumber) {\n\t\tif (typeof style === \"string\") {\n\t\t\tvar value = _browser.window.getComputedStyle(el)[style];\n\n\t\t\treturn getAsNumber ? this.getNumValue(value) : value;\n\t\t} else {\n\t\t\tvar applyStyle = function applyStyle(target, source) {\n\t\t\t\treturn Object.keys(source).forEach(function (v) {\n\t\t\t\t\ttarget[v] = source[v];\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tthis.isArray(el) ? el.forEach(function (v) {\n\t\t\t\treturn applyStyle(v.style, style);\n\t\t\t}) : applyStyle(el.style, style);\n\t\t}\n\n\t\treturn el;\n\t},\n\n\n\t/**\n  * Check and parse value to number\n  * @param {Number|String} val\n  * @param {Number} defVal\n  * @return {Number}\n  */\n\tgetNumValue: function getNumValue(val, defVal) {\n\t\tvar num = val;\n\n\t\treturn isNaN(num = parseInt(num, 10)) ? defVal : num;\n\t},\n\n\n\t/**\n  * Return unit formatted value\n  * @param {Number|String} val\n  * @return {String} val Value formatted with unit\n  */\n\tgetUnitValue: function getUnitValue(val) {\n\t\tvar rx = /(?:[a-z]{2,}|%)$/;\n\n\t\treturn (parseInt(val, 10) || 0) + (String(val).match(rx) || \"px\");\n\t},\n\n\n\t/**\n  * Get element's outer value\n  * @param {HTMLElement} el\n  * @param {String} type - [outerWidth|outerHeight]\n  * @returns {Number} outer's value\n  */\n\tgetOuter: function getOuter(el, type) {\n\t\tvar style = _browser.window.getComputedStyle(el);\n\t\tvar margin = type === \"outerWidth\" ? [\"marginLeft\", \"marginRight\"] : [\"marginTop\", \"marginBottom\"];\n\n\t\treturn this.getNumValue(style[type.replace(\"outer\", \"\").toLocaleLowerCase()]) + this.getNumValue(style[margin[0]]) + this.getNumValue(style[margin[1]]);\n\t},\n\n\n\t/**\n  * Get element's outerWidth value with margin\n  * @param {HTMLElement} el\n  * @returns {Number}\n  */\n\touterWidth: function outerWidth(el) {\n\t\treturn this.getOuter(el, \"outerWidth\");\n\t},\n\n\n\t/**\n  * Get element's outerHeight value with margin\n  * @param {HTMLElement} el\n  * @returns {Number}\n  */\n\touterHeight: function outerHeight(el) {\n\t\treturn this.getOuter(el, \"outerHeight\");\n\t},\n\n\n\t/**\n  * Checks whether hardware acceleration is enabled.\n  *\n  * @ko 하드웨어 가속을 사용할 수 있는 환경인지 확인한다\n  * @method eg#isHWAccelerable\n  * @return {Boolean} Indicates whether hardware acceleration is enabled. <ko>하드웨어 가속 사용 가능 여부</ko>\n  */\n\tisHWAccelerable: function isHWAccelerable() {\n\t\tvar ua = _browser.window.navigator.userAgent;\n\t\tvar result = false;\n\t\tvar match = void 0;\n\n\t\t// chrome 25- has a text blur bug (except Samsung's sbrowser)\n\t\tif (match = ua.match(/Chrome\\/(\\d+)/)) {\n\t\t\tresult = match[1] >= \"25\";\n\t\t} else if (/ie|edge|firefox|safari|inapp/.test(ua)) {\n\t\t\tresult = true;\n\t\t} else if (match = ua.match(/Android ([\\d.]+)/)) {\n\t\t\tvar version = match[1];\n\t\t\tvar useragent = (ua.match(/\\(.*\\)/) || [null])[0];\n\n\t\t\t// android 4.1+ blacklist\n\t\t\t// EK-GN120 : Galaxy Camera, SM-G386F : Galaxy Core LTE\n\t\t\t// SHW-M420 : Galaxy Nexus , SHW-M200 : NexusS , GT-S7562 : Galaxy S duos\n\t\t\tresult = version >= \"4.1.0\" && !/EK-GN120|SM-G386F/.test(useragent) || version >= \"4.0.3\" && /SHW-|SHV-|GT-|SCH-|SGH-|SPH-|LG-F160|LG-F100|LG-F180|LG-F200|EK-|IM-A|LG-F240|LG-F260/.test(useragent) && !/SHW-M420|SHW-M200|GT-S7562/.test(useragent);\n\t\t}\n\n\t\tthis.isHWAccelerable = function () {\n\t\t\treturn result;\n\t\t};\n\t\treturn result;\n\t},\n\n\n\t/**\n  * Returns the syntax of the translate style which is applied to CSS transition properties.\n  *\n  * @ko CSS 트랜지션 속성에 적용할 translate 스타일 구문을 반환한다\n  * @method eg#translate\n  * @param {String} x Distance to move along the X axis <ko>x축을 따라 이동할 거리</ko>\n  * @param {String} y Distance to move along the Y axis <ko>y축을 따라 이동할 거리</ko>\n  * @param {Boolean} [isHA] Force hardware acceleration <ko>하드웨어 가속 사용 여부</ko>\n  * @return {String} Syntax of the translate style <ko>translate 스타일 구문</ko>\n  */\n\ttranslate: function translate(x, y, isHA) {\n\t\treturn isHA || false ? \"translate3d(\" + x + \",\" + y + \",0)\" : \"translate(\" + x + \",\" + y + \")\";\n\t},\n\n\n\t// 1. user press one position on screen.\n\t// 2. user moves to the other position on screen.\n\t// 3. when user releases fingers on screen, 'click' event is fired at previous position.\n\thasClickBug: function hasClickBug() {\n\t\tvar ua = _browser.window.navigator.userAgent;\n\t\tvar result = /Safari/.test(ua);\n\n\t\tthis.hasClickBug = function () {\n\t\t\treturn result;\n\t\t};\n\t\treturn result;\n\t}\n};\n\nvar MixinBuilder = function () {\n\tfunction MixinBuilder(superclass) {\n\t\t_classCallCheck(this, MixinBuilder);\n\n\t\tthis.superclass = superclass || function () {\n\t\t\tfunction _class() {\n\t\t\t\t_classCallCheck(this, _class);\n\t\t\t}\n\n\t\t\treturn _class;\n\t\t}();\n\t}\n\n\tMixinBuilder.prototype.with = function _with() {\n\t\tfor (var _len2 = arguments.length, mixins = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n\t\t\tmixins[_key2] = arguments[_key2];\n\t\t}\n\n\t\treturn mixins.reduce(function (c, m) {\n\t\t\treturn m(c);\n\t\t}, this.superclass);\n\t};\n\n\treturn MixinBuilder;\n}();\n\nvar Mixin = function Mixin(superclass) {\n\treturn new MixinBuilder(superclass);\n};\n\nexports.utils = utils;\nexports.Mixin = Mixin;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=flicking.js.map\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*!\n * Copyright (c) 2017 NAVER corp\r\n * @egjs/movablecoord projects are licensed under the MIT <https://naver.github.io/egjs/license.txt> license\r\n * \r\n * @egjs/movablecoord JavaScript library\r\n * https://github.com/naver/egjs-movablecoord\r\n * \r\n * @version 2.0.0-rc.2\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory(__webpack_require__(0), __webpack_require__(5));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"MovableCoord\", [\"@egjs/component\", \"hammerjs\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MovableCoord\"] = factory(require(\"@egjs/component\"), require(\"hammerjs\"));\n\telse\n\t\troot[\"eg\"] = root[\"eg\"] || {}, root[\"eg\"][\"MovableCoord\"] = factory(root[\"eg\"][\"Component\"], root[\"Hammer\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_9__, __WEBPACK_EXTERNAL_MODULE_10__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 8);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.SUPPORT_TOUCH = exports.UNIQUEKEY = exports.DIRECTION = undefined;\n\nvar _browser = __webpack_require__(1);\n\n/**\n * @name eg.MovableCoord.DIRECTION_NONE\n * @constant\n * @type {Number}\n */\n/**\n * @name eg.MovableCoord.DIRECTION_LEFT\n * @constant\n * @type {Number}\n*/\n/**\n * @name eg.MovableCoord.DIRECTION_RIGHT\n * @constant\n * @type {Number}\n*/\n/**\n * @name eg.MovableCoord.DIRECTION_UP\n * @constant\n * @type {Number}\n */\n/**\n * @name eg.MovableCoord.DIRECTION_DOWN\n * @constant\n * @type {Number}\n*/\n/**\n * @name eg.MovableCoord.DIRECTION_HORIZONTAL\n * @constant\n * @type {Number}\n*/\n/**\n * @name eg.MovableCoord.DIRECTION_VERTICAL\n * @constant\n * @type {Number}\n*/\n/**\n * @name eg.MovableCoord.DIRECTION_ALL\n * @constant\n * @type {Number}\n*/\nvar direction = {\n  DIRECTION_NONE: 1,\n  DIRECTION_LEFT: 2,\n  DIRECTION_RIGHT: 4,\n  DIRECTION_UP: 8,\n  DIRECTION_DOWN: 16,\n  DIRECTION_HORIZONTAL: 2 | 4,\n  DIRECTION_VERTICAL: 8 | 16\n};\n\ndirection.DIRECTION_ALL = direction.DIRECTION_HORIZONTAL | direction.DIRECTION_VERTICAL;\nvar DIRECTION = exports.DIRECTION = direction;\nvar UNIQUEKEY = exports.UNIQUEKEY = \"__MOVABLECOORD__\";\nvar SUPPORT_TOUCH = exports.SUPPORT_TOUCH = \"ontouchstart\" in _browser.window;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n/* eslint-disable no-new-func, no-nested-ternary */\nvar win = typeof window !== \"undefined\" && window.Math === Math ? window : typeof self !== \"undefined\" && self.Math === Math ? self : Function(\"return this\")();\n/* eslint-enable no-new-func, no-nested-ternary */\n\nexports.window = win;\nvar document = exports.document = win.document;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _consts = __webpack_require__(0);\n\nvar Coordinate = {\n\t// get user's direction\n\tgetDirectionByAngle: function getDirectionByAngle(angle, thresholdAngle) {\n\t\tif (thresholdAngle < 0 || thresholdAngle > 90) {\n\t\t\treturn _consts.DIRECTION.DIRECTION_NONE;\n\t\t}\n\t\tvar toAngle = Math.abs(angle);\n\n\t\treturn toAngle > thresholdAngle && toAngle < 180 - thresholdAngle ? _consts.DIRECTION.DIRECTION_VERTICAL : _consts.DIRECTION.DIRECTION_HORIZONTAL;\n\t},\n\tisHorizontal: function isHorizontal(direction, userDirection) {\n\t\treturn direction === _consts.DIRECTION.DIRECTION_ALL || direction & _consts.DIRECTION.DIRECTION_HORIZONTAL && userDirection & _consts.DIRECTION.DIRECTION_HORIZONTAL;\n\t},\n\tisVertical: function isVertical(direction, userDirection) {\n\t\treturn direction === _consts.DIRECTION.DIRECTION_ALL || direction & _consts.DIRECTION.DIRECTION_VERTICAL && userDirection & _consts.DIRECTION.DIRECTION_VERTICAL;\n\t},\n\tgetPointOfIntersection: function getPointOfIntersection(depaPos, destPos, min, max, circular, bounce) {\n\t\tvar boxLT = [min[0] - bounce[3], min[1] - bounce[0]];\n\t\tvar boxRB = [max[0] + bounce[1], max[1] + bounce[2]];\n\t\tvar toDestPos = destPos.concat();\n\n\t\tvar xd = destPos[0] - depaPos[0];\n\t\tvar yd = destPos[1] - depaPos[1];\n\n\t\tif (!circular[3]) {\n\t\t\ttoDestPos[0] = Math.max(boxLT[0], toDestPos[0]);\n\t\t} // left\n\t\tif (!circular[1]) {\n\t\t\ttoDestPos[0] = Math.min(boxRB[0], toDestPos[0]);\n\t\t} // right\n\t\ttoDestPos[1] = xd ? depaPos[1] + yd / xd * (toDestPos[0] - depaPos[0]) : toDestPos[1];\n\n\t\tif (!circular[0]) {\n\t\t\ttoDestPos[1] = Math.max(boxLT[1], toDestPos[1]);\n\t\t} // up\n\t\tif (!circular[2]) {\n\t\t\ttoDestPos[1] = Math.min(boxRB[1], toDestPos[1]);\n\t\t} // down\n\t\ttoDestPos[0] = yd ? depaPos[0] + xd / yd * (toDestPos[1] - depaPos[1]) : toDestPos[0];\n\t\treturn [Math.min(max[0], Math.max(min[0], toDestPos[0])), Math.min(max[1], Math.max(min[1], toDestPos[1]))];\n\t},\n\n\t// determine outside\n\tisOutside: function isOutside(pos, min, max) {\n\t\treturn pos[0] < min[0] || pos[1] < min[1] || pos[0] > max[0] || pos[1] > max[1];\n\t},\n\n\t// from outside to outside\n\tisOutToOut: function isOutToOut(pos, destPos, min, max) {\n\t\treturn (pos[0] < min[0] || pos[0] > max[0] || pos[1] < min[1] || pos[1] > max[1]) && (destPos[0] < min[0] || destPos[0] > max[0] || destPos[1] < min[1] || destPos[1] > max[1]);\n\t},\n\tgetNextOffsetPos: function getNextOffsetPos(speeds, deceleration) {\n\t\tvar normalSpeed = Math.sqrt(speeds[0] * speeds[0] + speeds[1] * speeds[1]);\n\t\tvar duration = Math.abs(normalSpeed / -deceleration);\n\n\t\treturn [speeds[0] / 2 * duration, speeds[1] / 2 * duration];\n\t},\n\tgetDurationFromPos: function getDurationFromPos(pos, deceleration) {\n\t\tvar normalPos = Math.sqrt(pos[0] * pos[0] + pos[1] * pos[1]);\n\t\tvar duration = Math.sqrt(normalPos / deceleration * 2);\n\n\t\t// when duration is under 100, then value is zero\n\t\treturn duration < 100 ? 0 : duration;\n\t},\n\tisCircular: function isCircular(destPos, min, max, circular) {\n\t\treturn circular[0] && destPos[1] < min[1] || circular[1] && destPos[0] > max[0] || circular[2] && destPos[1] > max[1] || circular[3] && destPos[0] < min[0];\n\t},\n\tgetCircularPos: function getCircularPos(pos, min, max, circular) {\n\t\tvar toPos = pos.concat();\n\t\tvar length = [max[0] - min[0], max[1] - min[1]];\n\n\t\tif (circular[0] && toPos[1] < min[1]) {\n\t\t\t// up\n\t\t\ttoPos[1] = (toPos[1] - min[1]) % length[1] + max[1];\n\t\t}\n\t\tif (circular[1] && toPos[0] > max[0]) {\n\t\t\t// right\n\t\t\ttoPos[0] = (toPos[0] - max[0]) % length[0] + min[0];\n\t\t}\n\t\tif (circular[2] && toPos[1] > max[1]) {\n\t\t\t// down\n\t\t\ttoPos[1] = (toPos[1] - max[1]) % length[1] + min[1];\n\t\t}\n\t\tif (circular[3] && toPos[0] < min[0]) {\n\t\t\t// left\n\t\t\ttoPos[0] = (toPos[0] - min[0]) % length[0] + max[0];\n\t\t}\n\n\t\ttoPos[0] = +toPos[0].toFixed(5);\n\t\ttoPos[1] = +toPos[1].toFixed(5);\n\t\treturn toPos;\n\t}\n};\n\nexports.default = Coordinate;\nmodule.exports = exports[\"default\"];\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.$ = exports.Mixin = undefined;\n\nvar _browser = __webpack_require__(1);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction $(param) {\n\tvar multi = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n\tvar el = void 0;\n\n\tif (typeof param === \"string\") {\n\t\t// String (HTML, Selector)\n\t\t// check if string is HTML tag format\n\t\tvar match = param.match(/^<([a-z]+)\\s*([^>]*)>/);\n\n\t\t// creating element\n\t\tif (match) {\n\t\t\t// HTML\n\t\t\tvar dummy = _browser.document.createElement(\"div\");\n\n\t\t\tdummy.innerHTML = param;\n\t\t\tel = Array.prototype.slice.call(dummy.childNodes);\n\t\t} else {\n\t\t\t// Selector\n\t\t\tel = Array.prototype.slice.call(_browser.document.querySelectorAll(param));\n\t\t}\n\t\tif (!multi) {\n\t\t\tel = el.length >= 1 ? el[0] : undefined;\n\t\t}\n\t} else if (param.nodeName && param.nodeType === 1) {\n\t\t// HTMLElement\n\t\tel = param;\n\t} else if (_browser.window.jQuery && param instanceof jQuery) {\n\t\t// jQuery\n\t\tel = multi ? param.toArray() : param.get(0);\n\t}\n\n\treturn el;\n}\n\nvar MixinBuilder = function () {\n\tfunction MixinBuilder(superclass) {\n\t\t_classCallCheck(this, MixinBuilder);\n\n\t\tthis.superclass = superclass || function () {\n\t\t\tfunction _class() {\n\t\t\t\t_classCallCheck(this, _class);\n\t\t\t}\n\n\t\t\treturn _class;\n\t\t}();\n\t}\n\n\tMixinBuilder.prototype.with = function _with() {\n\t\tfor (var _len = arguments.length, mixins = Array(_len), _key = 0; _key < _len; _key++) {\n\t\t\tmixins[_key] = arguments[_key];\n\t\t}\n\n\t\treturn mixins.reduce(function (c, m) {\n\t\t\treturn m(c);\n\t\t}, this.superclass);\n\t};\n\n\treturn MixinBuilder;\n}();\n\nvar Mixin = function Mixin(superclass) {\n\treturn new MixinBuilder(superclass);\n};\n\nexports.Mixin = Mixin;\nexports.$ = $;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _component = __webpack_require__(9);\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _HammerManager = __webpack_require__(5);\n\nvar _HammerManager2 = _interopRequireDefault(_HammerManager);\n\nvar _eventHandler = __webpack_require__(7);\n\nvar _eventHandler2 = _interopRequireDefault(_eventHandler);\n\nvar _animationHandler = __webpack_require__(6);\n\nvar _animationHandler2 = _interopRequireDefault(_animationHandler);\n\nvar _consts = __webpack_require__(0);\n\nvar _utils = __webpack_require__(3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * A module used to change the information of user action entered by various input devices such as touch screen or mouse into logical coordinates within the virtual coordinate system. The coordinate information sorted by time events occurred is provided if animations are made by user actions. You can implement a user interface by applying the logical coordinates provided. For more information on the eg.MovableCoord module, see demos.\n * @ko 터치 입력 장치나 마우스와 같은 다양한 입력 장치로 전달 받은 사용자의 동작을 가상 좌표계의 논리적 좌표로 변경하는 모듈. 사용자의 동작으로 애니메이션이 일어나면 시간순으로 변경되는 좌표 정보도 제공한다. 변경된 논리적 좌표를 반영해 UI를 구현할 수 있다. eg.MovableCoord 모듈의 자세한 작동 방식은 데모를 참고한다.\n * @alias eg.MovableCoord\n * @extends eg.Component\n *\n * @codepen {\"id\":\"jPPqeR\", \"ko\":\"MovableCoord Cube 예제\", \"en\":\"MovableCoord Cube example\", \"collectionId\":\"AKpkGW\", \"height\": 403}\n * @support {\"ie\": \"10+\", \"ch\" : \"latest\", \"ff\" : \"latest\",  \"sf\" : \"latest\", \"edge\" : \"latest\", \"ios\" : \"7+\", \"an\" : \"2.3+ (except 3.x)\"}\n */\nvar MovableCoord = function (_Mixin$with) {\n\t_inherits(MovableCoord, _Mixin$with);\n\n\t/**\n  * @param {Object} options The option object of the eg.MovableCoord module<ko>eg.MovableCoord 모듈의 옵션 객체</ko>\n  * @param {Array} options.min The minimum value of X and Y coordinates <ko>좌표계의 최솟값</ko>\n  * @param {Number} [options.min.0=0] The X coordinate of the minimum <ko>최소 x좌표</ko>\n  * @param {Number} [options.min.1=0] The Y coordinate of the minimum <ko>최소 y좌표</ko>\n  *\n  * @param {Array} options.max The maximum value of X and Y coordinates <ko>좌표계의 최댓값</ko>\n  * @param {Number} [options.max.0=100] The X coordinate of the maximum<ko>최대 x좌표</ko>\n  * @param {Number} [options.max.1=100] The Y coordinate of the maximum<ko>최대 y좌표</ko>\n  *\n  * @param {Array} options.bounce The size of bouncing area. The coordinates can exceed the coordinate area as much as the bouncing area based on user action. If the coordinates does not exceed the bouncing area when an element is dragged, the coordinates where bouncing effects are applied are retuned back into the coordinate area<ko>바운스 영역의 크기. 사용자의 동작에 따라 좌표가 좌표 영역을 넘어 바운스 영역의 크기만큼 더 이동할 수 있다. 사용자가 끌어다 놓는 동작을 했을 때 좌표가 바운스 영역에 있으면, 바운스 효과가 적용된 좌표가 다시 좌표 영역 안으로 들어온다</ko>\n  * @param {Boolean} [options.bounce.0=10] The size of top area <ko>위쪽 바운스 영역의 크기</ko>\n  * @param {Boolean} [options.bounce.1=10] The size of right area <ko>오른쪽 바운스 영역의 크기</ko>\n  * @param {Boolean} [options.bounce.2=10] The size of bottom area <ko>아래쪽 바운스 영역의 크기</ko>\n  * @param {Boolean} [options.bounce.3=10] The size of left area <ko>왼쪽 바운스 영역의 크기</ko>\n  *\n  * @param {Array} options.margin The size of accessible space outside the coordinate area. If an element is dragged outside the coordinate area and then dropped, the coordinates of the element are returned back into the coordinate area. The size of margins that can be exceeded <ko>−\t좌표 영역을 넘어 이동할 수 있는 바깥 영역의 크기. 사용자가 좌표를 바깥 영역까지 끌었다가 놓으면 좌표가 좌표 영역 안으로 들어온다.</ko>\n  * @param {Boolean} [options.margin.0=0] The size of top margin <ko>위쪽 바깥 영역의 크기</ko>\n  * @param {Boolean} [options.margin.1=0] The size of right margin <ko>오른쪽 바깥 영역의 크기</ko>\n  * @param {Boolean} [options.margin.2=0] The size of bottom margin <ko>아래쪽 바깥 영역의 크기</ko>\n  * @param {Boolean} [options.margin.3=0] The size of left margin <ko>왼쪽 바깥 영역의 크기</ko>\n  * @param {Array} options.circular Indicates whether a circular element is available. If it is set to \"true\" and an element is dragged outside the coordinate area, the element will appear on the other side.<ko>순환 여부. 'true'로 설정한 방향의 좌표 영역 밖으로 엘리먼트가 이동하면 반대 방향에서 엘리먼트가 나타난다</ko>\n  * @param {Boolean} [options.circular.0=false] Indicates whether to circulate to top <ko>위로 순환 여부</ko>\n  * @param {Boolean} [options.circular.1=false] Indicates whether to circulate to right <ko>오른쪽으로 순환 여부</ko>\n  * @param {Boolean} [options.circular.2=false] Indicates whether to circulate to bottom  <ko>아래로 순환 여부</ko>\n  * @param {Boolean} [options.circular.3=false] Indicates whether to circulate to left  <ko>왼쪽으로 순환 여부</ko>\n  *\n  * @param {Function} [options.easing=easing.easeOutCubic] The easing function to apply to an animation. If you want to try a different easing function, use the jQuery easing plugin ({@link http://gsgd.co.uk/sandbox/jquery/easing}) or the jQuery UI easing library ({@link https://jqueryui.com/easing}) <ko>애니메이션에 적용할 easing 함수. 다른 easing 함수를 사용하려면 jQuery easing 플러그인({@link http://gsgd.co.uk/sandbox/jquery/easing})이나, jQuery UI easing 라이브러리({@link https://jqueryui.com/easing})를 사용한다</ko>\n  * @param {Number} [options.maximumDuration=Infinity] Maximum duration of the animation <ko>가속도에 의해 애니메이션이 동작할 때의 최대 좌표 이동 시간</ko>\n  * @param {Number} [options.deceleration=0.0006] Deceleration of the animation where acceleration is manually enabled by user. A higher value indicates shorter running time. <ko>사용자의 동작으로 가속도가 적용된 애니메이션의 감속도. 값이 높을수록 애니메이션 실행 시간이 짧아진다</ko>\n  **/\n\tfunction MovableCoord(options) {\n\t\t_classCallCheck(this, MovableCoord);\n\n\t\tvar _this = _possibleConstructorReturn(this, _Mixin$with.call(this));\n\n\t\t_extends(_this.options = {\n\t\t\tmin: [0, 0],\n\t\t\tmax: [100, 100],\n\t\t\tbounce: [10, 10, 10, 10],\n\t\t\tmargin: [0, 0, 0, 0],\n\t\t\tcircular: [false, false, false, false],\n\t\t\teasing: function easeOutCubic(x) {\n\t\t\t\treturn 1 - Math.pow(1 - x, 3);\n\t\t\t},\n\t\t\tmaximumDuration: Infinity,\n\t\t\tdeceleration: 0.0006\n\t\t}, options);\n\t\t_this._reviseOptions();\n\t\t_this._hammerManager = new _HammerManager2.default();\n\t\t_this._pos = _this.options.min.concat();\n\t\treturn _this;\n\t}\n\n\t/**\n  * Registers an element to use the eg.MovableCoord module.\n  * @ko eg.MovableCoord 모듈을 사용할 엘리먼트를 등록한다\n  * @param {HTMLElement|String|jQuery} element An element to use the eg.MovableCoord module<ko>−\teg.MovableCoord 모듈을 사용할 엘리먼트</ko>\n  * @param {Object} options The option object of the bind() method <ko>bind() 메서드의 옵션 객체</ko>\n  * @param {Number} [options.direction=eg.MovableCoord.DIRECTION_ALL] Coordinate direction that a user can move<br>- eg.MovableCoord.DIRECTION_ALL: All directions available.<br>- eg.MovableCoord.DIRECTION_HORIZONTAL: Horizontal direction only.<br>- eg.MovableCoord.DIRECTION_VERTICAL: Vertical direction only<ko>사용자의 동작으로 움직일 수 있는 좌표의 방향.<br>- eg.MovableCoord.DIRECTION_ALL: 모든 방향으로 움직일 수 있다.<br>- eg.MovableCoord.DIRECTION_HORIZONTAL: 가로 방향으로만 움직일 수 있다.<br>- eg.MovableCoord.DIRECTION_VERTICAL: 세로 방향으로만 움직일 수 있다.</ko>\n  * @param {Array} options.scale Coordinate scale that a user can move<ko>사용자의 동작으로 이동하는 좌표의 배율</ko>\n  * @param {Number} [options.scale.0=1] X-axis scale <ko>x축 배율</ko>\n  * @param {Number} [options.scale.1=1] Y-axis scale <ko>y축 배율</ko>\n  * @param {Number} [options.thresholdAngle=45] The threshold value that determines whether user action is horizontal or vertical (0~90) <ko>사용자의 동작이 가로 방향인지 세로 방향인지 판단하는 기준 각도(0~90)</ko>\n  * @param {Number} [options.interruptable=true] Indicates whether an animation is interruptible.<br>- true: It can be paused or stopped by user action or the API.<br>- false: It cannot be paused or stopped by user action or the API while it is running.<ko>진행 중인 애니메이션 중지 가능 여부.<br>- true: 사용자의 동작이나 API로 애니메이션을 중지할 수 있다.<br>- false: 애니메이션이 진행 중일 때는 사용자의 동작이나 API가 적용되지 않는다</ko>\n  * @param {Array} [options.inputType] Types of input devices. (default: [\"touch\", \"mouse\"])<br>- touch: Touch screen<br>- mouse: Mouse <ko>입력 장치 종류.(기본값: [\"touch\", \"mouse\"])<br>- touch: 터치 입력 장치<br>- mouse: 마우스</ko>\n  *\n  * @return {eg.MovableCoord} An instance of a module itself <ko>모듈 자신의 인스턴스</ko>\n  */\n\n\n\tMovableCoord.prototype.bind = function bind(element, options) {\n\t\tthis._hammerManager.add(element, options, this);\n\t\treturn this;\n\t};\n\t/**\n  * Detaches an element using the eg.MovableCoord module.\n  * @ko eg.MovableCoord 모듈을 사용하는 엘리먼트를 해제한다\n  * @param {HTMLElement|String|jQuery} element An element from which the eg.MovableCoord module is detached<ko>eg.MovableCoord 모듈을 해제할 엘리먼트</ko>\n  * @return {eg.MovableCoord} An instance of a module itself<ko>모듈 자신의 인스턴스</ko>\n  */\n\n\n\tMovableCoord.prototype.unbind = function unbind(element) {\n\t\tthis._hammerManager.remove(element);\n\t\treturn this;\n\t};\n\n\t/**\n  * get a hammer instance from elements using the eg.MovableCoord module.\n  * @ko eg.MovableCoord 모듈을 사용하는 엘리먼트에서 hammer 객체를 얻는다\n  * @param {HTMLElement|String|jQuery} element An element from which the eg.MovableCoord module is using<ko>eg.MovableCoord 모듈을 사용하는 엘리먼트</ko>\n  * @return {external:Hammer|null} An instance of Hammer.JS<ko>Hammer.JS의 인스턴스</ko>\n  */\n\n\n\tMovableCoord.prototype.getHammer = function getHammer(element) {\n\t\treturn this._hammerManager.getHammer(element);\n\t};\n\n\t/**\n  * Enables input devices\n  * @ko 입력 장치를 사용할 수 있게 한다\n  * @param {HTMLElement|String|jQuery} [element] An element from which the eg.MovableCoord module is using (if the element parameter is not present, it applies to all binded elements)<ko>eg.MovableCoord 모듈을 \t사용하는 엘리먼트 (element 파라미터가 존재하지 않을 경우, 바인드된 모든 엘리먼트에 적용된다)</ko>\n  * @return {eg.MovableCoord} An instance of a module itself <ko>자신의 인스턴스</ko>\n */\n\n\n\tMovableCoord.prototype.enableInput = function enableInput(element) {\n\t\treturn this._hammerManager.inputControl(true, element);\n\t};\n\n\t/**\n  * Disables input devices\n  * @ko 입력 장치를 사용할 수 없게 한다.\n  * @param {HTMLElement|String|jQuery} [element] An element from which the eg.MovableCoord module is using (if the element parameter is not present, it applies to all binded elements)<<ko>eg.MovableCoord 모듈을 \t사용하는 엘리먼트 (element 파라미터가 존재하지 않을 경우, 바인드된 모든 엘리먼트에 적용된다)</ko>\n  * @return {eg.MovableCoord} An instance of a module itself <ko>자신의 인스턴스</ko>\n  */\n\n\n\tMovableCoord.prototype.disableInput = function disableInput(element) {\n\t\treturn this._hammerManager.inputControl(false, element);\n\t};\n\n\t/**\n  * set up 'css' expression\n  * @private\n  */\n\n\n\tMovableCoord.prototype._reviseOptions = function _reviseOptions() {\n\t\tvar _this2 = this;\n\n\t\tvar key = void 0;\n\n\t\t[\"bounce\", \"margin\", \"circular\"].forEach(function (v) {\n\t\t\tkey = _this2.options[v];\n\t\t\tif (key != null) {\n\t\t\t\tif (key.constructor === Array) {\n\t\t\t\t\t_this2.options[v] = key.length === 2 ? key.concat(key) : key.concat();\n\t\t\t\t} else if (/string|number|boolean/.test(typeof key === \"undefined\" ? \"undefined\" : _typeof(key))) {\n\t\t\t\t\t_this2.options[v] = [key, key, key, key];\n\t\t\t\t} else {\n\t\t\t\t\t_this2.options[v] = null;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\t/**\n  * Returns the current position of the logical coordinates.\n  * @ko 논리적 좌표의 현재 위치를 반환한다\n  * @return {Array} pos <ko>좌표</ko>\n  * @return {Number} pos.0 The X coordinate <ko>x 좌표</ko>\n  * @return {Number} pos.1 The Y coordinate <ko>y 좌표</ko>\n  */\n\n\n\tMovableCoord.prototype.get = function get() {\n\t\treturn this._pos.concat();\n\t};\n\n\t/**\n  * Destroys elements, properties, and events used in a module.\n  * @ko 모듈에 사용한 엘리먼트와 속성, 이벤트를 해제한다.\n  */\n\n\n\tMovableCoord.prototype.destroy = function destroy() {\n\t\tthis.off();\n\t\tthis._hammerManager.destroy();\n\t};\n\n\treturn MovableCoord;\n}((0, _utils.Mixin)(_component2.default).with(_eventHandler2.default, _animationHandler2.default));\n\n_extends(MovableCoord, _consts.DIRECTION);\nexports.default = MovableCoord;\nmodule.exports = exports[\"default\"];\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _hammerjs = __webpack_require__(10);\n\nvar _hammerjs2 = _interopRequireDefault(_hammerjs);\n\nvar _utils = __webpack_require__(3);\n\nvar _consts = __webpack_require__(0);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Hammer helps you add support for touch gestures to your page\n *\n * @external Hammer\n * @see {@link http://hammerjs.github.io|Hammer.JS}\n * @see {@link http://hammerjs.github.io/jsdoc/Hammer.html|Hammer.JS API documents}\n * @see Hammer.JS applies specific CSS properties by {@link http://hammerjs.github.io/jsdoc/Hammer.defaults.cssProps.html|default} when creating an instance. The eg.MovableCoord module removes all default CSS properties provided by Hammer.JS\n */\nif (typeof _hammerjs2.default === \"undefined\") {\n\tthrow new Error(\"The Hammerjs must be loaded before eg.MovableCoord.\\nhttp://hammerjs.github.io/\");\n}\n\nvar HammerManager = function () {\n\tfunction HammerManager() {\n\t\t_classCallCheck(this, HammerManager);\n\n\t\tthis._hammers = {};\n\t}\n\n\tHammerManager.createHammer = function createHammer(el, bindOptions, inputClass, handler) {\n\t\ttry {\n\t\t\t// create Hammer\n\t\t\treturn HammerManager.attachHammerEvents(new _hammerjs2.default.Manager(el, {\n\t\t\t\trecognizers: [[_hammerjs2.default.Pan, {\n\t\t\t\t\tdirection: bindOptions.direction,\n\t\t\t\t\tthreshold: 0\n\t\t\t\t}]],\n\n\t\t\t\t// css properties were removed due to usablility issue\n\t\t\t\t// http://hammerjs.github.io/jsdoc/Hammer.defaults.cssProps.html\n\t\t\t\tcssProps: {\n\t\t\t\t\tuserSelect: \"none\",\n\t\t\t\t\ttouchSelect: \"none\",\n\t\t\t\t\ttouchCallout: \"none\",\n\t\t\t\t\tuserDrag: \"none\"\n\t\t\t\t},\n\t\t\t\tinputClass: inputClass\n\t\t\t}), bindOptions, handler);\n\t\t} catch (e) {\n\t\t\treturn null;\n\t\t}\n\t};\n\n\tHammerManager.attachHammerEvents = function attachHammerEvents(hammer, options, handler) {\n\t\tvar enable = hammer.get(\"pan\").options.enable;\n\n\t\t/* eslint-disable no-underscore-dangle */\n\t\treturn hammer.on(\"hammer.input\", function (e) {\n\t\t\tif (e.isFirst) {\n\t\t\t\t// apply options each\n\t\t\t\thandler._setCurrentTarget(hammer, options);\n\t\t\t\tenable && handler._start(e);\n\t\t\t} else if (e.isFinal) {\n\t\t\t\t// substitute .on(\"panend tap\", this._panend); Because it(tap, panend) cannot catch vertical(horizontal) movement on HORIZONTAL(VERTICAL) mode.\n\t\t\t\tenable && handler._end(e);\n\t\t\t}\n\t\t}).on(\"panstart panmove\", function (e) {\n\t\t\treturn handler._move(e);\n\t\t});\n\t\t/* eslint-enable no-underscore-dangle */\n\t};\n\n\tHammerManager.detachHammerEvents = function detachHammerEvents(hammer) {\n\t\thammer.off(\"hammer.input panstart panmove panend\");\n\t};\n\n\tHammerManager.convertInputType = function convertInputType() {\n\t\tvar inputType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n\t\tvar hasTouch = false;\n\t\tvar hasMouse = false;\n\t\tvar inputs = inputType || [];\n\n\t\tinputs.forEach(function (v) {\n\t\t\tswitch (v) {\n\t\t\t\tcase \"mouse\":\n\t\t\t\t\thasMouse = true;break;\n\t\t\t\tcase \"touch\":\n\t\t\t\t\thasTouch = _consts.SUPPORT_TOUCH;\n\t\t\t\t// no default\n\t\t\t}\n\t\t});\n\t\treturn hasTouch && _hammerjs2.default.TouchInput || hasMouse && _hammerjs2.default.MouseInput || null;\n\t};\n\n\tHammerManager.prototype.add = function add(element, options, handler) {\n\t\tvar el = (0, _utils.$)(element);\n\t\tvar keyValue = el.getAttribute(_consts.UNIQUEKEY);\n\t\tvar bindOptions = _extends({\n\t\t\tdirection: _consts.DIRECTION.DIRECTION_ALL,\n\t\t\tscale: [1, 1],\n\t\t\tthresholdAngle: 45,\n\t\t\tinterruptable: true,\n\t\t\tinputType: [\"touch\", \"mouse\"]\n\t\t}, options);\n\t\tvar inputClass = HammerManager.convertInputType(bindOptions.inputType);\n\n\t\tif (!inputClass) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (keyValue) {\n\t\t\tthis._hammers[keyValue].hammer.destroy();\n\t\t} else {\n\t\t\tkeyValue = Math.round(Math.random() * new Date().getTime());\n\t\t}\n\t\tthis._hammers[keyValue] = {\n\t\t\thammer: HammerManager.createHammer(el, bindOptions, inputClass, handler),\n\t\t\tel: el,\n\t\t\toptions: bindOptions\n\t\t};\n\t\tel.setAttribute(_consts.UNIQUEKEY, keyValue);\n\t};\n\n\tHammerManager.prototype.remove = function remove(element) {\n\t\tvar el = (0, _utils.$)(element);\n\t\tvar key = el.getAttribute(_consts.UNIQUEKEY);\n\n\t\tif (key) {\n\t\t\tvar hammer = this._hammers[key].hammer;\n\n\t\t\tHammerManager.detachHammerEvents(hammer);\n\t\t\thammer.destroy();\n\t\t\tdelete this._hammers[key];\n\t\t\tel.removeAttribute(_consts.UNIQUEKEY);\n\t\t}\n\t};\n\n\tHammerManager.prototype.getHammer = function getHammer(element) {\n\t\tvar data = this.get(element);\n\n\t\treturn data ? data.hammer : null;\n\t};\n\n\tHammerManager.prototype.get = function get(element) {\n\t\tvar el = (0, _utils.$)(element);\n\t\tvar key = el ? el.getAttribute(_consts.UNIQUEKEY) : null;\n\n\t\tif (key && this._hammers[key]) {\n\t\t\treturn this._hammers[key];\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t};\n\n\tHammerManager.prototype.inputControl = function inputControl(isEnable, element) {\n\t\tvar option = {\n\t\t\tenable: isEnable\n\t\t};\n\n\t\tif (element) {\n\t\t\tvar hammer = this.getHammer(element);\n\n\t\t\thammer && hammer.get(\"pan\").set(option);\n\t\t} else {\n\t\t\t// for multi\n\t\t\tfor (var p in this._hammers) {\n\t\t\t\tthis._hammers[p].hammer.get(\"pan\").set(option);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t};\n\n\tHammerManager.prototype.destroy = function destroy() {\n\t\tfor (var p in this._hammers) {\n\t\t\tthis.remove(this._hammers[p].el);\n\t\t}\n\t\tthis._hammers = {};\n\t};\n\n\treturn HammerManager;\n}();\n\nexports.default = HammerManager;\nmodule.exports = exports[\"default\"];\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _Coordinate = __webpack_require__(2);\n\nvar _Coordinate2 = _interopRequireDefault(_Coordinate);\n\nvar _browser = __webpack_require__(1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nexports.default = function (superclass) {\n\treturn function (_superclass) {\n\t\t_inherits(_class, _superclass);\n\n\t\tfunction _class() {\n\t\t\t_classCallCheck(this, _class);\n\n\t\t\tvar _this = _possibleConstructorReturn(this, _superclass.call(this));\n\n\t\t\t_this._raf = null;\n\t\t\t_this._animateParam = null;\n\t\t\t_this._animationEnd = _this._animationEnd.bind(_this); // for caching\n\t\t\t_this._restore = _this._restore.bind(_this); // for caching\n\t\t\treturn _this;\n\t\t}\n\n\t\t_class.prototype._grab = function _grab(min, max, circular) {\n\t\t\tif (this._animateParam) {\n\t\t\t\tthis.trigger(\"animationEnd\");\n\t\t\t\tvar orgPos = this.get();\n\n\t\t\t\tvar pos = _Coordinate2.default.getCircularPos(this.get(), min, max, circular);\n\n\t\t\t\tif (pos[0] !== orgPos[0] || pos[1] !== orgPos[1]) {\n\t\t\t\t\tthis._setPosAndTriggerChange(pos, true);\n\t\t\t\t}\n\t\t\t\tthis._animateParam = null;\n\t\t\t\tthis._raf && _browser.window.cancelAnimationFrame(this._raf);\n\t\t\t\tthis._raf = null;\n\t\t\t}\n\t\t};\n\n\t\t_class.prototype._prepareParam = function _prepareParam(absPos, duration, hammerEvent) {\n\t\t\tvar pos = this.get();\n\t\t\tvar min = this.options.min;\n\t\t\tvar max = this.options.max;\n\t\t\tvar circular = this.options.circular;\n\t\t\tvar maximumDuration = this.options.maximumDuration;\n\t\t\tvar destPos = _Coordinate2.default.getPointOfIntersection(pos, absPos, min, max, circular, this.options.bounce);\n\n\t\t\tdestPos = _Coordinate2.default.isOutToOut(pos, destPos, min, max) ? pos : destPos;\n\n\t\t\tvar distance = [Math.abs(destPos[0] - pos[0]), Math.abs(destPos[1] - pos[1])];\n\t\t\tvar newDuration = duration == null ? _Coordinate2.default.getDurationFromPos(distance, this.options.deceleration) : duration;\n\n\t\t\tnewDuration = maximumDuration > newDuration ? newDuration : maximumDuration;\n\t\t\treturn {\n\t\t\t\tdepaPos: pos.concat(),\n\t\t\t\tdestPos: destPos.concat(),\n\t\t\t\tisBounce: _Coordinate2.default.isOutside(destPos, min, max),\n\t\t\t\tisCircular: _Coordinate2.default.isCircular(absPos, min, max, circular),\n\t\t\t\tduration: newDuration,\n\t\t\t\tdistance: distance,\n\t\t\t\thammerEvent: hammerEvent || null,\n\t\t\t\tdone: this._animationEnd\n\t\t\t};\n\t\t};\n\n\t\t_class.prototype._restore = function _restore(complete, hammerEvent) {\n\t\t\tvar pos = this.get();\n\t\t\tvar min = this.options.min;\n\t\t\tvar max = this.options.max;\n\n\t\t\tthis._animate(this._prepareParam([Math.min(max[0], Math.max(min[0], pos[0])), Math.min(max[1], Math.max(min[1], pos[1]))], null, hammerEvent), complete);\n\t\t};\n\n\t\t_class.prototype._animationEnd = function _animationEnd() {\n\t\t\tthis._animateParam = null;\n\t\t\tvar orgPos = this.get();\n\t\t\tvar nextPos = _Coordinate2.default.getCircularPos([Math.round(orgPos[0]), Math.round(orgPos[1])], this.options.min, this.options.max, this.options.circular);\n\n\t\t\tthis.setTo.apply(this, nextPos);\n\t\t\tthis._setInterrupt(false);\n\t\t\t/**\n    * This event is fired when animation ends.\n    * @ko 에니메이션이 끝났을 때 발생한다.\n    * @name eg.MovableCoord#animationEnd\n    * @event\n    */\n\t\t\tthis.trigger(\"animationEnd\");\n\t\t};\n\n\t\t_class.prototype._animate = function _animate(param, complete) {\n\t\t\tthis._animateParam = _extends({}, param);\n\t\t\tthis._animateParam.startTime = new Date().getTime();\n\t\t\tif (param.duration) {\n\t\t\t\tvar info = this._animateParam;\n\t\t\t\tvar self = this;\n\n\t\t\t\t(function loop() {\n\t\t\t\t\t/* eslint-disable no-underscore-dangle */\n\t\t\t\t\tself._raf = null;\n\t\t\t\t\tif (self._frame(info) >= 1) {\n\t\t\t\t\t\t// deferred.resolve();\n\t\t\t\t\t\tcomplete();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} // animationEnd\n\t\t\t\t\tself._raf = _browser.window.requestAnimationFrame(loop);\n\t\t\t\t\t/* eslint-enable no-underscore-dangle */\n\t\t\t\t})();\n\t\t\t} else {\n\t\t\t\tthis._setPosAndTriggerChange(param.destPos, false);\n\t\t\t\tcomplete();\n\t\t\t}\n\t\t};\n\n\t\t_class.prototype._animateTo = function _animateTo(absPos, duration, hammerEvent) {\n\t\t\tvar _this2 = this;\n\n\t\t\tvar param = this._prepareParam(absPos, duration, hammerEvent);\n\t\t\tvar retTrigger = this.trigger(\"animationStart\", param);\n\n\t\t\t// You can't stop the 'animationStart' event when 'circular' is true.\n\t\t\tif (param.isCircular && !retTrigger) {\n\t\t\t\tthrow new Error(\"You can't stop the 'animation' event when 'circular' is true.\");\n\t\t\t}\n\n\t\t\tif (retTrigger) {\n\t\t\t\tvar queue = [];\n\t\t\t\tvar dequeue = function dequeue() {\n\t\t\t\t\tvar task = queue.shift();\n\n\t\t\t\t\ttask && task.call(this);\n\t\t\t\t};\n\n\t\t\t\tif (param.depaPos[0] !== param.destPos[0] || param.depaPos[1] !== param.destPos[1]) {\n\t\t\t\t\tqueue.push(function () {\n\t\t\t\t\t\treturn _this2._animate(param, dequeue);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tif (_Coordinate2.default.isOutside(param.destPos, this.options.min, this.options.max)) {\n\t\t\t\t\tqueue.push(function () {\n\t\t\t\t\t\treturn _this2._restore(dequeue, hammerEvent);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tqueue.push(function () {\n\t\t\t\t\treturn _this2._animationEnd();\n\t\t\t\t});\n\t\t\t\tdequeue();\n\t\t\t}\n\t\t};\n\n\t\t// animation frame (0~1)\n\n\n\t\t_class.prototype._frame = function _frame(param) {\n\t\t\tvar curTime = new Date() - param.startTime;\n\t\t\tvar easingPer = this._easing(curTime / param.duration);\n\t\t\tvar pos = [param.depaPos[0], param.depaPos[1]];\n\n\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\tpos[i] !== param.destPos[i] && (pos[i] += (param.destPos[i] - pos[i]) * easingPer);\n\t\t\t}\n\t\t\tpos = _Coordinate2.default.getCircularPos(pos, this.options.min, this.options.max, this.options.circular);\n\t\t\tthis._setPosAndTriggerChange(pos, false);\n\t\t\treturn easingPer;\n\t\t};\n\n\t\t// trigger 'change' event\n\n\n\t\t_class.prototype._setPosAndTriggerChange = function _setPosAndTriggerChange(position, holding, e) {\n\t\t\t/**\n    * This event is fired when coordinate changes.\n    * @ko 좌표가 변경됐을 때 발생하는 이벤트\n    * @name eg.MovableCoord#change\n    * @event\n    *\n    * @param {Object} param The object of data to be sent when the event is fired <ko>이벤트가 발생할 때 전달되는 데이터 객체</ko>\n    * @param {Array} param.position departure coordinate  <ko>좌표</ko>\n    * @param {Number} param.position.0 The X coordinate <ko>x 좌표</ko>\n    * @param {Number} param.pos.1 The Y coordinate <ko>y 좌표</ko>\n    * @param {Boolean} param.holding Indicates whether a user holds an element on the screen of the device.<ko>사용자가 기기의 화면을 누르고 있는지 여부</ko>\n    * @param {Object} param.hammerEvent The event information of Hammer.JS. It returns null if the event is fired through a call to the setTo() or setBy() method.<ko>Hammer.JS의 이벤트 정보. setTo() 메서드나 setBy() 메서드를 호출해 이벤트가 발생했을 때는 'null'을 반환한다.</ko>\n    *\n    */\n\t\t\tthis._pos = position.concat();\n\t\t\tthis.trigger(\"change\", {\n\t\t\t\tpos: position.concat(),\n\t\t\t\tholding: holding,\n\t\t\t\thammerEvent: e || null\n\t\t\t});\n\t\t};\n\n\t\t_class.prototype._easing = function _easing(p) {\n\t\t\treturn p > 1 ? 1 : this.options.easing(p);\n\t\t};\n\n\t\t/**\n   * Moves an element to specific coordinates.\n   * @ko 좌표를 이동한다.\n   * @method eg.MovableCoord#setTo\n   * @param {Number} x The X coordinate to move to <ko>이동할 x좌표</ko>\n   * @param {Number} y The Y coordinate to move to  <ko>이동할 y좌표</ko>\n   * @param {Number} [duration=0] Duration of the animation (unit: ms) <ko>애니메이션 진행 시간(단위: ms)</ko>\n   * @return {eg.MovableCoord} An instance of a module itself <ko>자신의 인스턴스</ko>\n   */\n\n\n\t\t_class.prototype.setTo = function setTo(x, y) {\n\t\t\tvar duration = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n\t\t\tvar toX = x;\n\t\t\tvar toY = y;\n\t\t\tvar min = this.options.min;\n\t\t\tvar max = this.options.max;\n\t\t\tvar circular = this.options.circular;\n\n\t\t\tthis._grab(min, max, circular);\n\t\t\tvar pos = this.get();\n\n\t\t\tif (x === pos[0] && y === pos[1]) {\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tthis._setInterrupt(true);\n\t\t\tif (x !== pos[0]) {\n\t\t\t\tif (!circular[3]) {\n\t\t\t\t\ttoX = Math.max(min[0], toX);\n\t\t\t\t}\n\t\t\t\tif (!circular[1]) {\n\t\t\t\t\ttoX = Math.min(max[0], toX);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (y !== pos[1]) {\n\t\t\t\tif (!circular[0]) {\n\t\t\t\t\ttoY = Math.max(min[1], toY);\n\t\t\t\t}\n\t\t\t\tif (!circular[2]) {\n\t\t\t\t\ttoY = Math.min(max[1], toY);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (duration) {\n\t\t\t\tthis._animateTo([toX, toY], duration);\n\t\t\t} else {\n\t\t\t\tthis._pos = _Coordinate2.default.getCircularPos([toX, toY], min, max, circular);\n\t\t\t\tthis._setPosAndTriggerChange(this._pos, false);\n\t\t\t\tthis._setInterrupt(false);\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n   * Moves an element from the current coordinates to specific coordinates. The change event is fired when the method is executed.\n   * @ko 현재 좌표를 기준으로 좌표를 이동한다. 메서드가 실행되면 change 이벤트가 발생한다\n   * @method eg.MovableCoord#setBy\n   * @param {Number} x The X coordinate to move to <ko>이동할 x좌표</ko>\n   * @param {Number} y The Y coordinate to move to <ko>이동할 y좌표</ko>\n   * @param {Number} [duration=0] Duration of the animation (unit: ms) <ko>애니메이션 진행 시간(단위: ms)</ko>\n   * @return {eg.MovableCoord} An instance of a module itself <ko>자신의 인스턴스</ko>\n   */\n\n\n\t\t_class.prototype.setBy = function setBy(x, y) {\n\t\t\tvar duration = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n\t\t\treturn this.setTo(x != null ? this._pos[0] + x : this._pos[0], y != null ? this._pos[1] + y : this._pos[1], duration);\n\t\t};\n\n\t\treturn _class;\n\t}(superclass);\n};\n\nmodule.exports = exports[\"default\"];\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _Coordinate = __webpack_require__(2);\n\nvar _Coordinate2 = _interopRequireDefault(_Coordinate);\n\nvar _consts = __webpack_require__(0);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nexports.default = function (superclass) {\n\treturn function (_superclass) {\n\t\t_inherits(_class, _superclass);\n\n\t\tfunction _class() {\n\t\t\t_classCallCheck(this, _class);\n\n\t\t\tvar _this = _possibleConstructorReturn(this, _superclass.call(this));\n\n\t\t\t_this._status = {\n\t\t\t\tgrabOutside: false, // check whether user's action started on outside\n\t\t\t\tcurrentHammer: null, // current hammer instance\n\t\t\t\tcurrentOptions: {}, // current bind options\n\t\t\t\tmoveDistance: null, // a position of the first user's action\n\t\t\t\tprevented: false };\n\t\t\treturn _this;\n\t\t}\n\n\t\t_class.prototype._setCurrentTarget = function _setCurrentTarget(hammer, options) {\n\t\t\tthis._status.currentOptions = options;\n\t\t\tthis._status.currentHanmmer = hammer;\n\t\t};\n\n\t\t// panstart event handler\n\n\n\t\t_class.prototype._start = function _start(e) {\n\t\t\tif (!this._status.currentOptions.interruptable && this._status.prevented) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar pos = this.get();\n\t\t\tvar min = this.options.min;\n\t\t\tvar max = this.options.max;\n\n\t\t\tthis._setInterrupt(true);\n\t\t\tthis._grab(min, max, this.options.circular);\n\t\t\t/**\n    * This event is fired when a user holds an element on the screen of the device.\n    * @ko 사용자가 기기의 화면에 손을 대고 있을 때 발생하는 이벤트\n    * @event eg.MovableCoord#hold\n    * @param {Object} param The object of data to be sent when the event is fired<ko>이벤트가 발생할 때 전달되는 데이터 객체</ko>\n    * @param {Array} param.pos coordinate <ko>좌표 정보</ko>\n    * @param {Number} param.pos.0 The X coordinate<ko>x 좌표</ko>\n    * @param {Number} param.pos.1 The Y coordinate<ko>y 좌표</ko>\n    * @param {Object} param.hammerEvent The event information of Hammer.JS. It returns null if the event is fired through a call to the setTo() or setBy() method.<ko>Hammer.JS의 이벤트 정보. setTo() 메서드나 setBy() 메서드를 호출해 이벤트가 발생했을 때는 'null'을 반환한다.</ko>\n    *\n    */\n\t\t\tthis.trigger(\"hold\", {\n\t\t\t\tpos: pos.concat(),\n\t\t\t\thammerEvent: e\n\t\t\t});\n\n\t\t\tthis._status.moveDistance = pos.concat();\n\t\t\tthis._status.grabOutside = _Coordinate2.default.isOutside(pos, min, max);\n\t\t};\n\n\t\t// panmove event handler\n\n\n\t\t_class.prototype._move = function _move(e) {\n\t\t\tif (!this._isInterrupting() || !this._status.moveDistance) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar pos = this.get(true);\n\t\t\tvar min = this.options.min;\n\t\t\tvar max = this.options.max;\n\t\t\tvar bounce = this.options.bounce;\n\t\t\tvar margin = this.options.margin;\n\t\t\tvar currentOptions = this._status.currentOptions;\n\t\t\tvar direction = currentOptions.direction;\n\t\t\tvar scale = currentOptions.scale;\n\t\t\tvar userDirection = _Coordinate2.default.getDirectionByAngle(e.angle, currentOptions.thresholdAngle);\n\t\t\tvar out = [margin[0] + bounce[0], margin[1] + bounce[1], margin[2] + bounce[2], margin[3] + bounce[3]];\n\t\t\tvar prevent = false;\n\n\t\t\t// not support offset properties in Hammerjs - start\n\t\t\tvar prevInput = this._status.currentHanmmer.session.prevInput;\n\n\t\t\t/* eslint-disable no-param-reassign */\n\t\t\tif (prevInput) {\n\t\t\t\te.offsetX = e.deltaX - prevInput.deltaX;\n\t\t\t\te.offsetY = e.deltaY - prevInput.deltaY;\n\t\t\t} else {\n\t\t\t\te.offsetX = 0;\n\t\t\t\te.offsetY = 0;\n\t\t\t}\n\n\t\t\t// not support offset properties in Hammerjs - end\n\t\t\tif (_Coordinate2.default.isHorizontal(direction, userDirection)) {\n\t\t\t\tthis._status.moveDistance[0] += e.offsetX * scale[0];\n\t\t\t\tprevent = true;\n\t\t\t}\n\t\t\tif (_Coordinate2.default.isVertical(direction, userDirection)) {\n\t\t\t\tthis._status.moveDistance[1] += e.offsetY * scale[1];\n\t\t\t\tprevent = true;\n\t\t\t}\n\t\t\tif (prevent) {\n\t\t\t\te.srcEvent.preventDefault();\n\t\t\t\te.srcEvent.stopPropagation();\n\t\t\t}\n\t\t\te.preventSystemEvent = prevent;\n\t\t\t/* eslint-enable no-param-reassign */\n\n\t\t\tpos[0] = this._status.moveDistance[0];\n\t\t\tpos[1] = this._status.moveDistance[1];\n\t\t\tpos = _Coordinate2.default.getCircularPos(pos, min, max, this.options.circular);\n\n\t\t\t// from outside to inside\n\t\t\tif (this._status.grabOutside && !_Coordinate2.default.isOutside(pos, min, max)) {\n\t\t\t\tthis._status.grabOutside = false;\n\t\t\t}\n\n\t\t\t// when move pointer is held in outside\n\t\t\tvar tv = void 0;\n\t\t\tvar tn = void 0;\n\t\t\tvar tx = void 0;\n\n\t\t\tif (this._status.grabOutside) {\n\t\t\t\ttn = min[0] - out[3];\n\t\t\t\ttx = max[0] + out[1];\n\t\t\t\ttv = pos[0];\n\t\t\t\t/* eslint-disable no-nested-ternary */\n\t\t\t\tpos[0] = tv > tx ? tx : tv < tn ? tn : tv;\n\t\t\t\ttn = min[1] - out[0];\n\t\t\t\ttx = max[1] + out[2];\n\t\t\t\ttv = pos[1];\n\t\t\t\tpos[1] = tv > tx ? tx : tv < tn ? tn : tv;\n\t\t\t\t/* eslint-enable no-nested-ternary */\n\t\t\t} else {\n\t\t\t\t// when start pointer is held in inside\n\t\t\t\t// get a initialization slope value to prevent smooth animation.\n\t\t\t\tvar initSlope = this._easing(0.00001) / 0.00001;\n\n\t\t\t\tif (pos[1] < min[1]) {\n\t\t\t\t\t// up\n\t\t\t\t\ttv = (min[1] - pos[1]) / (out[0] * initSlope);\n\t\t\t\t\tpos[1] = min[1] - this._easing(tv) * out[0];\n\t\t\t\t} else if (pos[1] > max[1]) {\n\t\t\t\t\t// down\n\t\t\t\t\ttv = (pos[1] - max[1]) / (out[2] * initSlope);\n\t\t\t\t\tpos[1] = max[1] + this._easing(tv) * out[2];\n\t\t\t\t}\n\t\t\t\tif (pos[0] < min[0]) {\n\t\t\t\t\t// left\n\t\t\t\t\ttv = (min[0] - pos[0]) / (out[3] * initSlope);\n\t\t\t\t\tpos[0] = min[0] - this._easing(tv) * out[3];\n\t\t\t\t} else if (pos[0] > max[0]) {\n\t\t\t\t\t// right\n\t\t\t\t\ttv = (pos[0] - max[0]) / (out[1] * initSlope);\n\t\t\t\t\tpos[0] = max[0] + this._easing(tv) * out[1];\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._setPosAndTriggerChange(pos, true, e);\n\t\t};\n\n\t\t// panend event handler\n\n\n\t\t_class.prototype._end = function _end(e) {\n\t\t\tvar pos = this.get();\n\n\t\t\tif (!this._isInterrupting() || !this._status.moveDistance) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Abort the animating post process when \"tap\" occurs\n\t\t\tif (e.distance === 0 /* e.type === \"tap\" */) {\n\t\t\t\t\tthis._setInterrupt(false);\n\t\t\t\t\tthis.trigger(\"release\", {\n\t\t\t\t\t\tdepaPos: pos.concat(),\n\t\t\t\t\t\tdestPos: pos.concat(),\n\t\t\t\t\t\thammerEvent: e || null\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\tvar direction = this._status.currentOptions.direction;\n\t\t\t\tvar scale = this._status.currentOptions.scale;\n\t\t\t\tvar vX = Math.abs(e.velocityX);\n\t\t\t\tvar vY = Math.abs(e.velocityY);\n\n\t\t\t\t!(direction & _consts.DIRECTION.DIRECTION_HORIZONTAL) && (vX = 0);\n\t\t\t\t!(direction & _consts.DIRECTION.DIRECTION_VERTICAL) && (vY = 0);\n\n\t\t\t\tvar offset = _Coordinate2.default.getNextOffsetPos([vX * (e.deltaX < 0 ? -1 : 1) * scale[0], vY * (e.deltaY < 0 ? -1 : 1) * scale[1]], this.options.deceleration);\n\t\t\t\tvar destPos = [pos[0] + offset[0], pos[1] + offset[1]];\n\n\t\t\t\tdestPos = _Coordinate2.default.getPointOfIntersection(pos, destPos, this.options.min, this.options.max, this.options.circular, this.options.bounce);\n\t\t\t\t/**\n     * This event is fired when a user release an element on the screen of the device.\n     * @ko 사용자가 기기의 화면에서 손을 뗐을 때 발생하는 이벤트\n     * @event eg.MovableCoord#release\n     *\n     * @param {Object} param The object of data to be sent when the event is fired<ko>이벤트가 발생할 때 전달되는 데이터 객체</ko>\n     * @param {Array} param.depaPos The coordinates when releasing an element<ko>손을 뗐을 때의 좌표현재 </ko>\n     * @param {Number} param.depaPos.0 The X coordinate <ko> x 좌표</ko>\n     * @param {Number} param.depaPos.1 The Y coordinate <ko> y 좌표</ko>\n     * @param {Array} param.destPos The coordinates to move to after releasing an element<ko>손을 뗀 뒤에 이동할 좌표</ko>\n     * @param {Number} param.destPos.0 The X coordinate <ko>x 좌표</ko>\n     * @param {Number} param.destPos.1 The Y coordinate <ko>y 좌표</ko>\n     * @param {Object} param.hammerEvent The event information of Hammer.JS. It returns null if the event is fired through a call to the setTo() or setBy() method.<ko>Hammer.JS의 이벤트 정보. setTo() 메서드나 setBy() 메서드를 호출해 이벤트가 발생했을 때는 'null'을 반환한다</ko>\n     *\n     */\n\t\t\t\tthis.trigger(\"release\", {\n\t\t\t\t\tdepaPos: pos.concat(),\n\t\t\t\t\tdestPos: destPos,\n\t\t\t\t\thammerEvent: e || null\n\t\t\t\t});\n\t\t\t\tif (pos[0] !== destPos[0] || pos[1] !== destPos[1]) {\n\t\t\t\t\tthis._animateTo(destPos, null, e || null);\n\t\t\t\t} else {\n\t\t\t\t\tthis._setInterrupt(false);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._status.moveDistance = null;\n\t\t};\n\n\t\t_class.prototype._isInterrupting = function _isInterrupting() {\n\t\t\t// when interruptable is 'true', return value is always 'true'.\n\t\t\treturn this._status.currentOptions.interruptable || this._status.prevented;\n\t\t};\n\n\t\t_class.prototype._setInterrupt = function _setInterrupt(prevented) {\n\t\t\t!this._status.currentOptions.interruptable && (this._status.prevented = prevented);\n\t\t};\n\n\t\treturn _class;\n\t}(superclass);\n};\n\nmodule.exports = exports[\"default\"];\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _MovableCoord = __webpack_require__(4);\n\nvar _MovableCoord2 = _interopRequireDefault(_MovableCoord);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_MovableCoord2.default.VERSION = \"2.0.0-rc.2\";\nmodule.exports = _MovableCoord2.default;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_9__;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_10__;\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=movablecoord.js.map\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.7';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n        if (handler === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    var prop;\n    each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) {\n        manager.oldCssProps = {};\n    }\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (true) {\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n        return Hammer;\n    }.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// js/bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d5b34ea2da3373461da3","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Component\"] = factory();\n\telse\n\t\troot[\"eg\"] = root[\"eg\"] || {}, root[\"eg\"][\"Component\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\n/**\n * A class used to manage events and options in a component\n * @class\n * @group egjs\n * @name eg.Component\n * @ko 컴포넌트의 이벤트와 옵션을 관리할 수 있게 하는 클래스\n *\n * @support {\"ie\": \"7+\", \"ch\" : \"latest\", \"ff\" : \"latest\",  \"sf\" : \"latest\", \"edge\" : \"latest\", \"ios\" : \"7+\", \"an\" : \"2.1+ (except 3.x)\"}\n */\nvar Component = exports.Component = function () {\n\tfunction Component() {\n\t\t_classCallCheck(this, Component);\n\n\t\tthis._eventHandler = {};\n\t\tthis.options = {};\n\t}\n\n\t/**\n  * Sets options in a component or returns them.\n  * @ko 컴포넌트에 옵션을 설정하거나 옵션을 반환한다\n  * @method eg.Component#option\n  * @param {String} key The key of the option<ko>옵션의 키</ko>\n  * @param {Object} [value] The option value that corresponds to a given key <ko>키에 해당하는 옵션값</ko>\n  * @return {eg.Component|Object} An instance, an option value, or an option object of a component itself.<br>- If both key and value are used to set an option, it returns an instance of a component itself.<br>- If only a key is specified for the parameter, it returns the option value corresponding to a given key.<br>- If nothing is specified, it returns an option object. <ko>컴포넌트 자신의 인스턴스나 옵션값, 옵션 객체.<br>- 키와 값으로 옵션을 설정하면 컴포넌트 자신의 인스턴스를 반환한다.<br>- 파라미터에 키만 설정하면 키에 해당하는 옵션값을 반환한다.<br>- 파라미터에 아무것도 설정하지 않으면 옵션 객체를 반환한다.</ko>\n  * @example\n \t class Some extends eg.Component{\n \t\t}\n \t const some = new Some({\n \t\t\"foo\": 1,\n \t\t\"bar\": 2\n \t});\n \t some.option(\"foo\"); // return 1\n  some.option(\"foo\",3); // return some instance\n  some.option(); // return options object.\n  some.option({\n \t\t\"foo\" : 10,\n \t\t\"bar\" : 20,\n \t\t\"baz\" : 30\n \t}); // return some instance.\n  */\n\n\n\t_createClass(Component, [{\n\t\tkey: \"option\",\n\t\tvalue: function option() {\n\t\t\tif (arguments.length >= 2) {\n\t\t\t\tvar _key = arguments.length <= 0 ? undefined : arguments[0];\n\t\t\t\tvar value = arguments.length <= 1 ? undefined : arguments[1];\n\t\t\t\tthis.options[_key] = value;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tvar key = arguments.length <= 0 ? undefined : arguments[0];\n\t\t\tif (typeof key === \"string\") {\n\t\t\t\treturn this.options[key];\n\t\t\t}\n\n\t\t\tif (arguments.length === 0) {\n\t\t\t\treturn this.options;\n\t\t\t}\n\n\t\t\tvar options = key;\n\t\t\tthis.options = options;\n\n\t\t\treturn this;\n\t\t}\n\t\t/**\n   * Triggers a custom event.\n   * @ko 커스텀 이벤트를 발생시킨다\n   * @method eg.Component#trigger\n   * @param {String} eventName The name of the custom event to be triggered <ko>발생할 커스텀 이벤트의 이름</ko>\n   * @param {Object} customEvent Event data to be sent when triggering a custom event <ko>커스텀 이벤트가 발생할 때 전달할 데이터</ko>\n   * @return {Boolean} Indicates whether the event has occurred. If the stop() method is called by a custom event handler, it will return false and prevent the event from occurring. <ko>이벤트 발생 여부. 커스텀 이벤트 핸들러에서 stop() 메서드를 호출하면 'false'를 반환하고 이벤트 발생을 중단한다.</ko>\n   * @example\n   class Some extends eg.Component{\n  \t\tsome(){\n  \t\t\tthis.trigger(\"hi\");// fire hi event.\n  \t\t}\n  \t}\n   */\n\n\t}, {\n\t\tkey: \"trigger\",\n\t\tvalue: function trigger(eventName) {\n\t\t\tvar customEvent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\t\tvar handlerList = this._eventHandler[eventName] || [];\n\t\t\tvar hasHandlerList = handlerList.length > 0;\n\n\t\t\tif (!hasHandlerList) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// If detach method call in handler in first time then handeler list calls.\n\t\t\thandlerList = handlerList.concat();\n\n\t\t\tcustomEvent.eventType = eventName;\n\n\t\t\tvar isCanceled = false;\n\t\t\tvar arg = [customEvent];\n\t\t\tvar i = void 0;\n\n\t\t\tcustomEvent.stop = function () {\n\t\t\t\treturn isCanceled = true;\n\t\t\t};\n\n\t\t\tfor (var _len = arguments.length, restParam = Array(_len > 2 ? _len - 2 : 0), _key2 = 2; _key2 < _len; _key2++) {\n\t\t\t\trestParam[_key2 - 2] = arguments[_key2];\n\t\t\t}\n\n\t\t\tif (restParam.length >= 1) {\n\t\t\t\targ = arg.concat(restParam);\n\t\t\t}\n\n\t\t\tfor (i in handlerList) {\n\t\t\t\thandlerList[i].apply(this, arg);\n\t\t\t}\n\n\t\t\treturn !isCanceled;\n\t\t}\n\t\t/**\n   * Executed event just one time.\n   * @ko 이벤트가 한번만 실행된다.\n   * @method eg.Component#once\n   * @param {eventName} eventName The name of the event to be attached <ko>등록할 이벤트의 이름</ko>\n   * @param {Function} handlerToAttach The handler function of the event to be attached <ko>등록할 이벤트의 핸들러 함수</ko>\n   * @return {eg.Component} An instance of a component itself<ko>컴포넌트 자신의 인스턴스</ko>\n   * @example\n   class Some extends eg.Component{\n  \t\thi(){\n  \t\t\talert(\"hi\");\n  \t\t}\n  \t\tthing(){\n  \t\t\tthis.once(\"hi\", this.hi);\n  \t\t}\n  \t}\n  \t var some = new Some();\n   some.thing();\n   some.trigger(\"hi\");\n   // fire alert(\"hi\");\n   some.trigger(\"hi\");\n   // Nothing happens\n   */\n\n\t}, {\n\t\tkey: \"once\",\n\t\tvalue: function once(eventName, handlerToAttach) {\n\t\t\tif ((typeof eventName === \"undefined\" ? \"undefined\" : _typeof(eventName)) === \"object\" && typeof handlerToAttach === \"undefined\") {\n\t\t\t\tvar eventHash = eventName;\n\t\t\t\tvar i = void 0;\n\t\t\t\tfor (i in eventHash) {\n\t\t\t\t\tthis.once(i, eventHash[i]);\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t} else if (typeof eventName === \"string\" && typeof handlerToAttach === \"function\") {\n\t\t\t\tvar self = this;\n\t\t\t\tthis.on(eventName, function listener() {\n\t\t\t\t\tfor (var _len2 = arguments.length, arg = Array(_len2), _key3 = 0; _key3 < _len2; _key3++) {\n\t\t\t\t\t\targ[_key3] = arguments[_key3];\n\t\t\t\t\t}\n\n\t\t\t\t\thandlerToAttach.apply(self, arg);\n\t\t\t\t\tself.off(eventName, listener);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * Checks whether an event has been attached to a component.\n   * @ko 컴포넌트에 이벤트가 등록됐는지 확인한다.\n   * @method eg.Component#hasOn\n   * @param {String} eventName The name of the event to be attached <ko>등록 여부를 확인할 이벤트의 이름</ko>\n   * @return {Boolean} Indicates whether the event is attached. <ko>이벤트 등록 여부</ko>\n   * @example\n   class Some extends eg.Component{\n  \t\tsome(){\n  \t\t\tthis.hasOn(\"hi\");// check hi event.\n  \t\t}\n  \t}\n   */\n\n\t}, {\n\t\tkey: \"hasOn\",\n\t\tvalue: function hasOn(eventName) {\n\t\t\treturn !!this._eventHandler[eventName];\n\t\t}\n\n\t\t/**\n   * Attaches an event to a component.\n   * @ko 컴포넌트에 이벤트를 등록한다.\n   * @method eg.Component#on\n   * @param {eventName} eventName The name of the event to be attached <ko>등록할 이벤트의 이름</ko>\n   * @param {Function} handlerToAttach The handler function of the event to be attached <ko>등록할 이벤트의 핸들러 함수</ko>\n   * @return {eg.Component} An instance of a component itself<ko>컴포넌트 자신의 인스턴스</ko>\n   * @example\n   class Some extends eg.Component{\n   \t\thi(){\n  \t\t\tconsole.log(\"hi\");\n   \t\t}\n  \t\tsome(){\n  \t\t\tthis.on(\"hi\",this.hi); //attach event\n  \t\t}\n  \t}\n   */\n\n\t}, {\n\t\tkey: \"on\",\n\t\tvalue: function on(eventName, handlerToAttach) {\n\t\t\tif ((typeof eventName === \"undefined\" ? \"undefined\" : _typeof(eventName)) === \"object\" && typeof handlerToAttach === \"undefined\") {\n\t\t\t\tvar eventHash = eventName;\n\t\t\t\tvar name = void 0;\n\t\t\t\tfor (name in eventHash) {\n\t\t\t\t\tthis.on(name, eventHash[name]);\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t} else if (typeof eventName === \"string\" && typeof handlerToAttach === \"function\") {\n\t\t\t\tvar handlerList = this._eventHandler[eventName];\n\n\t\t\t\tif (typeof handlerList === \"undefined\") {\n\t\t\t\t\thandlerList = this._eventHandler[eventName] = [];\n\t\t\t\t}\n\n\t\t\t\thandlerList.push(handlerToAttach);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\t\t/**\n   * Detaches an event from the component.\n   * @ko 컴포넌트에 등록된 이벤트를 해제한다\n   * @method eg.Component#off\n   * @param {eventName} eventName The name of the event to be detached <ko>해제할 이벤트의 이름</ko>\n   * @param {Function} handlerToDetach The handler function of the event to be detached <ko>해제할 이벤트의 핸들러 함수</ko>\n   * @return {eg.Component} An instance of a component itself <ko>컴포넌트 자신의 인스턴스</ko>\n   * @example\n   class Some extends eg.Component{\n   \t\thi(){\n  \t\t\tconsole.log(\"hi\");\n   \t\t}\n  \t\tsome(){\n  \t\t\tthis.off(\"hi\",this.hi); //detach event\n  \t\t}\n  \t}\n   */\n\n\t}, {\n\t\tkey: \"off\",\n\t\tvalue: function off(eventName, handlerToDetach) {\n\t\t\t// All event detach.\n\t\t\tif (typeof eventName === \"undefined\") {\n\t\t\t\tthis._eventHandler = {};\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\t// All handler of specific event detach.\n\t\t\tif (typeof handlerToDetach === \"undefined\") {\n\t\t\t\tif (typeof eventName === \"string\") {\n\t\t\t\t\tthis._eventHandler[eventName] = undefined;\n\t\t\t\t\treturn this;\n\t\t\t\t} else {\n\t\t\t\t\tvar eventHash = eventName;\n\t\t\t\t\tvar name = void 0;\n\t\t\t\t\tfor (name in eventHash) {\n\t\t\t\t\t\tthis.off(name, eventHash[name]);\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// The handler of specific event detach.\n\t\t\tvar handlerList = this._eventHandler[eventName];\n\t\t\tif (handlerList) {\n\t\t\t\tvar k = void 0;\n\t\t\t\tvar handlerFunction = void 0;\n\t\t\t\tfor (k = 0, handlerFunction; handlerFunction = handlerList[k]; k++) {\n\t\t\t\t\tif (handlerFunction === handlerToDetach) {\n\t\t\t\t\t\thandlerList = handlerList.splice(k, 1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\t}]);\n\n\treturn Component;\n}();\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _component = __webpack_require__(0);\n\nmodule.exports = _component.Component;\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=component.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@egjs/component/dist/component.js\n// module id = 0\n// module chunks = 0 1","import {MaskFlicking} from \"./MaskFlicking\";\r\nexport {MaskFlicking};\r\nexport default {MaskFlicking};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.ts","import * as Flicking from \"@egjs/flicking\";\r\n\r\nclass MaskFlicking {\r\n  public flicking: any;\r\n  nowPanel: any;\r\n\r\n  constructor(rootElement: HTMLElement, options? :any) {\r\n    const flicking = new Flicking(rootElement, options);\r\n    this.flicking = flicking;\r\n\r\n    this.activePanel();\r\n\r\n    flicking.on({\r\n      \"flickEnd\": (e: any)=>{\r\n        this.activePanel();\r\n      }\r\n    });\r\n  }\r\n\r\n  private activePanel(){\r\n    const flicking = this.flicking;\r\n    const nowPanel = flicking.getElement(flicking.getIndex());\r\n    const prePanel = this.nowPanel;\r\n    if(prePanel !== nowPanel){\r\n      if(prePanel){\r\n        $(prePanel).removeClass(\"on\");\r\n      }\r\n      $(nowPanel).addClass(\"on\");\r\n      this.nowPanel = nowPanel;\r\n    }\r\n  }\r\n}\r\n\r\nexport { MaskFlicking };\r\nexport default MaskFlicking;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/MaskFlicking.ts","/*!\n * Copyright (c) 2017 NAVER Corp.\r\n * @egjs/flicking projects are licensed under the MIT <https://naver.github.io/egjs/license.txt> license\r\n * \r\n * @egjs/flicking JavaScript library\r\n * https://github.com/naver/egjs-flicking\r\n * \r\n * @version 2.0.0-rc.2\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@egjs/component\"), require(\"@egjs/movablecoord\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@egjs/component\", \"@egjs/movablecoord\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Flicking\"] = factory(require(\"@egjs/component\"), require(\"@egjs/movablecoord\"));\n\telse\n\t\troot[\"eg\"] = root[\"eg\"] || {}, root[\"eg\"][\"Flicking\"] = factory(root[\"eg\"][\"Component\"], root[\"eg\"][\"MovableCoord\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_8__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 5);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n/* eslint-disable no-new-func, no-nested-ternary */\nvar win = typeof window !== \"undefined\" && window.Math === Math ? window : typeof self !== \"undefined\" && self.Math === Math ? self : Function(\"return this\")();\n/* eslint-enable no-new-func, no-nested-ternary */\n\nvar document = win.document;\n\nexports.window = win;\nexports.document = document;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.DATA_HEIGHT = exports.IS_ANDROID2 = exports.SUPPORT_WILLCHANGE = exports.SUPPORT_TRANSFORM = exports.EVENTS = undefined;\n\nvar _browser = __webpack_require__(0);\n\n// define custom events name\nvar EVENTS = {\n\tbeforeFlickStart: \"beforeFlickStart\",\n\tbeforeRestore: \"beforeRestore\",\n\tflick: \"flick\",\n\tflickEnd: \"flickEnd\",\n\trestore: \"restore\"\n};\n\n// check for css transform support\n/**\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nvar SUPPORT_TRANSFORM = function () {\n\tvar style = _browser.document.documentElement.style;\n\n\treturn \"transform\" in style || \"webkitTransform\" in style;\n}();\n\n// check for will-change support\nvar SUPPORT_WILLCHANGE = _browser.window.CSS && _browser.window.CSS.supports && _browser.window.CSS.supports(\"will-change\", \"transform\");\n\n// check for Android 2.x\nvar IS_ANDROID2 = /Android 2\\./.test(navigator.userAgent);\n\n// data-height attribute's name for adaptiveHeight option\nvar DATA_HEIGHT = \"data-height\";\n\nexports.EVENTS = EVENTS;\nexports.SUPPORT_TRANSFORM = SUPPORT_TRANSFORM;\nexports.SUPPORT_WILLCHANGE = SUPPORT_WILLCHANGE;\nexports.IS_ANDROID2 = IS_ANDROID2;\nexports.DATA_HEIGHT = DATA_HEIGHT;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _component = __webpack_require__(7);\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _movablecoord = __webpack_require__(8);\n\nvar _movablecoord2 = _interopRequireDefault(_movablecoord);\n\nvar _utils = __webpack_require__(6);\n\nvar _consts = __webpack_require__(1);\n\nvar consts = _interopRequireWildcard(_consts);\n\nvar _config = __webpack_require__(3);\n\nvar _browser = __webpack_require__(0);\n\nvar _eventHandler = __webpack_require__(4);\n\nvar _eventHandler2 = _interopRequireDefault(_eventHandler);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright (c) 2015 NAVER Corp.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * egjs projects are licensed under the MIT license\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * A module used to implement flicking interactions. With this module, you can make flicking gestures, which are ways to navigate left and right to move between panels arranged side by side.\n * @ko 플리킹 UI를 구현하는 모듈. 나란히 배치한 패널을 쓸어 넘겨 다음 패널이나 이전 패널로 이동하는 플리킹 UI를 만들 수 있다.\n * @alias eg.Flicking\n * @extends eg.Component\n *\n * @param {HTMLElement|String|jQuery} element A base element for the eg.Flicking module <ko>eg.Flicking 모듈을 사용할 기준 엘리먼트</ko>\n * @param {Object} options The option object of the eg.Flicking module<ko>eg.Flicking 모듈의 옵션 객체</ko>\n * @param {Boolean} [options.hwAccelerable=eg.isHWAccelerable()] Force hardware compositing <ko>하드웨어 가속 사용 여부</ko>\n * @param {String} [options.prefix=eg-flick] A prefix for class names of the panel elements <ko>패널 엘리먼트의 클래스 이름에 설정할 접두사</ko>\n * @param {Number} [options.deceleration=0.0006] Deceleration of the animation where acceleration is manually enabled by user. A higher value indicates shorter running time <ko>사용자의 동작으로 가속도가 적용된 애니메이션의 감속도. 값이 높을수록 애니메이션 실행 시간이 짧아진다</ko>\n * @param {Boolean} [options.horizontal=true] Direction of the panel movement (true: horizontal, false: vertical) <ko>패널 이동 방향 (true 가로방향, false 세로방향)</ko>\n * @param {Boolean} [options.circular=false] Indicates whether a circular panel is available <ko>패널 순환 여부</ko>\n * @param {Number|Array} [options.previewPadding=[0,0]] The preview size for the previous or next panel. If direction is set to \"horizontal\", the preview section will be displayed on the left and right of the panel. If direction is set to \"vertical\", it will be displayed on the top and bottom of the panel <ko>이전 패널과 다음 패널을 미리 보는 영역의 크기. 패널 이동 방향이 가로 방향이면 패널 왼쪽과 오른쪽에 미리 보는 영역이 나타난다. 패널 이동 방향이 세로 방향이면 패널 위쪽과 아래쪽에 미리 보는 영역이 나타난다</ko>\n * @param {Number|Array} [options.bounce=[10,10]] −\tThe size of bouncing area. If a panel is set to \"non-circulable\", the start and end panels can exceed the base element area and move further as much as the bouncing area. If a panel is dragged to the bouncing area and then dropped, the panel where bouncing effects are applied is retuned back into the base element area. <ko>바운스 영역의 크기. 패널이 순환하지 않도록 설정됐다면 시작 패널과 마지막 패널은 기준 엘리먼트 영역을 넘어 바운스 영역의 크기만큼 더 이동할 수 있다. 패널을 바운스 영역까지 끌었다가 놓으면, 바운스 효과가 적용된 패널이 다시 기준 엘리먼트 영역 안으로 들어온다</ko>\n * @param {Number} [options.threshold=40] Distance threshold. If the drag exceeds the threshold value, it will be changed to the next panel <ko>다음 패널로 바뀌는 기준 이동 거리. 패널을 기준 이동 거리 이상 끌었다 놓으면 패널이 다음 패널로 바뀐다</ko>\n * @param {Number} [options.duration=100] Duration of the panel movement (unit: ms) <ko>패널 이동 애니메이션 진행 시간(단위: ms)</ko>\n * @param {Function} [options.panelEffect=easeOutCubic] The easing function to apply to a panel moving animation <ko>패널 이동 애니메이션에 적용할 easing 함수</ko>\n * @param {Number} [options.defaultIndex=0] The index number of a panel to be selected upon module initialization <ko>모듈이 초기화될 때 선택할 패널의 인덱스 번호</ko>\n * @param {Array} [options.inputType] Types of input devices.<br>- touch: A touch screen can be used to move a panel.<br>- mouse: A mouse can be used to move a panel. <ko>입력 장치 종류.<br>- touch: 터치 입력 장치로 패널을 이동할 수 있다.<br>- mouse: 마우스로 패널을 이동할 수 있다.</ko>\n * @param {Number} [options.thresholdAngle=45] The threshold value that determines whether user action is horizontal or vertical (0~90) <ko>사용자의 동작이 가로 방향인지 세로 방향인지 판단하는 기준 각도(0~90)</ko>\n * @param {Boolean} [options.adaptiveHeight=false] Set container's height be adaptive according panel's height.<br>(Note: on Android 4.1.x stock browser, has rendering bug which not correctly render height value on panel with single node. To avoid just append another empty node at the end.)<ko>컨테이너 영역이 패널의 높이값에 따라 변경될지 여부<br>(참고: Android 4.1.x 스톡 브라우저에서 단일 노드로 구성된 패널의 높이값 변경이 제대로 렌더링 되지 않는 버그가 있음. 비어있는 노드를 추가하면 해결이 가능하다.)</ko>\n *\n * @codepen {\"id\":\"rVOpPK\", \"ko\":\"플리킹 UI 기본 예제\", \"en\":\"Flicking UI default example\", \"collectionId\":\"ArxyLK\", \"height\" : 403}\n * @support {\"ie\": \"10+\", \"ch\" : \"latest\", \"ff\" : \"latest\",  \"sf\" : \"latest\" , \"edge\" : \"latest\", \"ios\" : \"7+\", \"an\" : \"2.3+ (except 3.x)\"}\n *\n * @see Easing Functions Cheat Sheet {@link http://easings.net/}\n * @see If you want to try a different easing function, use the jQuery easing plugin ({@link http://gsgd.co.uk/sandbox/jquery/easing}) or the jQuery UI easing library ({@link https://jqueryui.com/easing}). <ko>다른 easing 함수를 사용하려면 jQuery easing 플러그인({@link http://gsgd.co.uk/sandbox/jquery/easing})이나, jQuery UI easing 라이브러리({@link https://jqueryui.com/easing})를 사용한다</ko>\n * @example\n <!-- HTML -->\n <div id=\"mflick\">\n <div>\n <p>Layer 0</p>\n </div>\n <div>\n <p>Layer 1</p>\n </div>\n <div>\n <p>Layer 2</p>\n </div>\n </div>\n <script>\n var some = new eg.Flicking(\"#mflick\", {\n\t\t\t\tcircular : true,\n\t\t\t\tthreshold : 50\n\t\t\t}).on({\n\t\t\t\tbeforeRestore : function(e) { ... },\n\t\t\t\tflickStart : function(e) { ... }\n\t\t\t});\n </script>\n */\nvar Flicking = function (_Mixin$with) {\n\t_inherits(Flicking, _Mixin$with);\n\n\t/**\n  * Constructor\n  * @param {HTMLElement|String} element - base element or selector\n  * @param {Object} options\n  */\n\tfunction Flicking(element, options, _prefix) {\n\t\t_classCallCheck(this, Flicking);\n\n\t\tvar _this = _possibleConstructorReturn(this, _Mixin$with.call(this));\n\n\t\t_this.$wrapper = _utils.utils.$(element);\n\t\tvar $children = _this.$wrapper && _this.$wrapper.children;\n\n\t\tif (!_this.$wrapper || !$children || !$children.length) {\n\t\t\t// eslint-disable validateLineBreaks, maximumLineLength\n\t\t\tthrow new Error(\"Given base element doesn't exist or it hasn't proper DOM structure to be initialized.\");\n\n\t\t\t// eslint-enable validateLineBreaks, maximumLineLength\n\t\t}\n\n\t\t_this._setOptions(options);\n\t\t_this._setConfig($children, _prefix);\n\n\t\t!_utils.utils.hasClickBug() && (_this._setPointerEvents = function () {});\n\n\t\t_this._build();\n\t\t_this._bindEvents(true);\n\n\t\t_this._applyPanelsCss();\n\t\t_this._arrangePanels();\n\n\t\t_this.options.hwAccelerable && consts.SUPPORT_WILLCHANGE && _this._setHint();\n\t\t_this.options.adaptiveHeight && _this._setAdaptiveHeight();\n\n\t\t_this._adjustContainerCss(\"end\");\n\t\treturn _this;\n\t}\n\n\t/**\n  * Set options values\n  * @param {Object} options\n  */\n\n\n\tFlicking.prototype._setOptions = function _setOptions(options) {\n\t\t// default value of previewPadding and bounce\n\t\tvar arrVal = {\n\t\t\tpreviewPadding: [0, 0],\n\t\t\tbounce: [10, 10]\n\t\t};\n\n\t\tthis.options = _utils.utils.extend(_utils.utils.extend({}, _config.OPTIONS), arrVal, options);\n\n\t\tfor (var key in arrVal) {\n\t\t\tvar val = this.options[key];\n\n\t\t\tif (typeof val === \"number\") {\n\t\t\t\tval = [val, val];\n\t\t\t} else if (!_utils.utils.isArray(val)) {\n\t\t\t\tval = arrVal[key];\n\t\t\t}\n\n\t\t\tthis.options[key] = val;\n\t\t}\n\t};\n\n\t/**\n  * Set config values\n  * @param {HTMLCollection} $children wrappers' children elements\n  * @param {String} _prefix event prefix\n  * @return {HTMLElement}\n  */\n\n\n\tFlicking.prototype._setConfig = function _setConfig($children, _prefix) {\n\t\tvar options = this.options;\n\t\tvar padding = options.previewPadding;\n\t\tvar $nodes = $children;\n\n\t\tif ($nodes[0].classList.contains(options.prefix + \"-container\")) {\n\t\t\t$nodes = $nodes[0];\n\t\t\tthis.$container = $nodes;\n\t\t\t$nodes = $nodes.children;\n\t\t}\n\n\t\t// convert to array\n\t\t$nodes = [].slice.call($nodes);\n\n\t\t// config value\n\t\tvar conf = this._conf = _utils.utils.extend(_utils.utils.extend({}, _config.CONFIG), {\n\t\t\tpanel: {\n\t\t\t\t$list: $nodes,\n\t\t\t\tminCount: padding[0] + padding[1] > 0 ? 5 : 3 // minimum panel count\n\t\t\t},\n\t\t\t// remember original class and inline style in case of restoration on destroy()\n\t\t\torigPanelStyle: {\n\t\t\t\twrapper: {\n\t\t\t\t\tclassName: this.$wrapper.getAttribute(\"class\") || null,\n\t\t\t\t\tstyle: this.$wrapper.getAttribute(\"style\") || null\n\t\t\t\t},\n\t\t\t\tcontainer: {\n\t\t\t\t\tclassName: this.$container && this.$container.getAttribute(\"class\") || null,\n\t\t\t\t\tstyle: this.$container && this.$container.getAttribute(\"style\") || null\n\t\t\t\t},\n\t\t\t\tlist: $nodes.map(function (v) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tclassName: v.getAttribute(\"class\") || null,\n\t\t\t\t\t\tstyle: v.getAttribute(\"style\") || null\n\t\t\t\t\t};\n\t\t\t\t})\n\t\t\t},\n\t\t\tuseLayerHack: options.hwAccelerable && !consts.SUPPORT_WILLCHANGE,\n\t\t\teventPrefix: _prefix || \"\"\n\t\t});\n\n\t\t[[\"LEFT\", \"RIGHT\"], [\"UP\", \"DOWN\"]][+!options.horizontal].forEach(function (v) {\n\t\t\treturn conf.dirData.push(_movablecoord2.default[\"DIRECTION_\" + v]);\n\t\t});\n\t};\n\n\t/**\n  * Build and set panel nodes to make flicking structure\n  */\n\n\n\tFlicking.prototype._build = function _build() {\n\t\tvar panel = this._conf.panel;\n\t\tvar options = this.options;\n\t\tvar $children = panel.$list;\n\t\tvar padding = options.previewPadding.concat();\n\t\tvar prefix = options.prefix;\n\t\tvar horizontal = options.horizontal;\n\t\tvar panelCount = panel.count = panel.origCount = $children.length;\n\t\tvar bounce = options.bounce;\n\n\t\tthis._setPadding(padding, true);\n\t\tvar sizeValue = this._getDataByDirection([panel.size, \"100%\"]);\n\n\t\t// container element style\n\t\tvar cssValue = {\n\t\t\tposition: \"relative\",\n\t\t\tzIndex: 2000,\n\t\t\twidth: \"100%\",\n\t\t\theight: \"100%\"\n\t\t};\n\n\t\thorizontal && (cssValue.top = \"0px\");\n\n\t\tif (this.$container) {\n\t\t\t_utils.utils.css(this.$container, cssValue);\n\t\t} else {\n\t\t\tvar $parent = $children[0].parentNode;\n\t\t\tvar $container = _browser.document.createElement(\"div\");\n\n\t\t\t$container.className = prefix + \"-container\";\n\t\t\t_utils.utils.css($container, cssValue);\n\n\t\t\t$children.forEach(function (v) {\n\t\t\t\treturn $container.appendChild(v);\n\t\t\t});\n\n\t\t\t$parent.appendChild($container);\n\t\t\tthis.$container = $container;\n\t\t}\n\n\t\t// panels' css values\n\t\t$children.forEach(function (v) {\n\t\t\tv.classList.add(prefix + \"-panel\");\n\n\t\t\t_utils.utils.css(v, {\n\t\t\t\tposition: \"absolute\",\n\t\t\t\twidth: _utils.utils.getUnitValue(sizeValue[0]),\n\t\t\t\theight: _utils.utils.getUnitValue(sizeValue[1]),\n\t\t\t\tboxSizing: \"border-box\",\n\t\t\t\ttop: 0,\n\t\t\t\tleft: 0\n\t\t\t});\n\t\t});\n\n\t\tif (this._addClonePanels()) {\n\t\t\tpanelCount = panel.count = (panel.$list = [].slice.call(this.$container.children)).length;\n\t\t}\n\n\t\t// create MovableCoord instance\n\t\tthis._mcInst = new _movablecoord2.default({\n\t\t\tmin: [0, 0],\n\t\t\tmax: this._getDataByDirection([panel.size * (panelCount - 1), 0]),\n\t\t\tmargin: 0,\n\t\t\tcircular: false,\n\t\t\teasing: options.panelEffect,\n\t\t\tdeceleration: options.deceleration,\n\t\t\tbounce: this._getDataByDirection([0, bounce[1], 0, bounce[0]])\n\t\t});\n\n\t\tthis._setDefaultPanel(options.defaultIndex);\n\t};\n\n\t/**\n  * Set preview padding value\n  * @param {Array} padding\n  * @param {Boolean} build\n  */\n\n\n\tFlicking.prototype._setPadding = function _setPadding(padding, build) {\n\t\tvar horizontal = this.options.horizontal;\n\t\tvar panel = this._conf.panel;\n\t\tvar paddingSum = padding[0] + padding[1];\n\t\tvar cssValue = {};\n\n\t\tif (paddingSum || !build) {\n\t\t\tcssValue.padding = horizontal ? \"0 \" + padding.reverse().join(\"px 0 \") + \"px\" : padding.join(\"px 0 \") + \"px\";\n\t\t}\n\n\t\tif (build) {\n\t\t\tcssValue.overflow = \"hidden\";\n\t\t\tcssValue.boxSizing = \"border-box\";\n\t\t}\n\n\t\tObject.keys(cssValue).length && _utils.utils.css(this.$wrapper, cssValue);\n\n\t\tvar wrapperStyle = getComputedStyle(this.$wrapper);\n\t\tvar paddingType = horizontal ? [\"Left\", \"Right\"] : [\"Top\", \"Bottom\"];\n\n\t\tpanel.size = _utils.utils.getNumValue(wrapperStyle[horizontal ? \"width\" : \"height\"]) - (_utils.utils.getNumValue(wrapperStyle[\"padding\" + paddingType[0]]) + _utils.utils.getNumValue(wrapperStyle[\"padding\" + paddingType[1]]));\n\t};\n\n\t/**\n  * To fulfill minimum panel count cloning original node when circular or previewPadding option are set\n  * @return {Boolean} true : added clone node, false : not added\n  */\n\n\n\tFlicking.prototype._addClonePanels = function _addClonePanels() {\n\t\tvar _this2 = this;\n\n\t\tvar panel = this._conf.panel;\n\t\tvar panelCount = panel.origCount;\n\t\tvar cloneCount = panel.minCount - panelCount;\n\t\tvar list = panel.$list;\n\t\tvar cloneNodes = void 0;\n\n\t\t// if panels are given less than required when circular option is set, then clone node to apply circular mode\n\t\tif (this.options.circular && panelCount < panel.minCount) {\n\t\t\tcloneNodes = list.map(function (v) {\n\t\t\t\treturn v.cloneNode(true);\n\t\t\t});\n\n\t\t\twhile (cloneNodes.length < cloneCount) {\n\t\t\t\tcloneNodes = cloneNodes.concat(list.map(function (v) {\n\t\t\t\t\treturn v.cloneNode(true);\n\t\t\t\t}));\n\t\t\t}\n\n\t\t\tcloneNodes.forEach(function (v) {\n\t\t\t\treturn _this2.$container.appendChild(v);\n\t\t\t});\n\n\t\t\treturn !!cloneNodes.length;\n\t\t}\n\n\t\treturn false;\n\t};\n\n\t/**\n  * Move panel's position within array\n  * @param {Number} count element counts to move\n  * @param {Boolean} append where the list to be appended(moved) (true: to the end, false: to the beginning)\n  */\n\n\n\tFlicking.prototype._movePanelPosition = function _movePanelPosition(count, append) {\n\t\tvar panel = this._conf.panel;\n\t\tvar list = panel.$list;\n\t\tvar listToMove = list.splice(append ? 0 : panel.count - count, count);\n\n\t\tpanel.$list = append ? list.concat(listToMove) : listToMove.concat(list);\n\t};\n\n\t/**\n  * Set default panel to show\n  * @param {Number} index\n  */\n\n\n\tFlicking.prototype._setDefaultPanel = function _setDefaultPanel(index) {\n\t\tvar panel = this._conf.panel;\n\t\tvar lastIndex = panel.count - 1;\n\t\tvar coords = void 0;\n\t\tvar baseIndex = void 0;\n\n\t\tif (this.options.circular) {\n\t\t\t// if default index is given, then move correspond panel to the first position\n\t\t\tif (index > 0 && index <= lastIndex) {\n\t\t\t\tthis._movePanelPosition(index, true);\n\t\t\t}\n\n\t\t\t// set first panel's position according physical node length\n\t\t\tbaseIndex = this._getBasePositionIndex();\n\t\t\tthis._movePanelPosition(baseIndex, false);\n\n\t\t\tthis._setPanelNo({\n\t\t\t\tno: index,\n\t\t\t\tcurrNo: index\n\t\t\t});\n\t\t\t// if defaultIndex option is given, then move to that index panel\n\t\t} else if (index > 0 && index <= lastIndex) {\n\t\t\tthis._setPanelNo({\n\t\t\t\tindex: index,\n\t\t\t\tno: index,\n\t\t\t\tcurrIndex: index,\n\t\t\t\tcurrNo: index\n\t\t\t});\n\n\t\t\tcoords = [-(panel.size * index), 0];\n\n\t\t\tthis._setTranslate(coords);\n\t\t\tthis._setMovableCoord(\"setTo\", [Math.abs(coords[0]), Math.abs(coords[1])], true, 0);\n\t\t}\n\t};\n\n\t/**\n  * Arrange panels' position\n  * @param {Boolean} sort Need to sort panel's position\n  * @param {Number} indexToMove Number to move from current position (negative: left, positive: right)\n  */\n\n\n\tFlicking.prototype._arrangePanels = function _arrangePanels(sort, indexToMove) {\n\t\tvar conf = this._conf;\n\t\tvar panel = conf.panel;\n\t\tvar touch = conf.touch;\n\t\tvar dirData = conf.dirData;\n\t\tvar baseIndex = void 0;\n\n\t\tif (this.options.circular) {\n\t\t\t// when arranging panels, set flag to not trigger flick custom event\n\t\t\tconf.customEvent.flick = false;\n\n\t\t\t// move elements according direction\n\t\t\tif (sort) {\n\t\t\t\tindexToMove && (touch.direction = dirData[+!(indexToMove > 0)]);\n\t\t\t\tthis._arrangePanelPosition(touch.direction, indexToMove);\n\t\t\t}\n\n\t\t\t// set index for base element's position\n\t\t\tbaseIndex = this._getBasePositionIndex();\n\n\t\t\tthis._setPanelNo({\n\t\t\t\tindex: baseIndex,\n\t\t\t\tcurrIndex: baseIndex\n\t\t\t});\n\n\t\t\t// arrange MovableCoord's coord position\n\t\t\tconf.customEvent.flick = !!this._setMovableCoord(\"setTo\", [panel.size * panel.index, 0], true, 0);\n\t\t}\n\n\t\tthis._applyPanelsPos();\n\t};\n\n\t/**\n  * Set each panel's position in DOM\n  */\n\n\n\tFlicking.prototype._applyPanelsPos = function _applyPanelsPos() {\n\t\tthis._conf.panel.$list.forEach(this._applyPanelsCss.bind(this));\n\t};\n\n\t/**\n  * Set CSS style values to move elements\n  *\n  * Initialize setting up checking if browser support transform css property.\n  * If browser doesn't support transform, then use left/top properties instead.\n  * @param {HTMLElement} $element\n  * @param {Array} coords\n  */\n\n\n\tFlicking.prototype._setMoveStyle = function _setMoveStyle($el, coordsValue) {\n\t\tthis._setMoveStyle = consts.SUPPORT_TRANSFORM ? function moveStyle($element, coords) {\n\t\t\t_utils.utils.css($element, {\n\t\t\t\ttransform: _utils.utils.translate(coords[0], coords[1], this._conf.useLayerHack)\n\t\t\t});\n\t\t} : function ($element, coords) {\n\t\t\t_utils.utils.css($element, { left: coords[0], top: coords[1] });\n\t\t};\n\n\t\tthis._setMoveStyle($el, coordsValue);\n\t};\n\n\t/**\n  * Callback function for applying CSS values to each panels\n  *\n  * Need to be initialized before use, to set up for Android 2.x browsers or others.\n  */\n\n\n\tFlicking.prototype._applyPanelsCss = function _applyPanelsCss() {\n\t\tvar conf = this._conf;\n\t\tvar dummyAnchorClassName = \"__dummy_anchor\";\n\n\t\tif (consts.IS_ANDROID2) {\n\t\t\tconf.$dummyAnchor = _utils.utils.$(\".\" + dummyAnchorClassName);\n\n\t\t\t!conf.$dummyAnchor && this.$wrapper.appendChild(conf.$dummyAnchor = _utils.utils.$(\"<a href=\\\"javascript:void(0)\\\" class=\\\"\" + dummyAnchorClassName + \"\\\" style=\\\"position:absolute;height:0px;width:0px\\\">\"));\n\n\t\t\tthis._applyPanelsCss = function applyCss(v, i) {\n\t\t\t\tvar coords = this._getDataByDirection([this._conf.panel.size * i + \"px\", 0]);\n\n\t\t\t\t_utils.utils.css(v, {\n\t\t\t\t\tleft: coords[0],\n\t\t\t\t\ttop: coords[1]\n\t\t\t\t});\n\t\t\t};\n\t\t} else {\n\t\t\tthis._applyPanelsCss = function applyCss(v, i) {\n\t\t\t\tvar coords = this._getDataByDirection([consts.SUPPORT_TRANSFORM ? 100 * i + \"%\" : this._conf.panel.size * i + \"px\", 0]);\n\n\t\t\t\tthis._setMoveStyle(v, coords);\n\t\t\t};\n\t\t}\n\t};\n\n\t/**\n  * Adjust container's css value to handle Android 2.x link highlighting bug\n  *\n  * @param {String} phase\n  *    start - set left/top value to 0\n  *    end - set translate value to 0\n  * @param {Array} coordValue coordinate value\n  */\n\n\n\tFlicking.prototype._adjustContainerCss = function _adjustContainerCss(phase, coordValue) {\n\t\tvar conf = this._conf;\n\t\tvar panel = conf.panel;\n\t\tvar options = this.options;\n\t\tvar horizontal = options.horizontal;\n\t\tvar paddingTop = options.previewPadding[0];\n\t\tvar container = this.$container;\n\t\tvar coords = coordValue;\n\t\tvar value = void 0;\n\n\t\tif (consts.IS_ANDROID2) {\n\t\t\tif (!coords) {\n\t\t\t\tcoords = [-panel.size * panel.index, 0];\n\t\t\t}\n\n\t\t\tif (phase === \"start\") {\n\t\t\t\tcontainer = container.style;\n\t\t\t\tvalue = parseInt(container[horizontal ? \"left\" : \"top\"], 10);\n\n\t\t\t\tif (horizontal) {\n\t\t\t\t\tvalue && (container.left = \"0px\");\n\t\t\t\t} else {\n\t\t\t\t\tvalue !== paddingTop && (container.top = \"0px\");\n\t\t\t\t}\n\n\t\t\t\tthis._setTranslate([-coords[+!options.horizontal], 0]);\n\t\t\t} else if (phase === \"end\") {\n\t\t\t\tcoords = this._getCoordsValue(coords);\n\n\t\t\t\t_utils.utils.css(container, {\n\t\t\t\t\tleft: coords.x,\n\t\t\t\t\ttop: coords.y,\n\t\t\t\t\ttransform: _utils.utils.translate(0, 0, conf.useLayerHack)\n\t\t\t\t});\n\n\t\t\t\tconf.$dummyAnchor.focus();\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n  * Set MovableCoord coord value\n  * @param {String} method\n  * @param {Array} coordValue\n  * @param {Boolean} isDirVal\n  * @param {Number} duration\n  * @return {eg.MovableCoord} MovableCoord instance\n  */\n\n\n\tFlicking.prototype._setMovableCoord = function _setMovableCoord(method, coordValue, isDirVal, duration) {\n\t\tvar coord = coordValue;\n\n\t\tif (isDirVal) {\n\t\t\tcoord = this._getDataByDirection(coord);\n\t\t}\n\n\t\treturn this._mcInst[method](coord[0], coord[1], duration);\n\t};\n\n\t/**\n  * Set hint for browser to decide efficient way of doing transform changes(or animation)\n  * https://dev.opera.com/articles/css-will-change-property/\n  */\n\n\n\tFlicking.prototype._setHint = function _setHint() {\n\t\tvar style = { willChange: \"transform\" };\n\n\t\t_utils.utils.css(this.$container, style);\n\t\t_utils.utils.css(this._conf.panel.$list, style);\n\t};\n\n\t/**\n  * Get data according options.horizontal value\n  *\n  * @param {Array} value primary data to handle\n  * @return {Array}\n  */\n\n\n\tFlicking.prototype._getDataByDirection = function _getDataByDirection(value) {\n\t\tvar data = value.concat();\n\n\t\t!this.options.horizontal && data.reverse();\n\t\treturn data;\n\t};\n\n\t/**\n  * Move nodes\n  * @param {Boolean} direction\n  * @param {Number} indexToMove\n  */\n\n\n\tFlicking.prototype._arrangePanelPosition = function _arrangePanelPosition(direction, indexToMove) {\n\t\tvar next = direction === this._conf.dirData[0];\n\n\t\tthis._movePanelPosition(Math.abs(indexToMove || 1), next);\n\t};\n\n\t/**\n  * Get the base position index of the panel\n  */\n\n\n\tFlicking.prototype._getBasePositionIndex = function _getBasePositionIndex() {\n\t\treturn Math.floor(this._conf.panel.count / 2 - 0.1);\n\t};\n\n\t/**\n  * Bind events\n  * @param {Boolean} bind\n  */\n\n\n\tFlicking.prototype._bindEvents = function _bindEvents(bind) {\n\t\tvar options = this.options;\n\t\tvar $wrapper = this.$wrapper;\n\t\tvar mcInst = this._mcInst;\n\n\t\tif (bind) {\n\t\t\tmcInst.bind($wrapper, {\n\t\t\t\tscale: this._getDataByDirection([-1, 0]),\n\t\t\t\tdirection: _movablecoord2.default[\"DIRECTION_\" + (options.horizontal ? \"HORIZONTAL\" : \"VERTICAL\")],\n\t\t\t\tinterruptable: false,\n\t\t\t\tinputType: options.inputType,\n\t\t\t\tthresholdAngle: options.thresholdAngle\n\t\t\t}).on({\n\t\t\t\thold: this._holdHandler.bind(this),\n\t\t\t\tchange: this._changeHandler.bind(this),\n\t\t\t\trelease: this._releaseHandler.bind(this),\n\t\t\t\tanimationStart: this._animationStartHandler.bind(this),\n\t\t\t\tanimationEnd: this._animationEndHandler.bind(this)\n\t\t\t});\n\t\t} else {\n\t\t\tmcInst.unbind($wrapper).off();\n\t\t}\n\t};\n\n\t/**\n  * Set container's height value according to children's height\n  * @param {Number} direction\n  */\n\n\n\tFlicking.prototype._setAdaptiveHeight = function _setAdaptiveHeight(direction) {\n\t\tvar conf = this._conf;\n\t\tvar indexToMove = conf.indexToMove;\n\t\tvar $children = void 0;\n\t\tvar height = void 0;\n\n\t\tvar $panel = indexToMove === 0 ?\n\n\t\t// panel moved by 1\n\t\tthis[\"get\" + (direction === _movablecoord2.default.DIRECTION_LEFT && \"Next\" || direction === _movablecoord2.default.DIRECTION_RIGHT && \"Prev\" || \"\") + \"Element\"]() :\n\n\t\t// panel moved by .moveTo()\n\t\tconf.panel.$list[conf.panel.currIndex + indexToMove];\n\n\t\tvar $first = $panel.querySelector(\":first-child\");\n\n\t\theight = $first.getAttribute(consts.DATA_HEIGHT);\n\n\t\tif (!height) {\n\t\t\t$children = $panel.children;\n\t\t\theight = _utils.utils.outerHeight($children.length > 1 ? ($panel.style.height = \"auto\", $panel) : $first);\n\n\t\t\t$first.setAttribute(consts.DATA_HEIGHT, height);\n\t\t}\n\n\t\tthis.$wrapper.style.height = height + \"px\";\n\t};\n\n\t/**\n  * Trigger beforeRestore event\n  * @param {Object} e event object\n  */\n\n\n\tFlicking.prototype._triggerBeforeRestore = function _triggerBeforeRestore(e) {\n\t\tvar conf = this._conf;\n\t\tvar touch = conf.touch;\n\n\t\t// reverse direction value when restore\n\t\ttouch.direction = ~~conf.dirData.join(\"\").replace(touch.direction, \"\");\n\n\t\t/**\n   * This event is fired before an element is restored to its original position when user action is done while the element is not dragged until a certain distance threshold is reached\n   * @ko 다음 패널로 바뀌는 기준 이동 거리만큼 이동하기 전에 사용자의 동작이 끝났을 때 원래 패널로 복원되기 전에 발생하는 이벤트\n   * @name eg.Flicking#beforeRestore\n   * @event\n   * @param {Object} param The object of data to be sent to an event <ko>이벤트에 전달되는 데이터 객체</ko>\n   * @param {String} param.eventType The name of the event <ko>이름명</ko>\n   * @param {Number} param.index Physical index number of the current panel element, which is relative to DOM. (@deprecated since 1.3.0)<ko>현재 패널 엘리먼트의 물리적 인덱스 번호. DOM 엘리먼트를 기준으로 하는 인덱스 번호다. (@deprecated since 1.3.0)</ko>\n   * @param {Number} param.no Logical index number of the current panel element, which is relative to the panel content.<ko>현재 패널 엘리먼트의 논리적 인덱스 번호. 패널 콘텐츠를 기준으로 하는 인덱스 번호다</ko>\n   * @param {Number} param.direction Direction of the movement (see eg.MovableCoord.DIRECTION_* constant) <ko>이동 방향(eg.MovableCoord.DIRECTION_* constant 참고)</ko>\n   * @param {Array} param.depaPos Start coordinate <ko>출발점 좌표</ko>\n   * @param {Number} param.depaPos.0 x-coordinate <ko>x 좌표</ko>\n   * @param {Number} param.depaPos.1 y-coordinate <ko>y 좌표</ko>\n   * @param {Array} param.destPos End coordinate <ko>도착점 좌표</ko>\n   * @param {Number} param.destPos.0 x-coordinate <ko>x 좌표</ko>\n   * @param {Number} param.destPos.1 y-coordinate <ko>y 좌표</ko>\n   */\n\t\tconf.customEvent.restore = this._triggerEvent(consts.EVENTS.beforeRestore, {\n\t\t\tdepaPos: e.depaPos,\n\t\t\tdestPos: e.destPos\n\t\t});\n\n\t\tif (!conf.customEvent.restore) {\n\t\t\t\"stop\" in e && e.stop();\n\t\t\tconf.panel.animating = false;\n\t\t}\n\t};\n\n\t/**\n  * Trigger restore event\n  */\n\n\n\tFlicking.prototype._triggerRestore = function _triggerRestore() {\n\t\tvar customEvent = this._conf.customEvent;\n\n\t\t/**\n   * This event is fired after an element is restored to its original position when user action is done while the element is not dragged until a certain distance threshold is reached.\n   * @ko 다음 패널로 바뀌는 기준 이동 거리만큼 이동하기 전에 사용자의 동작이 끝났을 때 원래 패널로 복원된 다음 발생하는 이벤트\n   * @name eg.Flicking#restore\n   * @event\n   * @param {Object} param The object of data to be sent to an event <ko>이벤트에 전달되는 데이터 객체</ko>\n   * @param {String} param.eventType The name of the event <ko>이름명</ko>\n   * @param {Number} param.index Physical index number of the current panel element, which is relative to DOM(@deprecated since 1.3.0)<ko>현재 패널 엘리먼트의 물리적 인덱스 번호. DOM 엘리먼트를 기준으로 하는 인덱스 번호다 (@deprecated since 1.3.0)</ko>\n   * @param {Number} param.no Logical index number of the current panel element, which is relative to the panel content. <ko>현재 패널 엘리먼트의 논리적 인덱스 번호. 패널 콘텐츠를 기준으로 하는 인덱스 번호다</ko>\n   * @param {Number} param.direction Direction of the panel move (see eg.MovableCoord.DIRECTION_* constant) <ko>이동 방향(eg.MovableCoord.DIRECTION_* constant 참고)</ko>\n   */\n\t\tcustomEvent.restore && this._triggerEvent(consts.EVENTS.restore);\n\t\tcustomEvent.restoreCall = false;\n\t};\n\n\t/**\n  * Set value when panel changes\n  * @param {String} phase - [start|end]\n  * @param {Object} pos\n  */\n\n\n\tFlicking.prototype._setPhaseValue = function _setPhaseValue(phase, pos) {\n\t\tvar conf = this._conf;\n\t\tvar options = this.options;\n\t\tvar panel = conf.panel;\n\n\t\tif (phase === \"start\" && (panel.changed = this._isMovable())) {\n\t\t\t/**\n    * This event is fired before flicking starts\n    * @ko 플리킹이 시작하기 전에 발생하는 이벤트\n    * @name eg.Flicking#beforeFlickStart\n    * @event\n    * @param {Object} param The object of data to be sent to an event <ko>이벤트에 전달되는 데이터 객체</ko>\n    * @param {String} param.eventType The name of the event <ko>이름명</ko>\n    * @param {Number} param.index Physical index number of the current panel element, which is relative to DOM. (@deprecated since 1.3.0)<ko>현재 패널 엘리먼트의 물리적 인덱스 번호. DOM 엘리먼트를 기준으로 하는 인덱스 번호다 (@deprecated since 1.3.0)</ko>\n    * @param {Number} param.no Logical index number of the current panel element, which is relative to the panel content.<ko>현재 패널 엘리먼트의 논리적 인덱스 번호. 패널 콘텐츠를 기준으로 하는 인덱스 번호다</ko>\n    * @param {Number} param.direction Direction of the movement (see eg.MovableCoord.DIRECTION_* constant) <ko>−\t이동 방향(eg.MovableCoord.DIRECTION_* constant 참고)</ko>\n    * @param {Array} param.depaPos Start coordinate <ko>출발점 좌표</ko>\n    * @param {Number} param.depaPos.0 x-coordinate <ko>x 좌표</ko>\n    * @param {Number} param.depaPos.1 y-coordinate <ko>y 좌표</ko>\n    * @param {Array} param.destPos End coordinate <ko>도착점 좌표</ko>\n    * @param {Number} param.destPos.0 x-coordinate <ko>x 좌표</ko>\n    * @param {Number} param.destPos.1 y-coordinate <ko>y 좌표</ko>\n    */\n\t\t\tif (!this._triggerEvent(consts.EVENTS.beforeFlickStart, pos)) {\n\t\t\t\tpanel.changed = panel.animating = false;\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\toptions.adaptiveHeight && this._setAdaptiveHeight(conf.touch.direction);\n\t\t\t}\n\n\t\t\tconf.indexToMove === 0 && this._setPanelNo();\n\t\t} else if (phase === \"end\") {\n\t\t\tif (options.circular && panel.changed) {\n\t\t\t\tthis._arrangePanels(true, conf.indexToMove);\n\t\t\t}\n\n\t\t\t!consts.IS_ANDROID2 && this._setTranslate([-panel.size * panel.index, 0]);\n\t\t\tconf.touch.distance = conf.indexToMove = 0;\n\n\t\t\t/**\n    * This event is fired after panel moves.\n    * @ko 패널이 이동한 다음 발생하는 이벤트\n    * @name eg.Flicking#flickEnd\n    * @event\n    * @param {Object} param The object of data to be sent to an event <ko>이벤트에 전달되는 데이터 객체</ko>\n    * @param {String} param.eventType The name of the event <ko>이름명</ko>\n    * @param {Number} param.index Physical index number of the current panel element, which is relative to DOM (@deprecated since 1.3.0)<ko>현재 패널 엘리먼트의 물리적 인덱스 번호. DOM 엘리먼트를 기준으로 하는 인덱스 번호다 (@deprecated since 1.3.0)</ko>\n    * @param {Number} param.no Logical index number of the current panel element, which is relative to the panel content. <ko>현재 패널 엘리먼트의 논리적 인덱스 번호. 패널 콘텐츠를 기준으로 하는 인덱스 번호다.</ko>\n    * @param {Number} param.direction Direction of the movemen (see eg.MovableCoord.DIRECTION_* constant) <ko>−\t이동 방향(eg.MovableCoord.DIRECTION_* constant 참고</ko>\n    */\n\t\t\tpanel.changed && this._triggerEvent(consts.EVENTS.flickEnd);\n\t\t}\n\n\t\tthis._adjustContainerCss(phase);\n\t\treturn true;\n\t};\n\n\t/**\n  * Get positive or negative according direction\n  */\n\n\n\tFlicking.prototype._getNumByDirection = function _getNumByDirection() {\n\t\tvar conf = this._conf;\n\n\t\treturn conf.touch.direction === conf.dirData[0] ? 1 : -1;\n\t};\n\n\t/**\n  * Revert panel number\n  */\n\n\n\tFlicking.prototype._revertPanelNo = function _revertPanelNo() {\n\t\tvar panel = this._conf.panel;\n\t\tvar num = this._getNumByDirection();\n\n\t\tvar index = panel.currIndex >= 0 ? panel.currIndex : panel.index - num;\n\t\tvar no = panel.currNo >= 0 ? panel.currNo : panel.no - num;\n\n\t\tthis._setPanelNo({\n\t\t\tindex: index,\n\t\t\tno: no\n\t\t});\n\t};\n\n\t/**\n  * Set the panel number\n  * @param {Object} obj number object\n  */\n\n\n\tFlicking.prototype._setPanelNo = function _setPanelNo(obj) {\n\t\tvar panel = this._conf.panel;\n\t\tvar count = panel.origCount - 1;\n\t\tvar num = this._getNumByDirection();\n\n\t\tif (_utils.utils.isObject(obj)) {\n\t\t\tfor (var key in obj) {\n\t\t\t\tpanel[key] = obj[key];\n\t\t\t}\n\t\t} else {\n\t\t\t// remember current value\n\t\t\tpanel.currIndex = panel.index;\n\t\t\tpanel.currNo = panel.no;\n\n\t\t\tpanel.index += num;\n\t\t\tpanel.no += num;\n\t\t}\n\n\t\tif (panel.no > count) {\n\t\t\tpanel.no = 0;\n\t\t} else if (panel.no < 0) {\n\t\t\tpanel.no = count;\n\t\t}\n\t};\n\n\t/**\n  * Set pointerEvents css property on container element due to the iOS click bug\n  * @param {Event} e\n  */\n\n\n\tFlicking.prototype._setPointerEvents = function _setPointerEvents(e) {\n\t\tvar pointer = _utils.utils.css(this.$container, \"pointerEvents\");\n\t\tvar val = void 0;\n\n\t\tif (e && e.holding && e.hammerEvent && e.hammerEvent.preventSystemEvent && pointer !== \"none\") {\n\t\t\tval = \"none\";\n\t\t} else if (!e && pointer !== \"auto\") {\n\t\t\tval = \"auto\";\n\t\t}\n\n\t\tval && _utils.utils.css(this.$container, { pointerEvents: val });\n\t};\n\n\t/**\n  * Get coordinate value with unit\n  * @param coords {Array} x,y numeric value\n  * @return {Object} x,y coordinate value with unit\n  */\n\n\n\tFlicking.prototype._getCoordsValue = function _getCoordsValue(coordsValue) {\n\t\t// the param comes as [ val, 0 ], whatever the direction. So reorder the value depend the direction.\n\t\tvar coords = this._getDataByDirection(coordsValue);\n\n\t\treturn {\n\t\t\tx: _utils.utils.getUnitValue(coords[0]),\n\t\t\ty: _utils.utils.getUnitValue(coords[1])\n\t\t};\n\t};\n\n\t/**\n  * Set translate property value\n  * @param {Array} coords coordinate x,y value\n  */\n\n\n\tFlicking.prototype._setTranslate = function _setTranslate(coordsValue) {\n\t\tvar coords = this._getCoordsValue(coordsValue);\n\n\t\tthis._setMoveStyle(this.$container, [coords.x, coords.y]);\n\t};\n\n\t/**\n  * Check if panel passed through threshold pixel\n  */\n\n\n\tFlicking.prototype._isMovable = function _isMovable() {\n\t\tvar options = this.options;\n\t\tvar mcInst = this._mcInst;\n\t\tvar isMovable = Math.abs(this._conf.touch.distance) >= options.threshold;\n\t\tvar max = void 0;\n\t\tvar currPos = void 0;\n\n\t\tif (!options.circular && isMovable) {\n\t\t\tmax = this._getDataByDirection(mcInst.options.max)[0];\n\t\t\tcurrPos = this._getDataByDirection(mcInst.get())[0];\n\n\t\t\t// if current position out of range\n\t\t\tif (currPos < 0 || currPos > max) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn isMovable;\n\t};\n\n\t/**\n  * Trigger custom events\n  * @param {String} name - event name\n  * @param {Object} param - additional event value\n  * @return {Boolean}\n  */\n\n\n\tFlicking.prototype._triggerEvent = function _triggerEvent(name, param) {\n\t\tvar conf = this._conf;\n\t\tvar panel = conf.panel;\n\n\t\t// pass changed panel no only on 'flickEnd' event\n\t\tif (name === consts.EVENTS.flickEnd) {\n\t\t\tpanel.currNo = panel.no;\n\t\t\tpanel.currIndex = panel.index;\n\t\t}\n\n\t\treturn this.trigger(conf.eventPrefix + name, _utils.utils.extend({\n\t\t\teventType: name,\n\t\t\tindex: panel.currIndex,\n\t\t\tno: panel.currNo,\n\t\t\tdirection: conf.touch.direction\n\t\t}, param));\n\t};\n\n\t/**\n  * Get next/prev panel element/index.\n  * @param {Boolean} direction\n  * @param {Boolean} element - true:to get element, false:to get index\n  * @param {Number} physical - true : physical, false : logical\n  * @return {HTMLElement|Number}\n  */\n\n\n\tFlicking.prototype._getElement = function _getElement(direction, element, physical) {\n\t\tvar panel = this._conf.panel;\n\t\tvar circular = this.options.circular;\n\t\tvar pos = panel.currIndex;\n\t\tvar next = direction === this._conf.dirData[0];\n\t\tvar result = null;\n\t\tvar total = void 0;\n\t\tvar index = void 0;\n\n\t\tif (physical) {\n\t\t\ttotal = panel.count;\n\t\t\tindex = pos;\n\t\t} else {\n\t\t\ttotal = panel.origCount;\n\t\t\tindex = panel.currNo;\n\t\t}\n\n\t\tvar currentIndex = index;\n\n\t\tif (next) {\n\t\t\tif (index < total - 1) {\n\t\t\t\tindex++;\n\t\t\t} else if (circular) {\n\t\t\t\tindex = 0;\n\t\t\t}\n\t\t} else {\n\t\t\tif (index > 0) {\n\t\t\t\tindex--;\n\t\t\t} else if (circular) {\n\t\t\t\tindex = total - 1;\n\t\t\t}\n\t\t}\n\n\t\tif (currentIndex !== index) {\n\t\t\tresult = element ? panel.$list[next ? pos + 1 : pos - 1] : index;\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t/**\n  * Set value to force move panels when duration is 0\n  * @param {Boolean} next\n  */\n\n\n\tFlicking.prototype._setValueToMove = function _setValueToMove(next) {\n\t\tvar conf = this._conf;\n\n\t\tconf.touch.distance = this.options.threshold + 1;\n\t\tconf.touch.direction = conf.dirData[+!next];\n\t};\n\n\t/**\n  * Returns the index number of the current panel element.\n  * @ko 현재 패널 엘리먼트의 인덱스 번호를 반환한다\n  * @method eg.Flicking#getIndex\n  * @param {Boolean} [physical=false] Types of index numbers<br>- true: Indicates physical index numbers relative to DOM.<br>- false: Indicates logical index numbers relative to the panel content. <ko>−\t인덱스 번호의 종류<br>- true: 물리적 인덱스 번호. DOM 엘리먼트를 기준으로 하는 인덱스 번호다.<br>- false: 논리적 인덱스 번호. 패널 콘텐츠를 기준으로 하는 인덱스 번호다.</ko>\n  * @return {Number} Index number of the current panel element <ko>현재 패널의 인덱스 번호</ko>\n  */\n\n\n\tFlicking.prototype.getIndex = function getIndex(physical) {\n\t\treturn this._conf.panel[physical ? \"currIndex\" : \"currNo\"];\n\t};\n\n\t/**\n  * Returns the reference of the current panel element.\n  * @ko 현재 패널 엘리먼트의 레퍼런스를 반환한다\n  * @method eg.Flicking#getElement\n  * @return {HTMLElement} Current element <ko>현재 엘리먼트</ko>\n  */\n\n\n\tFlicking.prototype.getElement = function getElement() {\n\t\tvar panel = this._conf.panel;\n\n\t\treturn panel.$list[panel.currIndex];\n\t};\n\n\t/**\n  * Returns the reference of the next panel element.\n  * @ko 다음 패널 엘리먼트의 레퍼런스를 반환한다.\n  * @method eg.Flicking#getNextElement\n  * @return {HTMLElement|null} Next panel element or null if it does not exist.<ko>다음 패널 엘리먼트. 패널이 없으면 'null'을 반환한다.</ko>\n  */\n\n\n\tFlicking.prototype.getNextElement = function getNextElement() {\n\t\treturn this._getElement(this._conf.dirData[0], true);\n\t};\n\n\t/**\n  * Returns the index number of the next panel element.\n  * @ko 다음 패널 엘리먼트의 인덱스 번호를 반환한다\n  * @method eg.Flicking#getNextIndex\n  * @param {Boolean} [physical=false] Types of index numbers<br>- true: Indicates physical index numbers relative to DOM.<br>- false: Indicates logical index numbers relative to the panel content. <ko>−\t인덱스 번호의 종류<br>- true: 물리적 인덱스 번호. DOM 엘리먼트를 기준으로 하는 인덱스 번호다.<br>- false: 논리적 인덱스 번호. 패널 콘텐츠를 기준으로 하는 인덱스 번호다.</ko>\n  * @return {Number|null} Index number of the next panel element or null if it does not exist. <ko>다음 패널 엘리먼트의 인덱스 번호. 패널이 없으면 'null'을 반환한다</ko>\n  */\n\n\n\tFlicking.prototype.getNextIndex = function getNextIndex(physical) {\n\t\treturn this._getElement(this._conf.dirData[0], false, physical);\n\t};\n\n\t/**\n  * Returns the references of whole panel elements.\n  * @ko 패널을 구성하는 모든 엘리먼트의 레퍼런스를 반환한다\n  * @method eg.Flicking#getAllElements\n  * @return {HTMLElement} Whole panel elements <ko>모든 패널 엘리먼트</ko>\n  */\n\n\n\tFlicking.prototype.getAllElements = function getAllElements() {\n\t\treturn this._conf.panel.$list;\n\t};\n\n\t/**\n  * Returns the reference of the previous panel element.\n  * @ko 이전 패널 엘리먼트의 레퍼런스를 반환한다.\n  * @method eg.Flicking#getPrevElement\n  * @return {HTMLElement|null} Previous panel element or null if it does not exist. <ko>이전 패널 엘리먼트. 패널이 없으면 'null'을 반환한다</ko>\n  */\n\n\n\tFlicking.prototype.getPrevElement = function getPrevElement() {\n\t\treturn this._getElement(this._conf.dirData[1], true);\n\t};\n\n\t/**\n  * Returns the index number of the previous panel element.\n  * @ko 이전 패널 엘리먼트의 인덱스 번호를 반환한다\n  * @method eg.Flicking#getPrevIndex\n  * @param {Boolean} [physical=false] Types of index numbers<br>- true: Indicates physical index numbers relative to DOM.<br>- false: Indicates logical index numbers relative to the panel content. <ko>−\t인덱스 번호의 종류<br>- true: 물리적 인덱스 번호. DOM 엘리먼트를 기준으로 하는 인덱스 번호다.<br>- false: 논리적 인덱스 번호. 패널 콘텐츠를 기준으로 하는 인덱스 번호다.</ko>\n  * @return {Number|null} Previous element index value or null if no more element exist<ko>이전 패널 인덱스 번호. 패널이 없는 경우에는 null</ko>\n  */\n\n\n\tFlicking.prototype.getPrevIndex = function getPrevIndex(physical) {\n\t\treturn this._getElement(this._conf.dirData[1], false, physical);\n\t};\n\n\t/**\n  * Returns the total number of whole panel elements.\n  * @ko 전체 패널 엘리먼트의 개수를 반환한다\n  * @method eg.Flicking#getTotalCount\n  * @deprecated since 1.3.0\n  * @param {Boolean} [physical=false] Number of elements relative to (true: DOM, false: panel content)<ko>엘리먼트 개수의 기준(true: DOM 엘리먼트 기준, false: 패널 콘텐츠 기준)</ko>\n  * @return {Number} Total number of whole panel elements <ko>모든 패널 엘리먼트의 개수</ko>\n  */\n\n\n\tFlicking.prototype.getTotalCount = function getTotalCount(physical) {\n\t\treturn this._conf.panel[physical ? \"count\" : \"origCount\"];\n\t};\n\n\t/**\n  * Checks whether the animated panel is playing.\n  * @ko 패널 이동 애니메이션이 진행 중인지 확인한다.\n  * @method eg.Flicking#isPlaying\n  * @return {Boolean} Indicates whether the animated panel is playing <ko>패널 이동 애니메이션 진행 중 여부</ko>\n  */\n\n\n\tFlicking.prototype.isPlaying = function isPlaying() {\n\t\treturn this._conf.panel.animating;\n\t};\n\n\t/**\n  * Move panel to the given direction\n  * @param {Boolean} next\n  * @param {Number} duration\n  */\n\n\n\tFlicking.prototype._movePanel = function _movePanel(next, duration) {\n\t\tvar conf = this._conf;\n\t\tvar panel = conf.panel;\n\t\tvar options = this.options;\n\n\t\tif (panel.animating || conf.touch.holding) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tthis._setValueToMove(next);\n\n\t\tif (options.circular || this[next ? \"getNextIndex\" : \"getPrevIndex\"]() != null) {\n\t\t\tthis._movePanelByPhase(\"setBy\", [panel.size * (next ? 1 : -1), 0], duration);\n\t\t}\n\n\t\treturn this;\n\t};\n\n\t/**\n  * Move panel applying start/end phase value\n  * @param {String} method movableCoord method name\n  * @param {Object} coords coordinate array value\n  * @param {Number} durationValue duration value\n  */\n\n\n\tFlicking.prototype._movePanelByPhase = function _movePanelByPhase(method, coords, durationValue) {\n\t\tvar duration = _utils.utils.getNumValue(durationValue, this.options.duration);\n\n\t\tif (this._setPhaseValue(\"start\") !== false) {\n\t\t\tthis._setMovableCoord(method, coords, true, duration);\n\t\t\t!duration && this._setPhaseValue(\"end\");\n\t\t}\n\t};\n\n\t/**\n  * Moves an element to the next panel.\n  * @ko 다음 패널로 이동한다.\n  * @method eg.Flicking#next\n  * @param {Number} [duration=options.duration] Duration of the panel movement (unit: ms) <ko>패널 이동 애니메이션 진행 시간(단위: ms)</ko>\n  * @return {eg.Flicking} An instance of a module itself <ko>모듈 자신의 인스턴스</ko>\n  */\n\n\n\tFlicking.prototype.next = function next(duration) {\n\t\treturn this._movePanel(true, duration);\n\t};\n\n\t/**\n  * Moves an element to the previous panel.\n  * @ko 이전 패널로 이동한다.\n  * @method eg.Flicking#prev\n  * @param {Number} [duration=options.duration] Duration of the panel movement (unit: ms) <ko>패널 이동 애니메이션 진행 시간(단위: ms)</ko>\n  * @return {eg.Flicking} An instance of a module itself<ko>모듈 자신의 인스턴스</ko>\n  */\n\n\n\tFlicking.prototype.prev = function prev(duration) {\n\t\treturn this._movePanel(false, duration);\n\t};\n\n\t/**\n  * Moves an element to the indicated panel.\n  * @ko 지정한 패널로 이동한다.\n  * @method eg.Flicking#moveTo\n  * @param {Number} no Logical index number of the target panel element, which is relative to the panel content. <ko>이동할 패널 엘리먼트의 논리적 인덱스 번호. 패널 콘텐츠를 기준으로 하는 인덱스 번호다</ko>\n  * @param {Number} [duration=options.duration] Duration of the panel movement (unit: ms) <ko>패널 이동 애니메이션 진행 시간(단위: ms)</ko>\n  * @return {eg.Flicking} An instance of a module itself<ko>모듈 자신의 인스턴스</ko>\n  */\n\n\n\tFlicking.prototype.moveTo = function moveTo(noValue, duration) {\n\t\tvar conf = this._conf;\n\t\tvar panel = conf.panel;\n\t\tvar circular = this.options.circular;\n\t\tvar currentIndex = panel.index;\n\t\tvar indexToMove = void 0;\n\t\tvar isPositive = void 0;\n\t\tvar no = noValue;\n\n\t\tno = _utils.utils.getNumValue(no, -1);\n\n\t\tif (no < 0 || no >= panel.origCount || no === panel.no || panel.animating || conf.touch.holding) {\n\t\t\treturn this;\n\t\t}\n\n\t\tindexToMove = no - (circular ? panel.no : currentIndex);\n\t\tisPositive = indexToMove > 0;\n\n\t\t// check for real panel count which can be moved on each sides in circular mode\n\t\tif (circular && Math.abs(indexToMove) > (isPositive ? panel.count - (currentIndex + 1) : currentIndex)) {\n\t\t\tindexToMove += (isPositive ? -1 : 1) * panel.count;\n\t\t\tisPositive = indexToMove > 0;\n\t\t}\n\n\t\tthis._setPanelNo(circular ? { no: no } : { no: no, index: no });\n\t\tthis._conf.indexToMove = indexToMove;\n\t\tthis._setValueToMove(isPositive);\n\n\t\tthis._movePanelByPhase(circular ? \"setBy\" : \"setTo\", [panel.size * (circular ? indexToMove : no), 0], duration);\n\n\t\treturn this;\n\t};\n\n\t/**\n  * Update panel's previewPadding size according options.previewPadding\n  */\n\n\n\tFlicking.prototype._checkPadding = function _checkPadding() {\n\t\tvar options = this.options;\n\t\tvar previewPadding = options.previewPadding.concat();\n\t\tvar padding = _utils.utils.css(this.$wrapper, \"padding\").split(\" \");\n\n\t\toptions.horizontal && padding.reverse();\n\n\t\t// get current padding value\n\t\tpadding = [padding[0]];\n\t\tpadding.push(padding[padding.length === 2 ? 0 : 2]);\n\n\t\tpadding = padding.map(Number);\n\n\t\t// update padding when current and given are different\n\t\tif (previewPadding.length === 2 && previewPadding[0] !== padding[0] || previewPadding[1] !== padding[1]) {\n\t\t\tthis._setPadding(previewPadding);\n\t\t}\n\t};\n\n\t/**\n  * Updates the size of the panel.\n  * @ko 패널의 크기를 갱신한다\n  * @method eg.Flicking#resize\n  * @return {eg.Flicking} An instance of a module itself<ko>모듈 자신의 인스턴스</ko>\n  * @example\n  let some = new eg.Flicking(\"#mflick\", {\n \t\t\t\tpreviewPadding: [10,10]\n \t\t\t});\n \t // when device orientaion changes\n  some.resize();\n \t // or when changes previewPadding option from its original value\n  some.options.previewPadding = [20, 30];\n  some.resize();\n  */\n\n\n\tFlicking.prototype.resize = function resize() {\n\t\tvar _utils$css;\n\n\t\tvar conf = this._conf;\n\t\tvar options = this.options;\n\t\tvar panel = conf.panel;\n\t\tvar horizontal = options.horizontal;\n\t\tvar panelSize = void 0;\n\n\t\tif (~~options.previewPadding.join(\"\")) {\n\t\t\tthis._checkPadding();\n\t\t\tpanelSize = panel.size;\n\t\t} else if (horizontal) {\n\t\t\tpanelSize = panel.size = _utils.utils.css(this.$wrapper, \"width\", true);\n\t\t}\n\n\t\tvar maxCoords = this._getDataByDirection([panelSize * (panel.count - 1), 0]);\n\n\t\t// resize elements\n\t\thorizontal && _utils.utils.css(this.$container, { width: maxCoords[0] + panelSize + \"px\" });\n\t\t_utils.utils.css(panel.$list, (_utils$css = {}, _utils$css[horizontal ? \"width\" : \"height\"] = _utils.utils.getUnitValue(panelSize), _utils$css));\n\n\t\t// remove data-height attribute and re-evaluate panel's height\n\t\tif (options.adaptiveHeight) {\n\t\t\tvar $panel = this.$container.querySelectorAll(\"[\" + consts.DATA_HEIGHT + \"]\");\n\n\t\t\tif ($panel.length) {\n\t\t\t\t[].slice.call($panel).forEach(function (v) {\n\t\t\t\t\treturn v.removeAttribute(consts.DATA_HEIGHT);\n\t\t\t\t});\n\n\t\t\t\tthis._setAdaptiveHeight();\n\t\t\t}\n\t\t}\n\n\t\tthis._mcInst.options.max = maxCoords;\n\t\tthis._setMovableCoord(\"setTo\", [panelSize * panel.index, 0], true, 0);\n\n\t\tif (consts.IS_ANDROID2) {\n\t\t\tthis._applyPanelsPos();\n\t\t\tthis._adjustContainerCss(\"end\");\n\t\t}\n\n\t\treturn this;\n\t};\n\n\t/**\n  * Restores an element to its original position when it movement stops while the element is not dragged until a certain distance threshold is reached.\n  * @ko 다음 패널로 바뀌기 전에 패널 이동이 멈췄을 때 원래 패널로 복원한다\n  * @method eg.Flicking#restore\n  * @param {Number} [durationValue=options.duration] Duration of the panel movement (unit: ms) <ko>패널 이동 애니메이션 진행 시간(단위: ms)</ko>\n  * @return {eg.Flicking} An instance of a module itself<ko>모듈 자신의 인스턴스</ko>\n  * @example\n  * let some = new eg.Flicking(\"#mflick\").on({\n  *\t\t\t\tbeforeFlickStart : function(e) {\n  *\t\t\t\t\tif(e.no === 2) {\n  *\t\t\t\t\t\te.stop();  // stop flicking\n  *\t\t\t\t\t\tthis.restore(100);  // restoring to previous position\n  *\t\t\t\t\t}\n  *\t\t\t\t}\n  *\t\t\t);\n  */\n\n\n\tFlicking.prototype.restore = function restore(durationValue) {\n\t\tvar conf = this._conf;\n\t\tvar panel = conf.panel;\n\t\tvar currPos = this._getDataByDirection(this._mcInst.get());\n\t\tvar duration = durationValue;\n\t\tvar destPos = void 0;\n\n\t\t// check if the panel isn't in right position\n\t\tif (currPos[0] !== panel.currIndex * panel.size) {\n\t\t\tconf.customEvent.restoreCall = true;\n\t\t\tduration = _utils.utils.getNumValue(duration, this.options.duration);\n\n\t\t\tthis._revertPanelNo();\n\t\t\tdestPos = this._getDataByDirection([panel.size * panel.index, 0]);\n\n\t\t\tthis._triggerBeforeRestore({ depaPos: currPos, destPos: destPos });\n\t\t\tthis._setMovableCoord(\"setTo\", destPos, true, duration);\n\n\t\t\tif (!duration) {\n\t\t\t\tthis._adjustContainerCss(\"end\");\n\t\t\t\tthis._triggerRestore();\n\t\t\t}\n\n\t\t\t// to handle on api call\n\t\t} else if (panel.changed) {\n\t\t\tthis._revertPanelNo();\n\t\t\tconf.touch.distance = conf.indexToMove = 0;\n\t\t}\n\n\t\treturn this;\n\t};\n\n\t/**\n  * Enables input devices.\n  * @ko 입력 장치를 사용할 수 있게 한다\n  * @method eg.Flicking#enableInput\n  * @return {eg.Flicking} An instance of a module itself <ko>모듈 자신의 인스턴스</ko>\n  */\n\n\n\tFlicking.prototype.enableInput = function enableInput() {\n\t\tthis._mcInst.enableInput();\n\t\treturn this;\n\t};\n\n\t/**\n  * Disables input devices.\n  * @ko 입력 장치를 사용할 수 없게 한다.\n  * @method eg.Flicking#disableInput\n  * @return {eg.Flicking} An instance of a module itself <ko>모듈 자신의 인스턴스</ko>\n  */\n\n\n\tFlicking.prototype.disableInput = function disableInput() {\n\t\tthis._mcInst.disableInput();\n\t\treturn this;\n\t};\n\n\t/**\n  * Destroys elements, properties, and events used in a panel.\n  * @ko 패널에 사용한 엘리먼트와 속성, 이벤트를 해제한다\n  * @method eg.Flicking#destroy\n  */\n\n\n\tFlicking.prototype.destroy = function destroy() {\n\t\tvar conf = this._conf;\n\t\tvar origPanelStyle = conf.origPanelStyle;\n\t\tvar wrapper = origPanelStyle.wrapper;\n\t\tvar container = origPanelStyle.container;\n\t\tvar list = origPanelStyle.list;\n\n\t\t// unwrap container element and restore original inline style\n\t\t// restore wrapper style\n\t\tvar $wrapper = this.$wrapper;\n\n\t\t$wrapper.setAttribute(\"class\", wrapper.className);\n\t\t$wrapper[wrapper.style ? \"setAttribute\" : \"removeAttribute\"](\"style\", wrapper.style);\n\n\t\t// restore container style\n\t\tvar $container = this.$container;\n\t\tvar $children = [].slice.call($container.children);\n\n\t\tif (origPanelStyle.container.className) {\n\t\t\t$container.setAttribute(\"class\", container.className);\n\t\t\t$container[container.style ? \"setAttribute\" : \"removeAttribute\"](\"style\", container.style);\n\t\t} else {\n\t\t\t$children.forEach(function (v) {\n\t\t\t\treturn $wrapper.appendChild(v);\n\t\t\t});\n\t\t\t$container.parentNode.removeChild($container);\n\t\t}\n\n\t\tfor (var i = 0, $el; $el = $children[i]; i++) {\n\t\t\tif (i > list.length - 1) {\n\t\t\t\t$el.parentNode.removeChild($el);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tvar className = list[i].className;\n\t\t\tvar style = list[i].style;\n\n\t\t\t$el[className ? \"setAttribute\" : \"removeAttribute\"](\"class\", className);\n\t\t\t$el[style ? \"setAttribute\" : \"removeAttribute\"](\"style\", style);\n\t\t}\n\n\t\t// unbind events\n\t\tthis._bindEvents(false);\n\t\tthis.off();\n\n\t\t// release resources\n\t\tfor (var x in this) {\n\t\t\tthis[x] = null;\n\t\t}\n\t};\n\n\treturn Flicking;\n}((0, _utils.Mixin)(_component2.default).with(_eventHandler2.default));\n\nexports.default = Flicking;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n/**\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n// internal config values\nvar CONFIG = {\n\tpanel: {\n\t\t$list: null, // panel list\n\t\tindex: 0, // dom index used among process\n\t\tno: 0, // panel no used among process\n\t\tcurrIndex: 0, // current physical dom index\n\t\tcurrNo: 0, // current logical panel number\n\t\tsize: 0, // panel size\n\t\tcount: 0, // total physical panel count\n\t\torigCount: 0, // total count of given original panels\n\t\tchanged: false, // if panel changed\n\t\tanimating: false, // current animating status boolean\n\t\tminCount: 3 // minimum panel count\n\t},\n\ttouch: {\n\t\tholdPos: [0, 0], // hold x,y coordinate\n\t\tdestPos: [0, 0], // destination x,y coordinate\n\t\tdistance: 0, // touch distance pixel of start to end touch\n\t\tdirection: null, // touch direction\n\t\tlastPos: 0, // to determine move on holding\n\t\tholding: false\n\t},\n\tcustomEvent: { // for custom events value\n\t\tflick: true,\n\t\trestore: false,\n\t\trestoreCall: false\n\t},\n\tdirData: [], // direction constant value according horizontal or vertical\n\tindexToMove: 0,\n\t$dummyAnchor: null // For buggy link highlighting on Android 2.x\n};\n\n// default options\nvar OPTIONS = {\n\thwAccelerable: true, // ns.isHWAccelerable(),  // check weather hw acceleration is available\n\tprefix: \"eg-flick\", // prefix value of class name\n\tdeceleration: 0.0006, // deceleration value\n\thorizontal: true, // move direction (true == horizontal, false == vertical)\n\tcircular: false, // circular mode. In this mode at least 3 panels are required.\n\tpreviewPadding: null, // preview padding value in left(up) to right(down) order. In this mode at least 5 panels are required.\n\tbounce: null, // bounce value in left(up) to right(down) order. Works only in non-circular mode.\n\tthreshold: 40, // the distance pixel threshold value for change panel\n\tduration: 100, // duration ms for animation\n\tpanelEffect: function panelEffect(x) {\n\t\treturn 1 - Math.pow(1 - x, 3);\n\t}, // easing function for panel change animation\n\tdefaultIndex: 0, // initial panel index to be shown\n\tinputType: [// input type\n\t\"touch\", \"mouse\"],\n\tthresholdAngle: 45, // the threshold value that determines whether user action is horizontal or vertical (0~90)\n\tadaptiveHeight: false // Set container's height be adaptive according panel's height\n};\n\nexports.CONFIG = CONFIG;\nexports.OPTIONS = OPTIONS;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _consts = __webpack_require__(1);\n\nvar consts = _interopRequireWildcard(_consts);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright (c) 2015 NAVER Corp.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * egjs projects are licensed under the MIT license\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\nexports.default = function (superclass) {\n\treturn function (_superclass) {\n\t\t_inherits(_class, _superclass);\n\n\t\tfunction _class() {\n\t\t\t_classCallCheck(this, _class);\n\n\t\t\treturn _possibleConstructorReturn(this, _superclass.apply(this, arguments));\n\t\t}\n\n\t\t/**\n   * 'hold' event handler\n   */\n\t\t_class.prototype._holdHandler = function _holdHandler(e) {\n\t\t\tvar conf = this._conf;\n\n\t\t\tconf.touch.holdPos = e.pos;\n\t\t\tconf.touch.holding = true;\n\t\t\tconf.panel.changed = false;\n\n\t\t\tthis._adjustContainerCss(\"start\", e.pos);\n\t\t};\n\n\t\t/**\n   * 'change' event handler\n   */\n\n\n\t\t_class.prototype._changeHandler = function _changeHandler(e) {\n\t\t\tvar conf = this._conf;\n\t\t\tvar touch = conf.touch;\n\t\t\tvar posIndex = +!this.options.horizontal;\n\t\t\tvar pos = e.pos[posIndex];\n\t\t\tvar holdPos = touch.holdPos[posIndex];\n\t\t\tvar direction = void 0;\n\t\t\tvar eventRes = null;\n\t\t\tvar movedPx = void 0;\n\n\t\t\tthis._setPointerEvents(e); // for \"click\" bug\n\n\t\t\t/**\n    * This event is fired when panel moves.\n    * @ko 패널이 이동할 때 발생하는 이벤트\n    * @name eg.Flicking#flick\n    * @event\n    * @param {Object} param The object of data to be sent to an event <ko>이벤트에 전달되는 데이터 객체</ko>\n    * @param {String} param.eventType The name of the event<ko>이름명</ko>\n    * @param {Number} param.index Physical index number of the current panel element, which is relative to DOM (@deprecated since 1.3.0)<ko>현재 패널 엘리먼트의 물리적 인덱스 번호. DOM 엘리먼트를 기준으로 하는 인덱스 번호다 (@deprecated since 1.3.0)</ko>\n    * @param {Number} param.no Logical index number of the current panel element, which is relative to the panel content <ko>현재 패널 엘리먼트의 논리적 인덱스 번호. 패널 콘텐츠를 기준으로 하는 인덱스 번호다</ko>\n    * @param {Number} param.direction Direction of the movement (see eg.MovableCoord.DIRECTION_* constant) <ko>이동 방향(eg.MovableCoord.DIRECTION_* constant 참고)</ko>\n    * @param {Array} param.pos Start coordinate <ko>출발점 좌표</ko>\n    * @param {Number} param.pos.0 x-coordinate <ko>x 좌표</ko>\n    * @param {Number} param.pos.1 y-coordinate <ko>y 좌표</ko>\n    * @param {Boolean} param.holding Indicates whether a user holds an element on the screen of the device. <ko>사용자가 기기의 화면을 누르고 있는지 여부</ko>\n    * @param {Number} param.distance Distance moved from then starting point. According the move direction, positive on eg.MovableCoord.DIRECTION_LEFT/UP and negative on eg.MovableCoord.DIRECTION_RIGHT/DOWN <ko>시작점부터 이동된 거리의 값. 이동 방향에 따라 eg.MovableCoord.DIRECTION_LEFT/UP의 경우 양수를 eg.MovableCoord.DIRECTION_RIGHT/DOWN의 경우는 음수를 반환</ko>\n    */\n\t\t\tif (e.hammerEvent) {\n\t\t\t\tdirection = e.hammerEvent.direction;\n\n\t\t\t\t// Adjust direction in case of diagonal touch move\n\t\t\t\tmovedPx = e.hammerEvent[this.options.horizontal ? \"deltaX\" : \"deltaY\"];\n\n\t\t\t\tif (!~conf.dirData.indexOf(direction)) {\n\t\t\t\t\tdirection = conf.dirData[+(Math.abs(touch.lastPos) <= movedPx)];\n\t\t\t\t}\n\n\t\t\t\ttouch.lastPos = movedPx;\n\t\t\t} else {\n\t\t\t\ttouch.lastPos = null;\n\t\t\t}\n\n\t\t\tconf.customEvent.flick && (eventRes = this._triggerEvent(consts.EVENTS.flick, {\n\t\t\t\tpos: e.pos,\n\t\t\t\tholding: e.holding,\n\t\t\t\tdirection: direction || touch.direction,\n\t\t\t\tdistance: pos - (holdPos || (touch.holdPos[posIndex] = pos))\n\t\t\t}));\n\n\t\t\t(eventRes || eventRes === null) && this._setTranslate([-pos, 0]);\n\t\t};\n\n\t\t/**\n   * 'release' event handler\n   */\n\n\n\t\t_class.prototype._releaseHandler = function _releaseHandler(e) {\n\t\t\tvar touch = this._conf.touch;\n\t\t\tvar pos = e.destPos;\n\t\t\tvar posIndex = +!this.options.horizontal;\n\t\t\tvar holdPos = touch.holdPos[posIndex];\n\t\t\tvar panelSize = this._conf.panel.size;\n\n\t\t\ttouch.distance = e.depaPos[posIndex] - touch.holdPos[posIndex];\n\n\t\t\ttouch.direction = this._conf.dirData[+!(touch.holdPos[posIndex] < e.depaPos[posIndex])];\n\n\t\t\tpos[posIndex] = Math.max(holdPos - panelSize, Math.min(holdPos, pos[posIndex]));\n\n\t\t\ttouch.destPos[posIndex] = pos[posIndex] = Math.round(pos[posIndex] / panelSize) * panelSize;\n\n\t\t\ttouch.distance === 0 && this._adjustContainerCss(\"end\");\n\t\t\ttouch.holding = false;\n\n\t\t\tthis._setPointerEvents(); // for \"click\" bug\n\t\t};\n\n\t\t/**\n   * 'animationStart' event handler\n   */\n\n\n\t\t_class.prototype._animationStartHandler = function _animationStartHandler(e) {\n\t\t\tvar conf = this._conf;\n\t\t\tvar panel = conf.panel;\n\t\t\tvar customEvent = conf.customEvent;\n\n\t\t\tpanel.animating = true;\n\n\t\t\tif (!customEvent.restoreCall && e.hammerEvent && this._setPhaseValue(\"start\", {\n\t\t\t\tdepaPos: e.depaPos,\n\t\t\t\tdestPos: e.destPos\n\t\t\t}) === false) {\n\t\t\t\te.stop();\n\t\t\t}\n\n\t\t\tif (e.hammerEvent) {\n\t\t\t\te.duration = this.options.duration;\n\n\t\t\t\te.destPos[+!this.options.horizontal] = panel.size * (panel.index + conf.indexToMove);\n\t\t\t}\n\n\t\t\tif (this._isMovable()) {\n\t\t\t\t!customEvent.restoreCall && (customEvent.restore = false);\n\t\t\t} else {\n\t\t\t\tthis._triggerBeforeRestore(e);\n\t\t\t}\n\t\t};\n\n\t\t/**\n   * 'animationEnd' event handler\n   */\n\n\n\t\t_class.prototype._animationEndHandler = function _animationEndHandler() {\n\t\t\tthis._setPhaseValue(\"end\");\n\n\t\t\tthis._conf.panel.animating = false;\n\t\t\tthis._triggerRestore();\n\t\t};\n\n\t\treturn _class;\n\t}(superclass);\n};\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _flicking = __webpack_require__(2);\n\nvar _flicking2 = _interopRequireDefault(_flicking);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = _flicking2.default; /**\n                                      * Copyright (c) 2015 NAVER Corp.\n                                      * egjs projects are licensed under the MIT license\n                                      */\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.Mixin = exports.utils = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; /**\n                                                                                                                                                                                                                                                                               * Copyright (c) 2015 NAVER Corp.\n                                                                                                                                                                                                                                                                               * egjs projects are licensed under the MIT license\n                                                                                                                                                                                                                                                                               */\n\n\nvar _browser = __webpack_require__(0);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar utils = {\n\t/**\n  * Select or create element\n  * @param {String|HTMLElement} param\n  *  when string given is as HTML tag, then create element\n  *  otherwise it returns selected elements\n  * @returns {HTMLElement}\n  */\n\t$: function $(param) {\n\t\tvar el = null;\n\n\t\tif (typeof param === \"string\") {\n\t\t\t// check if string is HTML tag format\n\t\t\tvar match = param.match(/^<([a-z]+)\\s*([^>]*)>/);\n\n\t\t\t// creating element\n\t\t\tif (match) {\n\t\t\t\tel = _browser.document.createElement(match[1]);\n\n\t\t\t\t// attributes\n\t\t\t\tmatch.length === 3 && match[2].split(\" \").forEach(function (v) {\n\t\t\t\t\tvar attr = v.split(\"=\");\n\n\t\t\t\t\tel.setAttribute(attr[0], attr[1].trim().replace(/(^[\"']|[\"']$)/g, \"\"));\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tel = _browser.document.querySelectorAll(param);\n\n\t\t\t\tif (!el.length) {\n\t\t\t\t\tel = null;\n\t\t\t\t} else if (el.length === 1) {\n\t\t\t\t\tel = el[0];\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (param.nodeName && param.nodeType === 1) {\n\t\t\tel = param;\n\t\t}\n\n\t\treturn el;\n\t},\n\n\n\t/**\n  * Check if is array\n  * @param arr\n  * @returns {Boolean}\n  */\n\tisArray: function isArray(arr) {\n\t\treturn arr && arr.constructor === Array;\n\t},\n\n\n\t/**\n  * Check if is object\n  * @param {Object} obj\n  * @returns {Boolean}\n  */\n\tisObject: function isObject(obj) {\n\t\treturn obj && !obj.nodeType && (typeof obj === \"undefined\" ? \"undefined\" : _typeof(obj)) === \"object\" && !this.isArray(obj);\n\t},\n\n\n\t/**\n  * Merge object returning new object\n  * @param {Object} target\n  * @param {Object} objectN\n  * @returns {Object} merged target object\n  * @example\n  *  var target = { a: 1 };\n  *  utils.extend(target, { b: 2, c: 3 });\n  *  target;  // { a: 1, b: 2, c: 3 };\n  */\n\textend: function extend(target) {\n\t\tvar _this = this;\n\n\t\tfor (var _len = arguments.length, objectN = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t\t\tobjectN[_key - 1] = arguments[_key];\n\t\t}\n\n\t\tif (!objectN.length || objectN.length === 1 && !objectN[0]) {\n\t\t\treturn target;\n\t\t}\n\n\t\tvar source = objectN.shift();\n\n\t\tif (this.isObject(target) && this.isObject(source)) {\n\t\t\tObject.keys(source).forEach(function (key) {\n\t\t\t\tvar value = source[key];\n\n\t\t\t\tif (_this.isObject(value)) {\n\t\t\t\t\t!target[key] && (target[key] = {});\n\n\t\t\t\t\ttarget[key] = _this.extend(target[key], value);\n\t\t\t\t} else {\n\t\t\t\t\ttarget[key] = _this.isArray(value) ? value.concat() : value;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn this.extend.apply(this, [target].concat(objectN));\n\t},\n\n\n\t/**\n  * Get or set the style value or apply\n  * @param {HTMLElement} el\n  * @param {String|Object} style\n  *  String: return style property value\n  *  Object: set style value\n  * @parma {Boolean} getAsNumber - get the value as number\n  * @returns {String|HTMLElement}\n  */\n\tcss: function css(el, style, getAsNumber) {\n\t\tif (typeof style === \"string\") {\n\t\t\tvar value = _browser.window.getComputedStyle(el)[style];\n\n\t\t\treturn getAsNumber ? this.getNumValue(value) : value;\n\t\t} else {\n\t\t\tvar applyStyle = function applyStyle(target, source) {\n\t\t\t\treturn Object.keys(source).forEach(function (v) {\n\t\t\t\t\ttarget[v] = source[v];\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tthis.isArray(el) ? el.forEach(function (v) {\n\t\t\t\treturn applyStyle(v.style, style);\n\t\t\t}) : applyStyle(el.style, style);\n\t\t}\n\n\t\treturn el;\n\t},\n\n\n\t/**\n  * Check and parse value to number\n  * @param {Number|String} val\n  * @param {Number} defVal\n  * @return {Number}\n  */\n\tgetNumValue: function getNumValue(val, defVal) {\n\t\tvar num = val;\n\n\t\treturn isNaN(num = parseInt(num, 10)) ? defVal : num;\n\t},\n\n\n\t/**\n  * Return unit formatted value\n  * @param {Number|String} val\n  * @return {String} val Value formatted with unit\n  */\n\tgetUnitValue: function getUnitValue(val) {\n\t\tvar rx = /(?:[a-z]{2,}|%)$/;\n\n\t\treturn (parseInt(val, 10) || 0) + (String(val).match(rx) || \"px\");\n\t},\n\n\n\t/**\n  * Get element's outer value\n  * @param {HTMLElement} el\n  * @param {String} type - [outerWidth|outerHeight]\n  * @returns {Number} outer's value\n  */\n\tgetOuter: function getOuter(el, type) {\n\t\tvar style = _browser.window.getComputedStyle(el);\n\t\tvar margin = type === \"outerWidth\" ? [\"marginLeft\", \"marginRight\"] : [\"marginTop\", \"marginBottom\"];\n\n\t\treturn this.getNumValue(style[type.replace(\"outer\", \"\").toLocaleLowerCase()]) + this.getNumValue(style[margin[0]]) + this.getNumValue(style[margin[1]]);\n\t},\n\n\n\t/**\n  * Get element's outerWidth value with margin\n  * @param {HTMLElement} el\n  * @returns {Number}\n  */\n\touterWidth: function outerWidth(el) {\n\t\treturn this.getOuter(el, \"outerWidth\");\n\t},\n\n\n\t/**\n  * Get element's outerHeight value with margin\n  * @param {HTMLElement} el\n  * @returns {Number}\n  */\n\touterHeight: function outerHeight(el) {\n\t\treturn this.getOuter(el, \"outerHeight\");\n\t},\n\n\n\t/**\n  * Checks whether hardware acceleration is enabled.\n  *\n  * @ko 하드웨어 가속을 사용할 수 있는 환경인지 확인한다\n  * @method eg#isHWAccelerable\n  * @return {Boolean} Indicates whether hardware acceleration is enabled. <ko>하드웨어 가속 사용 가능 여부</ko>\n  */\n\tisHWAccelerable: function isHWAccelerable() {\n\t\tvar ua = _browser.window.navigator.userAgent;\n\t\tvar result = false;\n\t\tvar match = void 0;\n\n\t\t// chrome 25- has a text blur bug (except Samsung's sbrowser)\n\t\tif (match = ua.match(/Chrome\\/(\\d+)/)) {\n\t\t\tresult = match[1] >= \"25\";\n\t\t} else if (/ie|edge|firefox|safari|inapp/.test(ua)) {\n\t\t\tresult = true;\n\t\t} else if (match = ua.match(/Android ([\\d.]+)/)) {\n\t\t\tvar version = match[1];\n\t\t\tvar useragent = (ua.match(/\\(.*\\)/) || [null])[0];\n\n\t\t\t// android 4.1+ blacklist\n\t\t\t// EK-GN120 : Galaxy Camera, SM-G386F : Galaxy Core LTE\n\t\t\t// SHW-M420 : Galaxy Nexus , SHW-M200 : NexusS , GT-S7562 : Galaxy S duos\n\t\t\tresult = version >= \"4.1.0\" && !/EK-GN120|SM-G386F/.test(useragent) || version >= \"4.0.3\" && /SHW-|SHV-|GT-|SCH-|SGH-|SPH-|LG-F160|LG-F100|LG-F180|LG-F200|EK-|IM-A|LG-F240|LG-F260/.test(useragent) && !/SHW-M420|SHW-M200|GT-S7562/.test(useragent);\n\t\t}\n\n\t\tthis.isHWAccelerable = function () {\n\t\t\treturn result;\n\t\t};\n\t\treturn result;\n\t},\n\n\n\t/**\n  * Returns the syntax of the translate style which is applied to CSS transition properties.\n  *\n  * @ko CSS 트랜지션 속성에 적용할 translate 스타일 구문을 반환한다\n  * @method eg#translate\n  * @param {String} x Distance to move along the X axis <ko>x축을 따라 이동할 거리</ko>\n  * @param {String} y Distance to move along the Y axis <ko>y축을 따라 이동할 거리</ko>\n  * @param {Boolean} [isHA] Force hardware acceleration <ko>하드웨어 가속 사용 여부</ko>\n  * @return {String} Syntax of the translate style <ko>translate 스타일 구문</ko>\n  */\n\ttranslate: function translate(x, y, isHA) {\n\t\treturn isHA || false ? \"translate3d(\" + x + \",\" + y + \",0)\" : \"translate(\" + x + \",\" + y + \")\";\n\t},\n\n\n\t// 1. user press one position on screen.\n\t// 2. user moves to the other position on screen.\n\t// 3. when user releases fingers on screen, 'click' event is fired at previous position.\n\thasClickBug: function hasClickBug() {\n\t\tvar ua = _browser.window.navigator.userAgent;\n\t\tvar result = /Safari/.test(ua);\n\n\t\tthis.hasClickBug = function () {\n\t\t\treturn result;\n\t\t};\n\t\treturn result;\n\t}\n};\n\nvar MixinBuilder = function () {\n\tfunction MixinBuilder(superclass) {\n\t\t_classCallCheck(this, MixinBuilder);\n\n\t\tthis.superclass = superclass || function () {\n\t\t\tfunction _class() {\n\t\t\t\t_classCallCheck(this, _class);\n\t\t\t}\n\n\t\t\treturn _class;\n\t\t}();\n\t}\n\n\tMixinBuilder.prototype.with = function _with() {\n\t\tfor (var _len2 = arguments.length, mixins = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n\t\t\tmixins[_key2] = arguments[_key2];\n\t\t}\n\n\t\treturn mixins.reduce(function (c, m) {\n\t\t\treturn m(c);\n\t\t}, this.superclass);\n\t};\n\n\treturn MixinBuilder;\n}();\n\nvar Mixin = function Mixin(superclass) {\n\treturn new MixinBuilder(superclass);\n};\n\nexports.utils = utils;\nexports.Mixin = Mixin;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=flicking.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@egjs/flicking/dist/flicking.js\n// module id = 3\n// module chunks = 0 1","/*!\n * Copyright (c) 2017 NAVER corp\r\n * @egjs/movablecoord projects are licensed under the MIT <https://naver.github.io/egjs/license.txt> license\r\n * \r\n * @egjs/movablecoord JavaScript library\r\n * https://github.com/naver/egjs-movablecoord\r\n * \r\n * @version 2.0.0-rc.2\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@egjs/component\"), require(\"hammerjs\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"MovableCoord\", [\"@egjs/component\", \"hammerjs\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MovableCoord\"] = factory(require(\"@egjs/component\"), require(\"hammerjs\"));\n\telse\n\t\troot[\"eg\"] = root[\"eg\"] || {}, root[\"eg\"][\"MovableCoord\"] = factory(root[\"eg\"][\"Component\"], root[\"Hammer\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_9__, __WEBPACK_EXTERNAL_MODULE_10__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 8);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.SUPPORT_TOUCH = exports.UNIQUEKEY = exports.DIRECTION = undefined;\n\nvar _browser = __webpack_require__(1);\n\n/**\n * @name eg.MovableCoord.DIRECTION_NONE\n * @constant\n * @type {Number}\n */\n/**\n * @name eg.MovableCoord.DIRECTION_LEFT\n * @constant\n * @type {Number}\n*/\n/**\n * @name eg.MovableCoord.DIRECTION_RIGHT\n * @constant\n * @type {Number}\n*/\n/**\n * @name eg.MovableCoord.DIRECTION_UP\n * @constant\n * @type {Number}\n */\n/**\n * @name eg.MovableCoord.DIRECTION_DOWN\n * @constant\n * @type {Number}\n*/\n/**\n * @name eg.MovableCoord.DIRECTION_HORIZONTAL\n * @constant\n * @type {Number}\n*/\n/**\n * @name eg.MovableCoord.DIRECTION_VERTICAL\n * @constant\n * @type {Number}\n*/\n/**\n * @name eg.MovableCoord.DIRECTION_ALL\n * @constant\n * @type {Number}\n*/\nvar direction = {\n  DIRECTION_NONE: 1,\n  DIRECTION_LEFT: 2,\n  DIRECTION_RIGHT: 4,\n  DIRECTION_UP: 8,\n  DIRECTION_DOWN: 16,\n  DIRECTION_HORIZONTAL: 2 | 4,\n  DIRECTION_VERTICAL: 8 | 16\n};\n\ndirection.DIRECTION_ALL = direction.DIRECTION_HORIZONTAL | direction.DIRECTION_VERTICAL;\nvar DIRECTION = exports.DIRECTION = direction;\nvar UNIQUEKEY = exports.UNIQUEKEY = \"__MOVABLECOORD__\";\nvar SUPPORT_TOUCH = exports.SUPPORT_TOUCH = \"ontouchstart\" in _browser.window;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n/* eslint-disable no-new-func, no-nested-ternary */\nvar win = typeof window !== \"undefined\" && window.Math === Math ? window : typeof self !== \"undefined\" && self.Math === Math ? self : Function(\"return this\")();\n/* eslint-enable no-new-func, no-nested-ternary */\n\nexports.window = win;\nvar document = exports.document = win.document;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _consts = __webpack_require__(0);\n\nvar Coordinate = {\n\t// get user's direction\n\tgetDirectionByAngle: function getDirectionByAngle(angle, thresholdAngle) {\n\t\tif (thresholdAngle < 0 || thresholdAngle > 90) {\n\t\t\treturn _consts.DIRECTION.DIRECTION_NONE;\n\t\t}\n\t\tvar toAngle = Math.abs(angle);\n\n\t\treturn toAngle > thresholdAngle && toAngle < 180 - thresholdAngle ? _consts.DIRECTION.DIRECTION_VERTICAL : _consts.DIRECTION.DIRECTION_HORIZONTAL;\n\t},\n\tisHorizontal: function isHorizontal(direction, userDirection) {\n\t\treturn direction === _consts.DIRECTION.DIRECTION_ALL || direction & _consts.DIRECTION.DIRECTION_HORIZONTAL && userDirection & _consts.DIRECTION.DIRECTION_HORIZONTAL;\n\t},\n\tisVertical: function isVertical(direction, userDirection) {\n\t\treturn direction === _consts.DIRECTION.DIRECTION_ALL || direction & _consts.DIRECTION.DIRECTION_VERTICAL && userDirection & _consts.DIRECTION.DIRECTION_VERTICAL;\n\t},\n\tgetPointOfIntersection: function getPointOfIntersection(depaPos, destPos, min, max, circular, bounce) {\n\t\tvar boxLT = [min[0] - bounce[3], min[1] - bounce[0]];\n\t\tvar boxRB = [max[0] + bounce[1], max[1] + bounce[2]];\n\t\tvar toDestPos = destPos.concat();\n\n\t\tvar xd = destPos[0] - depaPos[0];\n\t\tvar yd = destPos[1] - depaPos[1];\n\n\t\tif (!circular[3]) {\n\t\t\ttoDestPos[0] = Math.max(boxLT[0], toDestPos[0]);\n\t\t} // left\n\t\tif (!circular[1]) {\n\t\t\ttoDestPos[0] = Math.min(boxRB[0], toDestPos[0]);\n\t\t} // right\n\t\ttoDestPos[1] = xd ? depaPos[1] + yd / xd * (toDestPos[0] - depaPos[0]) : toDestPos[1];\n\n\t\tif (!circular[0]) {\n\t\t\ttoDestPos[1] = Math.max(boxLT[1], toDestPos[1]);\n\t\t} // up\n\t\tif (!circular[2]) {\n\t\t\ttoDestPos[1] = Math.min(boxRB[1], toDestPos[1]);\n\t\t} // down\n\t\ttoDestPos[0] = yd ? depaPos[0] + xd / yd * (toDestPos[1] - depaPos[1]) : toDestPos[0];\n\t\treturn [Math.min(max[0], Math.max(min[0], toDestPos[0])), Math.min(max[1], Math.max(min[1], toDestPos[1]))];\n\t},\n\n\t// determine outside\n\tisOutside: function isOutside(pos, min, max) {\n\t\treturn pos[0] < min[0] || pos[1] < min[1] || pos[0] > max[0] || pos[1] > max[1];\n\t},\n\n\t// from outside to outside\n\tisOutToOut: function isOutToOut(pos, destPos, min, max) {\n\t\treturn (pos[0] < min[0] || pos[0] > max[0] || pos[1] < min[1] || pos[1] > max[1]) && (destPos[0] < min[0] || destPos[0] > max[0] || destPos[1] < min[1] || destPos[1] > max[1]);\n\t},\n\tgetNextOffsetPos: function getNextOffsetPos(speeds, deceleration) {\n\t\tvar normalSpeed = Math.sqrt(speeds[0] * speeds[0] + speeds[1] * speeds[1]);\n\t\tvar duration = Math.abs(normalSpeed / -deceleration);\n\n\t\treturn [speeds[0] / 2 * duration, speeds[1] / 2 * duration];\n\t},\n\tgetDurationFromPos: function getDurationFromPos(pos, deceleration) {\n\t\tvar normalPos = Math.sqrt(pos[0] * pos[0] + pos[1] * pos[1]);\n\t\tvar duration = Math.sqrt(normalPos / deceleration * 2);\n\n\t\t// when duration is under 100, then value is zero\n\t\treturn duration < 100 ? 0 : duration;\n\t},\n\tisCircular: function isCircular(destPos, min, max, circular) {\n\t\treturn circular[0] && destPos[1] < min[1] || circular[1] && destPos[0] > max[0] || circular[2] && destPos[1] > max[1] || circular[3] && destPos[0] < min[0];\n\t},\n\tgetCircularPos: function getCircularPos(pos, min, max, circular) {\n\t\tvar toPos = pos.concat();\n\t\tvar length = [max[0] - min[0], max[1] - min[1]];\n\n\t\tif (circular[0] && toPos[1] < min[1]) {\n\t\t\t// up\n\t\t\ttoPos[1] = (toPos[1] - min[1]) % length[1] + max[1];\n\t\t}\n\t\tif (circular[1] && toPos[0] > max[0]) {\n\t\t\t// right\n\t\t\ttoPos[0] = (toPos[0] - max[0]) % length[0] + min[0];\n\t\t}\n\t\tif (circular[2] && toPos[1] > max[1]) {\n\t\t\t// down\n\t\t\ttoPos[1] = (toPos[1] - max[1]) % length[1] + min[1];\n\t\t}\n\t\tif (circular[3] && toPos[0] < min[0]) {\n\t\t\t// left\n\t\t\ttoPos[0] = (toPos[0] - min[0]) % length[0] + max[0];\n\t\t}\n\n\t\ttoPos[0] = +toPos[0].toFixed(5);\n\t\ttoPos[1] = +toPos[1].toFixed(5);\n\t\treturn toPos;\n\t}\n};\n\nexports.default = Coordinate;\nmodule.exports = exports[\"default\"];\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.$ = exports.Mixin = undefined;\n\nvar _browser = __webpack_require__(1);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction $(param) {\n\tvar multi = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n\tvar el = void 0;\n\n\tif (typeof param === \"string\") {\n\t\t// String (HTML, Selector)\n\t\t// check if string is HTML tag format\n\t\tvar match = param.match(/^<([a-z]+)\\s*([^>]*)>/);\n\n\t\t// creating element\n\t\tif (match) {\n\t\t\t// HTML\n\t\t\tvar dummy = _browser.document.createElement(\"div\");\n\n\t\t\tdummy.innerHTML = param;\n\t\t\tel = Array.prototype.slice.call(dummy.childNodes);\n\t\t} else {\n\t\t\t// Selector\n\t\t\tel = Array.prototype.slice.call(_browser.document.querySelectorAll(param));\n\t\t}\n\t\tif (!multi) {\n\t\t\tel = el.length >= 1 ? el[0] : undefined;\n\t\t}\n\t} else if (param.nodeName && param.nodeType === 1) {\n\t\t// HTMLElement\n\t\tel = param;\n\t} else if (_browser.window.jQuery && param instanceof jQuery) {\n\t\t// jQuery\n\t\tel = multi ? param.toArray() : param.get(0);\n\t}\n\n\treturn el;\n}\n\nvar MixinBuilder = function () {\n\tfunction MixinBuilder(superclass) {\n\t\t_classCallCheck(this, MixinBuilder);\n\n\t\tthis.superclass = superclass || function () {\n\t\t\tfunction _class() {\n\t\t\t\t_classCallCheck(this, _class);\n\t\t\t}\n\n\t\t\treturn _class;\n\t\t}();\n\t}\n\n\tMixinBuilder.prototype.with = function _with() {\n\t\tfor (var _len = arguments.length, mixins = Array(_len), _key = 0; _key < _len; _key++) {\n\t\t\tmixins[_key] = arguments[_key];\n\t\t}\n\n\t\treturn mixins.reduce(function (c, m) {\n\t\t\treturn m(c);\n\t\t}, this.superclass);\n\t};\n\n\treturn MixinBuilder;\n}();\n\nvar Mixin = function Mixin(superclass) {\n\treturn new MixinBuilder(superclass);\n};\n\nexports.Mixin = Mixin;\nexports.$ = $;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _component = __webpack_require__(9);\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _HammerManager = __webpack_require__(5);\n\nvar _HammerManager2 = _interopRequireDefault(_HammerManager);\n\nvar _eventHandler = __webpack_require__(7);\n\nvar _eventHandler2 = _interopRequireDefault(_eventHandler);\n\nvar _animationHandler = __webpack_require__(6);\n\nvar _animationHandler2 = _interopRequireDefault(_animationHandler);\n\nvar _consts = __webpack_require__(0);\n\nvar _utils = __webpack_require__(3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * A module used to change the information of user action entered by various input devices such as touch screen or mouse into logical coordinates within the virtual coordinate system. The coordinate information sorted by time events occurred is provided if animations are made by user actions. You can implement a user interface by applying the logical coordinates provided. For more information on the eg.MovableCoord module, see demos.\n * @ko 터치 입력 장치나 마우스와 같은 다양한 입력 장치로 전달 받은 사용자의 동작을 가상 좌표계의 논리적 좌표로 변경하는 모듈. 사용자의 동작으로 애니메이션이 일어나면 시간순으로 변경되는 좌표 정보도 제공한다. 변경된 논리적 좌표를 반영해 UI를 구현할 수 있다. eg.MovableCoord 모듈의 자세한 작동 방식은 데모를 참고한다.\n * @alias eg.MovableCoord\n * @extends eg.Component\n *\n * @codepen {\"id\":\"jPPqeR\", \"ko\":\"MovableCoord Cube 예제\", \"en\":\"MovableCoord Cube example\", \"collectionId\":\"AKpkGW\", \"height\": 403}\n * @support {\"ie\": \"10+\", \"ch\" : \"latest\", \"ff\" : \"latest\",  \"sf\" : \"latest\", \"edge\" : \"latest\", \"ios\" : \"7+\", \"an\" : \"2.3+ (except 3.x)\"}\n */\nvar MovableCoord = function (_Mixin$with) {\n\t_inherits(MovableCoord, _Mixin$with);\n\n\t/**\n  * @param {Object} options The option object of the eg.MovableCoord module<ko>eg.MovableCoord 모듈의 옵션 객체</ko>\n  * @param {Array} options.min The minimum value of X and Y coordinates <ko>좌표계의 최솟값</ko>\n  * @param {Number} [options.min.0=0] The X coordinate of the minimum <ko>최소 x좌표</ko>\n  * @param {Number} [options.min.1=0] The Y coordinate of the minimum <ko>최소 y좌표</ko>\n  *\n  * @param {Array} options.max The maximum value of X and Y coordinates <ko>좌표계의 최댓값</ko>\n  * @param {Number} [options.max.0=100] The X coordinate of the maximum<ko>최대 x좌표</ko>\n  * @param {Number} [options.max.1=100] The Y coordinate of the maximum<ko>최대 y좌표</ko>\n  *\n  * @param {Array} options.bounce The size of bouncing area. The coordinates can exceed the coordinate area as much as the bouncing area based on user action. If the coordinates does not exceed the bouncing area when an element is dragged, the coordinates where bouncing effects are applied are retuned back into the coordinate area<ko>바운스 영역의 크기. 사용자의 동작에 따라 좌표가 좌표 영역을 넘어 바운스 영역의 크기만큼 더 이동할 수 있다. 사용자가 끌어다 놓는 동작을 했을 때 좌표가 바운스 영역에 있으면, 바운스 효과가 적용된 좌표가 다시 좌표 영역 안으로 들어온다</ko>\n  * @param {Boolean} [options.bounce.0=10] The size of top area <ko>위쪽 바운스 영역의 크기</ko>\n  * @param {Boolean} [options.bounce.1=10] The size of right area <ko>오른쪽 바운스 영역의 크기</ko>\n  * @param {Boolean} [options.bounce.2=10] The size of bottom area <ko>아래쪽 바운스 영역의 크기</ko>\n  * @param {Boolean} [options.bounce.3=10] The size of left area <ko>왼쪽 바운스 영역의 크기</ko>\n  *\n  * @param {Array} options.margin The size of accessible space outside the coordinate area. If an element is dragged outside the coordinate area and then dropped, the coordinates of the element are returned back into the coordinate area. The size of margins that can be exceeded <ko>−\t좌표 영역을 넘어 이동할 수 있는 바깥 영역의 크기. 사용자가 좌표를 바깥 영역까지 끌었다가 놓으면 좌표가 좌표 영역 안으로 들어온다.</ko>\n  * @param {Boolean} [options.margin.0=0] The size of top margin <ko>위쪽 바깥 영역의 크기</ko>\n  * @param {Boolean} [options.margin.1=0] The size of right margin <ko>오른쪽 바깥 영역의 크기</ko>\n  * @param {Boolean} [options.margin.2=0] The size of bottom margin <ko>아래쪽 바깥 영역의 크기</ko>\n  * @param {Boolean} [options.margin.3=0] The size of left margin <ko>왼쪽 바깥 영역의 크기</ko>\n  * @param {Array} options.circular Indicates whether a circular element is available. If it is set to \"true\" and an element is dragged outside the coordinate area, the element will appear on the other side.<ko>순환 여부. 'true'로 설정한 방향의 좌표 영역 밖으로 엘리먼트가 이동하면 반대 방향에서 엘리먼트가 나타난다</ko>\n  * @param {Boolean} [options.circular.0=false] Indicates whether to circulate to top <ko>위로 순환 여부</ko>\n  * @param {Boolean} [options.circular.1=false] Indicates whether to circulate to right <ko>오른쪽으로 순환 여부</ko>\n  * @param {Boolean} [options.circular.2=false] Indicates whether to circulate to bottom  <ko>아래로 순환 여부</ko>\n  * @param {Boolean} [options.circular.3=false] Indicates whether to circulate to left  <ko>왼쪽으로 순환 여부</ko>\n  *\n  * @param {Function} [options.easing=easing.easeOutCubic] The easing function to apply to an animation. If you want to try a different easing function, use the jQuery easing plugin ({@link http://gsgd.co.uk/sandbox/jquery/easing}) or the jQuery UI easing library ({@link https://jqueryui.com/easing}) <ko>애니메이션에 적용할 easing 함수. 다른 easing 함수를 사용하려면 jQuery easing 플러그인({@link http://gsgd.co.uk/sandbox/jquery/easing})이나, jQuery UI easing 라이브러리({@link https://jqueryui.com/easing})를 사용한다</ko>\n  * @param {Number} [options.maximumDuration=Infinity] Maximum duration of the animation <ko>가속도에 의해 애니메이션이 동작할 때의 최대 좌표 이동 시간</ko>\n  * @param {Number} [options.deceleration=0.0006] Deceleration of the animation where acceleration is manually enabled by user. A higher value indicates shorter running time. <ko>사용자의 동작으로 가속도가 적용된 애니메이션의 감속도. 값이 높을수록 애니메이션 실행 시간이 짧아진다</ko>\n  **/\n\tfunction MovableCoord(options) {\n\t\t_classCallCheck(this, MovableCoord);\n\n\t\tvar _this = _possibleConstructorReturn(this, _Mixin$with.call(this));\n\n\t\t_extends(_this.options = {\n\t\t\tmin: [0, 0],\n\t\t\tmax: [100, 100],\n\t\t\tbounce: [10, 10, 10, 10],\n\t\t\tmargin: [0, 0, 0, 0],\n\t\t\tcircular: [false, false, false, false],\n\t\t\teasing: function easeOutCubic(x) {\n\t\t\t\treturn 1 - Math.pow(1 - x, 3);\n\t\t\t},\n\t\t\tmaximumDuration: Infinity,\n\t\t\tdeceleration: 0.0006\n\t\t}, options);\n\t\t_this._reviseOptions();\n\t\t_this._hammerManager = new _HammerManager2.default();\n\t\t_this._pos = _this.options.min.concat();\n\t\treturn _this;\n\t}\n\n\t/**\n  * Registers an element to use the eg.MovableCoord module.\n  * @ko eg.MovableCoord 모듈을 사용할 엘리먼트를 등록한다\n  * @param {HTMLElement|String|jQuery} element An element to use the eg.MovableCoord module<ko>−\teg.MovableCoord 모듈을 사용할 엘리먼트</ko>\n  * @param {Object} options The option object of the bind() method <ko>bind() 메서드의 옵션 객체</ko>\n  * @param {Number} [options.direction=eg.MovableCoord.DIRECTION_ALL] Coordinate direction that a user can move<br>- eg.MovableCoord.DIRECTION_ALL: All directions available.<br>- eg.MovableCoord.DIRECTION_HORIZONTAL: Horizontal direction only.<br>- eg.MovableCoord.DIRECTION_VERTICAL: Vertical direction only<ko>사용자의 동작으로 움직일 수 있는 좌표의 방향.<br>- eg.MovableCoord.DIRECTION_ALL: 모든 방향으로 움직일 수 있다.<br>- eg.MovableCoord.DIRECTION_HORIZONTAL: 가로 방향으로만 움직일 수 있다.<br>- eg.MovableCoord.DIRECTION_VERTICAL: 세로 방향으로만 움직일 수 있다.</ko>\n  * @param {Array} options.scale Coordinate scale that a user can move<ko>사용자의 동작으로 이동하는 좌표의 배율</ko>\n  * @param {Number} [options.scale.0=1] X-axis scale <ko>x축 배율</ko>\n  * @param {Number} [options.scale.1=1] Y-axis scale <ko>y축 배율</ko>\n  * @param {Number} [options.thresholdAngle=45] The threshold value that determines whether user action is horizontal or vertical (0~90) <ko>사용자의 동작이 가로 방향인지 세로 방향인지 판단하는 기준 각도(0~90)</ko>\n  * @param {Number} [options.interruptable=true] Indicates whether an animation is interruptible.<br>- true: It can be paused or stopped by user action or the API.<br>- false: It cannot be paused or stopped by user action or the API while it is running.<ko>진행 중인 애니메이션 중지 가능 여부.<br>- true: 사용자의 동작이나 API로 애니메이션을 중지할 수 있다.<br>- false: 애니메이션이 진행 중일 때는 사용자의 동작이나 API가 적용되지 않는다</ko>\n  * @param {Array} [options.inputType] Types of input devices. (default: [\"touch\", \"mouse\"])<br>- touch: Touch screen<br>- mouse: Mouse <ko>입력 장치 종류.(기본값: [\"touch\", \"mouse\"])<br>- touch: 터치 입력 장치<br>- mouse: 마우스</ko>\n  *\n  * @return {eg.MovableCoord} An instance of a module itself <ko>모듈 자신의 인스턴스</ko>\n  */\n\n\n\tMovableCoord.prototype.bind = function bind(element, options) {\n\t\tthis._hammerManager.add(element, options, this);\n\t\treturn this;\n\t};\n\t/**\n  * Detaches an element using the eg.MovableCoord module.\n  * @ko eg.MovableCoord 모듈을 사용하는 엘리먼트를 해제한다\n  * @param {HTMLElement|String|jQuery} element An element from which the eg.MovableCoord module is detached<ko>eg.MovableCoord 모듈을 해제할 엘리먼트</ko>\n  * @return {eg.MovableCoord} An instance of a module itself<ko>모듈 자신의 인스턴스</ko>\n  */\n\n\n\tMovableCoord.prototype.unbind = function unbind(element) {\n\t\tthis._hammerManager.remove(element);\n\t\treturn this;\n\t};\n\n\t/**\n  * get a hammer instance from elements using the eg.MovableCoord module.\n  * @ko eg.MovableCoord 모듈을 사용하는 엘리먼트에서 hammer 객체를 얻는다\n  * @param {HTMLElement|String|jQuery} element An element from which the eg.MovableCoord module is using<ko>eg.MovableCoord 모듈을 사용하는 엘리먼트</ko>\n  * @return {external:Hammer|null} An instance of Hammer.JS<ko>Hammer.JS의 인스턴스</ko>\n  */\n\n\n\tMovableCoord.prototype.getHammer = function getHammer(element) {\n\t\treturn this._hammerManager.getHammer(element);\n\t};\n\n\t/**\n  * Enables input devices\n  * @ko 입력 장치를 사용할 수 있게 한다\n  * @param {HTMLElement|String|jQuery} [element] An element from which the eg.MovableCoord module is using (if the element parameter is not present, it applies to all binded elements)<ko>eg.MovableCoord 모듈을 \t사용하는 엘리먼트 (element 파라미터가 존재하지 않을 경우, 바인드된 모든 엘리먼트에 적용된다)</ko>\n  * @return {eg.MovableCoord} An instance of a module itself <ko>자신의 인스턴스</ko>\n */\n\n\n\tMovableCoord.prototype.enableInput = function enableInput(element) {\n\t\treturn this._hammerManager.inputControl(true, element);\n\t};\n\n\t/**\n  * Disables input devices\n  * @ko 입력 장치를 사용할 수 없게 한다.\n  * @param {HTMLElement|String|jQuery} [element] An element from which the eg.MovableCoord module is using (if the element parameter is not present, it applies to all binded elements)<<ko>eg.MovableCoord 모듈을 \t사용하는 엘리먼트 (element 파라미터가 존재하지 않을 경우, 바인드된 모든 엘리먼트에 적용된다)</ko>\n  * @return {eg.MovableCoord} An instance of a module itself <ko>자신의 인스턴스</ko>\n  */\n\n\n\tMovableCoord.prototype.disableInput = function disableInput(element) {\n\t\treturn this._hammerManager.inputControl(false, element);\n\t};\n\n\t/**\n  * set up 'css' expression\n  * @private\n  */\n\n\n\tMovableCoord.prototype._reviseOptions = function _reviseOptions() {\n\t\tvar _this2 = this;\n\n\t\tvar key = void 0;\n\n\t\t[\"bounce\", \"margin\", \"circular\"].forEach(function (v) {\n\t\t\tkey = _this2.options[v];\n\t\t\tif (key != null) {\n\t\t\t\tif (key.constructor === Array) {\n\t\t\t\t\t_this2.options[v] = key.length === 2 ? key.concat(key) : key.concat();\n\t\t\t\t} else if (/string|number|boolean/.test(typeof key === \"undefined\" ? \"undefined\" : _typeof(key))) {\n\t\t\t\t\t_this2.options[v] = [key, key, key, key];\n\t\t\t\t} else {\n\t\t\t\t\t_this2.options[v] = null;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\t/**\n  * Returns the current position of the logical coordinates.\n  * @ko 논리적 좌표의 현재 위치를 반환한다\n  * @return {Array} pos <ko>좌표</ko>\n  * @return {Number} pos.0 The X coordinate <ko>x 좌표</ko>\n  * @return {Number} pos.1 The Y coordinate <ko>y 좌표</ko>\n  */\n\n\n\tMovableCoord.prototype.get = function get() {\n\t\treturn this._pos.concat();\n\t};\n\n\t/**\n  * Destroys elements, properties, and events used in a module.\n  * @ko 모듈에 사용한 엘리먼트와 속성, 이벤트를 해제한다.\n  */\n\n\n\tMovableCoord.prototype.destroy = function destroy() {\n\t\tthis.off();\n\t\tthis._hammerManager.destroy();\n\t};\n\n\treturn MovableCoord;\n}((0, _utils.Mixin)(_component2.default).with(_eventHandler2.default, _animationHandler2.default));\n\n_extends(MovableCoord, _consts.DIRECTION);\nexports.default = MovableCoord;\nmodule.exports = exports[\"default\"];\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _hammerjs = __webpack_require__(10);\n\nvar _hammerjs2 = _interopRequireDefault(_hammerjs);\n\nvar _utils = __webpack_require__(3);\n\nvar _consts = __webpack_require__(0);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Hammer helps you add support for touch gestures to your page\n *\n * @external Hammer\n * @see {@link http://hammerjs.github.io|Hammer.JS}\n * @see {@link http://hammerjs.github.io/jsdoc/Hammer.html|Hammer.JS API documents}\n * @see Hammer.JS applies specific CSS properties by {@link http://hammerjs.github.io/jsdoc/Hammer.defaults.cssProps.html|default} when creating an instance. The eg.MovableCoord module removes all default CSS properties provided by Hammer.JS\n */\nif (typeof _hammerjs2.default === \"undefined\") {\n\tthrow new Error(\"The Hammerjs must be loaded before eg.MovableCoord.\\nhttp://hammerjs.github.io/\");\n}\n\nvar HammerManager = function () {\n\tfunction HammerManager() {\n\t\t_classCallCheck(this, HammerManager);\n\n\t\tthis._hammers = {};\n\t}\n\n\tHammerManager.createHammer = function createHammer(el, bindOptions, inputClass, handler) {\n\t\ttry {\n\t\t\t// create Hammer\n\t\t\treturn HammerManager.attachHammerEvents(new _hammerjs2.default.Manager(el, {\n\t\t\t\trecognizers: [[_hammerjs2.default.Pan, {\n\t\t\t\t\tdirection: bindOptions.direction,\n\t\t\t\t\tthreshold: 0\n\t\t\t\t}]],\n\n\t\t\t\t// css properties were removed due to usablility issue\n\t\t\t\t// http://hammerjs.github.io/jsdoc/Hammer.defaults.cssProps.html\n\t\t\t\tcssProps: {\n\t\t\t\t\tuserSelect: \"none\",\n\t\t\t\t\ttouchSelect: \"none\",\n\t\t\t\t\ttouchCallout: \"none\",\n\t\t\t\t\tuserDrag: \"none\"\n\t\t\t\t},\n\t\t\t\tinputClass: inputClass\n\t\t\t}), bindOptions, handler);\n\t\t} catch (e) {\n\t\t\treturn null;\n\t\t}\n\t};\n\n\tHammerManager.attachHammerEvents = function attachHammerEvents(hammer, options, handler) {\n\t\tvar enable = hammer.get(\"pan\").options.enable;\n\n\t\t/* eslint-disable no-underscore-dangle */\n\t\treturn hammer.on(\"hammer.input\", function (e) {\n\t\t\tif (e.isFirst) {\n\t\t\t\t// apply options each\n\t\t\t\thandler._setCurrentTarget(hammer, options);\n\t\t\t\tenable && handler._start(e);\n\t\t\t} else if (e.isFinal) {\n\t\t\t\t// substitute .on(\"panend tap\", this._panend); Because it(tap, panend) cannot catch vertical(horizontal) movement on HORIZONTAL(VERTICAL) mode.\n\t\t\t\tenable && handler._end(e);\n\t\t\t}\n\t\t}).on(\"panstart panmove\", function (e) {\n\t\t\treturn handler._move(e);\n\t\t});\n\t\t/* eslint-enable no-underscore-dangle */\n\t};\n\n\tHammerManager.detachHammerEvents = function detachHammerEvents(hammer) {\n\t\thammer.off(\"hammer.input panstart panmove panend\");\n\t};\n\n\tHammerManager.convertInputType = function convertInputType() {\n\t\tvar inputType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n\t\tvar hasTouch = false;\n\t\tvar hasMouse = false;\n\t\tvar inputs = inputType || [];\n\n\t\tinputs.forEach(function (v) {\n\t\t\tswitch (v) {\n\t\t\t\tcase \"mouse\":\n\t\t\t\t\thasMouse = true;break;\n\t\t\t\tcase \"touch\":\n\t\t\t\t\thasTouch = _consts.SUPPORT_TOUCH;\n\t\t\t\t// no default\n\t\t\t}\n\t\t});\n\t\treturn hasTouch && _hammerjs2.default.TouchInput || hasMouse && _hammerjs2.default.MouseInput || null;\n\t};\n\n\tHammerManager.prototype.add = function add(element, options, handler) {\n\t\tvar el = (0, _utils.$)(element);\n\t\tvar keyValue = el.getAttribute(_consts.UNIQUEKEY);\n\t\tvar bindOptions = _extends({\n\t\t\tdirection: _consts.DIRECTION.DIRECTION_ALL,\n\t\t\tscale: [1, 1],\n\t\t\tthresholdAngle: 45,\n\t\t\tinterruptable: true,\n\t\t\tinputType: [\"touch\", \"mouse\"]\n\t\t}, options);\n\t\tvar inputClass = HammerManager.convertInputType(bindOptions.inputType);\n\n\t\tif (!inputClass) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (keyValue) {\n\t\t\tthis._hammers[keyValue].hammer.destroy();\n\t\t} else {\n\t\t\tkeyValue = Math.round(Math.random() * new Date().getTime());\n\t\t}\n\t\tthis._hammers[keyValue] = {\n\t\t\thammer: HammerManager.createHammer(el, bindOptions, inputClass, handler),\n\t\t\tel: el,\n\t\t\toptions: bindOptions\n\t\t};\n\t\tel.setAttribute(_consts.UNIQUEKEY, keyValue);\n\t};\n\n\tHammerManager.prototype.remove = function remove(element) {\n\t\tvar el = (0, _utils.$)(element);\n\t\tvar key = el.getAttribute(_consts.UNIQUEKEY);\n\n\t\tif (key) {\n\t\t\tvar hammer = this._hammers[key].hammer;\n\n\t\t\tHammerManager.detachHammerEvents(hammer);\n\t\t\thammer.destroy();\n\t\t\tdelete this._hammers[key];\n\t\t\tel.removeAttribute(_consts.UNIQUEKEY);\n\t\t}\n\t};\n\n\tHammerManager.prototype.getHammer = function getHammer(element) {\n\t\tvar data = this.get(element);\n\n\t\treturn data ? data.hammer : null;\n\t};\n\n\tHammerManager.prototype.get = function get(element) {\n\t\tvar el = (0, _utils.$)(element);\n\t\tvar key = el ? el.getAttribute(_consts.UNIQUEKEY) : null;\n\n\t\tif (key && this._hammers[key]) {\n\t\t\treturn this._hammers[key];\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t};\n\n\tHammerManager.prototype.inputControl = function inputControl(isEnable, element) {\n\t\tvar option = {\n\t\t\tenable: isEnable\n\t\t};\n\n\t\tif (element) {\n\t\t\tvar hammer = this.getHammer(element);\n\n\t\t\thammer && hammer.get(\"pan\").set(option);\n\t\t} else {\n\t\t\t// for multi\n\t\t\tfor (var p in this._hammers) {\n\t\t\t\tthis._hammers[p].hammer.get(\"pan\").set(option);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t};\n\n\tHammerManager.prototype.destroy = function destroy() {\n\t\tfor (var p in this._hammers) {\n\t\t\tthis.remove(this._hammers[p].el);\n\t\t}\n\t\tthis._hammers = {};\n\t};\n\n\treturn HammerManager;\n}();\n\nexports.default = HammerManager;\nmodule.exports = exports[\"default\"];\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _Coordinate = __webpack_require__(2);\n\nvar _Coordinate2 = _interopRequireDefault(_Coordinate);\n\nvar _browser = __webpack_require__(1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nexports.default = function (superclass) {\n\treturn function (_superclass) {\n\t\t_inherits(_class, _superclass);\n\n\t\tfunction _class() {\n\t\t\t_classCallCheck(this, _class);\n\n\t\t\tvar _this = _possibleConstructorReturn(this, _superclass.call(this));\n\n\t\t\t_this._raf = null;\n\t\t\t_this._animateParam = null;\n\t\t\t_this._animationEnd = _this._animationEnd.bind(_this); // for caching\n\t\t\t_this._restore = _this._restore.bind(_this); // for caching\n\t\t\treturn _this;\n\t\t}\n\n\t\t_class.prototype._grab = function _grab(min, max, circular) {\n\t\t\tif (this._animateParam) {\n\t\t\t\tthis.trigger(\"animationEnd\");\n\t\t\t\tvar orgPos = this.get();\n\n\t\t\t\tvar pos = _Coordinate2.default.getCircularPos(this.get(), min, max, circular);\n\n\t\t\t\tif (pos[0] !== orgPos[0] || pos[1] !== orgPos[1]) {\n\t\t\t\t\tthis._setPosAndTriggerChange(pos, true);\n\t\t\t\t}\n\t\t\t\tthis._animateParam = null;\n\t\t\t\tthis._raf && _browser.window.cancelAnimationFrame(this._raf);\n\t\t\t\tthis._raf = null;\n\t\t\t}\n\t\t};\n\n\t\t_class.prototype._prepareParam = function _prepareParam(absPos, duration, hammerEvent) {\n\t\t\tvar pos = this.get();\n\t\t\tvar min = this.options.min;\n\t\t\tvar max = this.options.max;\n\t\t\tvar circular = this.options.circular;\n\t\t\tvar maximumDuration = this.options.maximumDuration;\n\t\t\tvar destPos = _Coordinate2.default.getPointOfIntersection(pos, absPos, min, max, circular, this.options.bounce);\n\n\t\t\tdestPos = _Coordinate2.default.isOutToOut(pos, destPos, min, max) ? pos : destPos;\n\n\t\t\tvar distance = [Math.abs(destPos[0] - pos[0]), Math.abs(destPos[1] - pos[1])];\n\t\t\tvar newDuration = duration == null ? _Coordinate2.default.getDurationFromPos(distance, this.options.deceleration) : duration;\n\n\t\t\tnewDuration = maximumDuration > newDuration ? newDuration : maximumDuration;\n\t\t\treturn {\n\t\t\t\tdepaPos: pos.concat(),\n\t\t\t\tdestPos: destPos.concat(),\n\t\t\t\tisBounce: _Coordinate2.default.isOutside(destPos, min, max),\n\t\t\t\tisCircular: _Coordinate2.default.isCircular(absPos, min, max, circular),\n\t\t\t\tduration: newDuration,\n\t\t\t\tdistance: distance,\n\t\t\t\thammerEvent: hammerEvent || null,\n\t\t\t\tdone: this._animationEnd\n\t\t\t};\n\t\t};\n\n\t\t_class.prototype._restore = function _restore(complete, hammerEvent) {\n\t\t\tvar pos = this.get();\n\t\t\tvar min = this.options.min;\n\t\t\tvar max = this.options.max;\n\n\t\t\tthis._animate(this._prepareParam([Math.min(max[0], Math.max(min[0], pos[0])), Math.min(max[1], Math.max(min[1], pos[1]))], null, hammerEvent), complete);\n\t\t};\n\n\t\t_class.prototype._animationEnd = function _animationEnd() {\n\t\t\tthis._animateParam = null;\n\t\t\tvar orgPos = this.get();\n\t\t\tvar nextPos = _Coordinate2.default.getCircularPos([Math.round(orgPos[0]), Math.round(orgPos[1])], this.options.min, this.options.max, this.options.circular);\n\n\t\t\tthis.setTo.apply(this, nextPos);\n\t\t\tthis._setInterrupt(false);\n\t\t\t/**\n    * This event is fired when animation ends.\n    * @ko 에니메이션이 끝났을 때 발생한다.\n    * @name eg.MovableCoord#animationEnd\n    * @event\n    */\n\t\t\tthis.trigger(\"animationEnd\");\n\t\t};\n\n\t\t_class.prototype._animate = function _animate(param, complete) {\n\t\t\tthis._animateParam = _extends({}, param);\n\t\t\tthis._animateParam.startTime = new Date().getTime();\n\t\t\tif (param.duration) {\n\t\t\t\tvar info = this._animateParam;\n\t\t\t\tvar self = this;\n\n\t\t\t\t(function loop() {\n\t\t\t\t\t/* eslint-disable no-underscore-dangle */\n\t\t\t\t\tself._raf = null;\n\t\t\t\t\tif (self._frame(info) >= 1) {\n\t\t\t\t\t\t// deferred.resolve();\n\t\t\t\t\t\tcomplete();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} // animationEnd\n\t\t\t\t\tself._raf = _browser.window.requestAnimationFrame(loop);\n\t\t\t\t\t/* eslint-enable no-underscore-dangle */\n\t\t\t\t})();\n\t\t\t} else {\n\t\t\t\tthis._setPosAndTriggerChange(param.destPos, false);\n\t\t\t\tcomplete();\n\t\t\t}\n\t\t};\n\n\t\t_class.prototype._animateTo = function _animateTo(absPos, duration, hammerEvent) {\n\t\t\tvar _this2 = this;\n\n\t\t\tvar param = this._prepareParam(absPos, duration, hammerEvent);\n\t\t\tvar retTrigger = this.trigger(\"animationStart\", param);\n\n\t\t\t// You can't stop the 'animationStart' event when 'circular' is true.\n\t\t\tif (param.isCircular && !retTrigger) {\n\t\t\t\tthrow new Error(\"You can't stop the 'animation' event when 'circular' is true.\");\n\t\t\t}\n\n\t\t\tif (retTrigger) {\n\t\t\t\tvar queue = [];\n\t\t\t\tvar dequeue = function dequeue() {\n\t\t\t\t\tvar task = queue.shift();\n\n\t\t\t\t\ttask && task.call(this);\n\t\t\t\t};\n\n\t\t\t\tif (param.depaPos[0] !== param.destPos[0] || param.depaPos[1] !== param.destPos[1]) {\n\t\t\t\t\tqueue.push(function () {\n\t\t\t\t\t\treturn _this2._animate(param, dequeue);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tif (_Coordinate2.default.isOutside(param.destPos, this.options.min, this.options.max)) {\n\t\t\t\t\tqueue.push(function () {\n\t\t\t\t\t\treturn _this2._restore(dequeue, hammerEvent);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tqueue.push(function () {\n\t\t\t\t\treturn _this2._animationEnd();\n\t\t\t\t});\n\t\t\t\tdequeue();\n\t\t\t}\n\t\t};\n\n\t\t// animation frame (0~1)\n\n\n\t\t_class.prototype._frame = function _frame(param) {\n\t\t\tvar curTime = new Date() - param.startTime;\n\t\t\tvar easingPer = this._easing(curTime / param.duration);\n\t\t\tvar pos = [param.depaPos[0], param.depaPos[1]];\n\n\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\tpos[i] !== param.destPos[i] && (pos[i] += (param.destPos[i] - pos[i]) * easingPer);\n\t\t\t}\n\t\t\tpos = _Coordinate2.default.getCircularPos(pos, this.options.min, this.options.max, this.options.circular);\n\t\t\tthis._setPosAndTriggerChange(pos, false);\n\t\t\treturn easingPer;\n\t\t};\n\n\t\t// trigger 'change' event\n\n\n\t\t_class.prototype._setPosAndTriggerChange = function _setPosAndTriggerChange(position, holding, e) {\n\t\t\t/**\n    * This event is fired when coordinate changes.\n    * @ko 좌표가 변경됐을 때 발생하는 이벤트\n    * @name eg.MovableCoord#change\n    * @event\n    *\n    * @param {Object} param The object of data to be sent when the event is fired <ko>이벤트가 발생할 때 전달되는 데이터 객체</ko>\n    * @param {Array} param.position departure coordinate  <ko>좌표</ko>\n    * @param {Number} param.position.0 The X coordinate <ko>x 좌표</ko>\n    * @param {Number} param.pos.1 The Y coordinate <ko>y 좌표</ko>\n    * @param {Boolean} param.holding Indicates whether a user holds an element on the screen of the device.<ko>사용자가 기기의 화면을 누르고 있는지 여부</ko>\n    * @param {Object} param.hammerEvent The event information of Hammer.JS. It returns null if the event is fired through a call to the setTo() or setBy() method.<ko>Hammer.JS의 이벤트 정보. setTo() 메서드나 setBy() 메서드를 호출해 이벤트가 발생했을 때는 'null'을 반환한다.</ko>\n    *\n    */\n\t\t\tthis._pos = position.concat();\n\t\t\tthis.trigger(\"change\", {\n\t\t\t\tpos: position.concat(),\n\t\t\t\tholding: holding,\n\t\t\t\thammerEvent: e || null\n\t\t\t});\n\t\t};\n\n\t\t_class.prototype._easing = function _easing(p) {\n\t\t\treturn p > 1 ? 1 : this.options.easing(p);\n\t\t};\n\n\t\t/**\n   * Moves an element to specific coordinates.\n   * @ko 좌표를 이동한다.\n   * @method eg.MovableCoord#setTo\n   * @param {Number} x The X coordinate to move to <ko>이동할 x좌표</ko>\n   * @param {Number} y The Y coordinate to move to  <ko>이동할 y좌표</ko>\n   * @param {Number} [duration=0] Duration of the animation (unit: ms) <ko>애니메이션 진행 시간(단위: ms)</ko>\n   * @return {eg.MovableCoord} An instance of a module itself <ko>자신의 인스턴스</ko>\n   */\n\n\n\t\t_class.prototype.setTo = function setTo(x, y) {\n\t\t\tvar duration = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n\t\t\tvar toX = x;\n\t\t\tvar toY = y;\n\t\t\tvar min = this.options.min;\n\t\t\tvar max = this.options.max;\n\t\t\tvar circular = this.options.circular;\n\n\t\t\tthis._grab(min, max, circular);\n\t\t\tvar pos = this.get();\n\n\t\t\tif (x === pos[0] && y === pos[1]) {\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tthis._setInterrupt(true);\n\t\t\tif (x !== pos[0]) {\n\t\t\t\tif (!circular[3]) {\n\t\t\t\t\ttoX = Math.max(min[0], toX);\n\t\t\t\t}\n\t\t\t\tif (!circular[1]) {\n\t\t\t\t\ttoX = Math.min(max[0], toX);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (y !== pos[1]) {\n\t\t\t\tif (!circular[0]) {\n\t\t\t\t\ttoY = Math.max(min[1], toY);\n\t\t\t\t}\n\t\t\t\tif (!circular[2]) {\n\t\t\t\t\ttoY = Math.min(max[1], toY);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (duration) {\n\t\t\t\tthis._animateTo([toX, toY], duration);\n\t\t\t} else {\n\t\t\t\tthis._pos = _Coordinate2.default.getCircularPos([toX, toY], min, max, circular);\n\t\t\t\tthis._setPosAndTriggerChange(this._pos, false);\n\t\t\t\tthis._setInterrupt(false);\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n   * Moves an element from the current coordinates to specific coordinates. The change event is fired when the method is executed.\n   * @ko 현재 좌표를 기준으로 좌표를 이동한다. 메서드가 실행되면 change 이벤트가 발생한다\n   * @method eg.MovableCoord#setBy\n   * @param {Number} x The X coordinate to move to <ko>이동할 x좌표</ko>\n   * @param {Number} y The Y coordinate to move to <ko>이동할 y좌표</ko>\n   * @param {Number} [duration=0] Duration of the animation (unit: ms) <ko>애니메이션 진행 시간(단위: ms)</ko>\n   * @return {eg.MovableCoord} An instance of a module itself <ko>자신의 인스턴스</ko>\n   */\n\n\n\t\t_class.prototype.setBy = function setBy(x, y) {\n\t\t\tvar duration = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n\t\t\treturn this.setTo(x != null ? this._pos[0] + x : this._pos[0], y != null ? this._pos[1] + y : this._pos[1], duration);\n\t\t};\n\n\t\treturn _class;\n\t}(superclass);\n};\n\nmodule.exports = exports[\"default\"];\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _Coordinate = __webpack_require__(2);\n\nvar _Coordinate2 = _interopRequireDefault(_Coordinate);\n\nvar _consts = __webpack_require__(0);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nexports.default = function (superclass) {\n\treturn function (_superclass) {\n\t\t_inherits(_class, _superclass);\n\n\t\tfunction _class() {\n\t\t\t_classCallCheck(this, _class);\n\n\t\t\tvar _this = _possibleConstructorReturn(this, _superclass.call(this));\n\n\t\t\t_this._status = {\n\t\t\t\tgrabOutside: false, // check whether user's action started on outside\n\t\t\t\tcurrentHammer: null, // current hammer instance\n\t\t\t\tcurrentOptions: {}, // current bind options\n\t\t\t\tmoveDistance: null, // a position of the first user's action\n\t\t\t\tprevented: false };\n\t\t\treturn _this;\n\t\t}\n\n\t\t_class.prototype._setCurrentTarget = function _setCurrentTarget(hammer, options) {\n\t\t\tthis._status.currentOptions = options;\n\t\t\tthis._status.currentHanmmer = hammer;\n\t\t};\n\n\t\t// panstart event handler\n\n\n\t\t_class.prototype._start = function _start(e) {\n\t\t\tif (!this._status.currentOptions.interruptable && this._status.prevented) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar pos = this.get();\n\t\t\tvar min = this.options.min;\n\t\t\tvar max = this.options.max;\n\n\t\t\tthis._setInterrupt(true);\n\t\t\tthis._grab(min, max, this.options.circular);\n\t\t\t/**\n    * This event is fired when a user holds an element on the screen of the device.\n    * @ko 사용자가 기기의 화면에 손을 대고 있을 때 발생하는 이벤트\n    * @event eg.MovableCoord#hold\n    * @param {Object} param The object of data to be sent when the event is fired<ko>이벤트가 발생할 때 전달되는 데이터 객체</ko>\n    * @param {Array} param.pos coordinate <ko>좌표 정보</ko>\n    * @param {Number} param.pos.0 The X coordinate<ko>x 좌표</ko>\n    * @param {Number} param.pos.1 The Y coordinate<ko>y 좌표</ko>\n    * @param {Object} param.hammerEvent The event information of Hammer.JS. It returns null if the event is fired through a call to the setTo() or setBy() method.<ko>Hammer.JS의 이벤트 정보. setTo() 메서드나 setBy() 메서드를 호출해 이벤트가 발생했을 때는 'null'을 반환한다.</ko>\n    *\n    */\n\t\t\tthis.trigger(\"hold\", {\n\t\t\t\tpos: pos.concat(),\n\t\t\t\thammerEvent: e\n\t\t\t});\n\n\t\t\tthis._status.moveDistance = pos.concat();\n\t\t\tthis._status.grabOutside = _Coordinate2.default.isOutside(pos, min, max);\n\t\t};\n\n\t\t// panmove event handler\n\n\n\t\t_class.prototype._move = function _move(e) {\n\t\t\tif (!this._isInterrupting() || !this._status.moveDistance) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar pos = this.get(true);\n\t\t\tvar min = this.options.min;\n\t\t\tvar max = this.options.max;\n\t\t\tvar bounce = this.options.bounce;\n\t\t\tvar margin = this.options.margin;\n\t\t\tvar currentOptions = this._status.currentOptions;\n\t\t\tvar direction = currentOptions.direction;\n\t\t\tvar scale = currentOptions.scale;\n\t\t\tvar userDirection = _Coordinate2.default.getDirectionByAngle(e.angle, currentOptions.thresholdAngle);\n\t\t\tvar out = [margin[0] + bounce[0], margin[1] + bounce[1], margin[2] + bounce[2], margin[3] + bounce[3]];\n\t\t\tvar prevent = false;\n\n\t\t\t// not support offset properties in Hammerjs - start\n\t\t\tvar prevInput = this._status.currentHanmmer.session.prevInput;\n\n\t\t\t/* eslint-disable no-param-reassign */\n\t\t\tif (prevInput) {\n\t\t\t\te.offsetX = e.deltaX - prevInput.deltaX;\n\t\t\t\te.offsetY = e.deltaY - prevInput.deltaY;\n\t\t\t} else {\n\t\t\t\te.offsetX = 0;\n\t\t\t\te.offsetY = 0;\n\t\t\t}\n\n\t\t\t// not support offset properties in Hammerjs - end\n\t\t\tif (_Coordinate2.default.isHorizontal(direction, userDirection)) {\n\t\t\t\tthis._status.moveDistance[0] += e.offsetX * scale[0];\n\t\t\t\tprevent = true;\n\t\t\t}\n\t\t\tif (_Coordinate2.default.isVertical(direction, userDirection)) {\n\t\t\t\tthis._status.moveDistance[1] += e.offsetY * scale[1];\n\t\t\t\tprevent = true;\n\t\t\t}\n\t\t\tif (prevent) {\n\t\t\t\te.srcEvent.preventDefault();\n\t\t\t\te.srcEvent.stopPropagation();\n\t\t\t}\n\t\t\te.preventSystemEvent = prevent;\n\t\t\t/* eslint-enable no-param-reassign */\n\n\t\t\tpos[0] = this._status.moveDistance[0];\n\t\t\tpos[1] = this._status.moveDistance[1];\n\t\t\tpos = _Coordinate2.default.getCircularPos(pos, min, max, this.options.circular);\n\n\t\t\t// from outside to inside\n\t\t\tif (this._status.grabOutside && !_Coordinate2.default.isOutside(pos, min, max)) {\n\t\t\t\tthis._status.grabOutside = false;\n\t\t\t}\n\n\t\t\t// when move pointer is held in outside\n\t\t\tvar tv = void 0;\n\t\t\tvar tn = void 0;\n\t\t\tvar tx = void 0;\n\n\t\t\tif (this._status.grabOutside) {\n\t\t\t\ttn = min[0] - out[3];\n\t\t\t\ttx = max[0] + out[1];\n\t\t\t\ttv = pos[0];\n\t\t\t\t/* eslint-disable no-nested-ternary */\n\t\t\t\tpos[0] = tv > tx ? tx : tv < tn ? tn : tv;\n\t\t\t\ttn = min[1] - out[0];\n\t\t\t\ttx = max[1] + out[2];\n\t\t\t\ttv = pos[1];\n\t\t\t\tpos[1] = tv > tx ? tx : tv < tn ? tn : tv;\n\t\t\t\t/* eslint-enable no-nested-ternary */\n\t\t\t} else {\n\t\t\t\t// when start pointer is held in inside\n\t\t\t\t// get a initialization slope value to prevent smooth animation.\n\t\t\t\tvar initSlope = this._easing(0.00001) / 0.00001;\n\n\t\t\t\tif (pos[1] < min[1]) {\n\t\t\t\t\t// up\n\t\t\t\t\ttv = (min[1] - pos[1]) / (out[0] * initSlope);\n\t\t\t\t\tpos[1] = min[1] - this._easing(tv) * out[0];\n\t\t\t\t} else if (pos[1] > max[1]) {\n\t\t\t\t\t// down\n\t\t\t\t\ttv = (pos[1] - max[1]) / (out[2] * initSlope);\n\t\t\t\t\tpos[1] = max[1] + this._easing(tv) * out[2];\n\t\t\t\t}\n\t\t\t\tif (pos[0] < min[0]) {\n\t\t\t\t\t// left\n\t\t\t\t\ttv = (min[0] - pos[0]) / (out[3] * initSlope);\n\t\t\t\t\tpos[0] = min[0] - this._easing(tv) * out[3];\n\t\t\t\t} else if (pos[0] > max[0]) {\n\t\t\t\t\t// right\n\t\t\t\t\ttv = (pos[0] - max[0]) / (out[1] * initSlope);\n\t\t\t\t\tpos[0] = max[0] + this._easing(tv) * out[1];\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._setPosAndTriggerChange(pos, true, e);\n\t\t};\n\n\t\t// panend event handler\n\n\n\t\t_class.prototype._end = function _end(e) {\n\t\t\tvar pos = this.get();\n\n\t\t\tif (!this._isInterrupting() || !this._status.moveDistance) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Abort the animating post process when \"tap\" occurs\n\t\t\tif (e.distance === 0 /* e.type === \"tap\" */) {\n\t\t\t\t\tthis._setInterrupt(false);\n\t\t\t\t\tthis.trigger(\"release\", {\n\t\t\t\t\t\tdepaPos: pos.concat(),\n\t\t\t\t\t\tdestPos: pos.concat(),\n\t\t\t\t\t\thammerEvent: e || null\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\tvar direction = this._status.currentOptions.direction;\n\t\t\t\tvar scale = this._status.currentOptions.scale;\n\t\t\t\tvar vX = Math.abs(e.velocityX);\n\t\t\t\tvar vY = Math.abs(e.velocityY);\n\n\t\t\t\t!(direction & _consts.DIRECTION.DIRECTION_HORIZONTAL) && (vX = 0);\n\t\t\t\t!(direction & _consts.DIRECTION.DIRECTION_VERTICAL) && (vY = 0);\n\n\t\t\t\tvar offset = _Coordinate2.default.getNextOffsetPos([vX * (e.deltaX < 0 ? -1 : 1) * scale[0], vY * (e.deltaY < 0 ? -1 : 1) * scale[1]], this.options.deceleration);\n\t\t\t\tvar destPos = [pos[0] + offset[0], pos[1] + offset[1]];\n\n\t\t\t\tdestPos = _Coordinate2.default.getPointOfIntersection(pos, destPos, this.options.min, this.options.max, this.options.circular, this.options.bounce);\n\t\t\t\t/**\n     * This event is fired when a user release an element on the screen of the device.\n     * @ko 사용자가 기기의 화면에서 손을 뗐을 때 발생하는 이벤트\n     * @event eg.MovableCoord#release\n     *\n     * @param {Object} param The object of data to be sent when the event is fired<ko>이벤트가 발생할 때 전달되는 데이터 객체</ko>\n     * @param {Array} param.depaPos The coordinates when releasing an element<ko>손을 뗐을 때의 좌표현재 </ko>\n     * @param {Number} param.depaPos.0 The X coordinate <ko> x 좌표</ko>\n     * @param {Number} param.depaPos.1 The Y coordinate <ko> y 좌표</ko>\n     * @param {Array} param.destPos The coordinates to move to after releasing an element<ko>손을 뗀 뒤에 이동할 좌표</ko>\n     * @param {Number} param.destPos.0 The X coordinate <ko>x 좌표</ko>\n     * @param {Number} param.destPos.1 The Y coordinate <ko>y 좌표</ko>\n     * @param {Object} param.hammerEvent The event information of Hammer.JS. It returns null if the event is fired through a call to the setTo() or setBy() method.<ko>Hammer.JS의 이벤트 정보. setTo() 메서드나 setBy() 메서드를 호출해 이벤트가 발생했을 때는 'null'을 반환한다</ko>\n     *\n     */\n\t\t\t\tthis.trigger(\"release\", {\n\t\t\t\t\tdepaPos: pos.concat(),\n\t\t\t\t\tdestPos: destPos,\n\t\t\t\t\thammerEvent: e || null\n\t\t\t\t});\n\t\t\t\tif (pos[0] !== destPos[0] || pos[1] !== destPos[1]) {\n\t\t\t\t\tthis._animateTo(destPos, null, e || null);\n\t\t\t\t} else {\n\t\t\t\t\tthis._setInterrupt(false);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._status.moveDistance = null;\n\t\t};\n\n\t\t_class.prototype._isInterrupting = function _isInterrupting() {\n\t\t\t// when interruptable is 'true', return value is always 'true'.\n\t\t\treturn this._status.currentOptions.interruptable || this._status.prevented;\n\t\t};\n\n\t\t_class.prototype._setInterrupt = function _setInterrupt(prevented) {\n\t\t\t!this._status.currentOptions.interruptable && (this._status.prevented = prevented);\n\t\t};\n\n\t\treturn _class;\n\t}(superclass);\n};\n\nmodule.exports = exports[\"default\"];\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _MovableCoord = __webpack_require__(4);\n\nvar _MovableCoord2 = _interopRequireDefault(_MovableCoord);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_MovableCoord2.default.VERSION = \"2.0.0-rc.2\";\nmodule.exports = _MovableCoord2.default;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_9__;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_10__;\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=movablecoord.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@egjs/movablecoord/dist/movablecoord.js\n// module id = 4\n// module chunks = 0 1","/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.7';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n        if (handler === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    var prop;\n    each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) {\n        manager.oldCssProps = {};\n    }\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (typeof define === 'function' && define.amd) {\n    define(function() {\n        return Hammer;\n    });\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/hammerjs/hammer.js\n// module id = 5\n// module chunks = 0 1"],"sourceRoot":""}